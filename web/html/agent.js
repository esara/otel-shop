/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_BATCH_OBSERVER = exports.NOOP_SUM_OBSERVER_METRIC = exports.NOOP_UP_DOWN_SUM_OBSERVER_METRIC = exports.NOOP_VALUE_OBSERVER_METRIC = exports.NOOP_BOUND_BASE_OBSERVER = exports.NOOP_VALUE_RECORDER_METRIC = exports.NOOP_BOUND_VALUE_RECORDER = exports.NOOP_COUNTER_METRIC = exports.NOOP_BOUND_COUNTER = exports.NOOP_METER = exports.NoopBoundBaseObserver = exports.NoopBoundValueRecorder = exports.NoopBoundCounter = exports.NoopBatchObserver = exports.NoopBaseObserverMetric = exports.NoopValueRecorderMetric = exports.NoopCounterMetric = exports.NoopMetric = exports.NoopMeter = void 0;\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */ (function () {\n    function NoopMeter() {\n    }\n    /**\n     * Returns constant noop value recorder.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createValueRecorder = function (_name, _options) {\n        return exports.NOOP_VALUE_RECORDER_METRIC;\n    };\n    /**\n     * Returns a constant noop counter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createCounter = function (_name, _options) {\n        return exports.NOOP_COUNTER_METRIC;\n    };\n    /**\n     * Returns a constant noop UpDownCounter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n        return exports.NOOP_COUNTER_METRIC;\n    };\n    /**\n     * Returns constant noop value observer.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the value observer callback\n     */\n    NoopMeter.prototype.createValueObserver = function (_name, _options, _callback) {\n        return exports.NOOP_VALUE_OBSERVER_METRIC;\n    };\n    /**\n     * Returns constant noop sum observer.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the sum observer callback\n     */\n    NoopMeter.prototype.createSumObserver = function (_name, _options, _callback) {\n        return exports.NOOP_SUM_OBSERVER_METRIC;\n    };\n    /**\n     * Returns constant noop up down sum observer.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the up down sum observer callback\n     */\n    NoopMeter.prototype.createUpDownSumObserver = function (_name, _options, _callback) {\n        return exports.NOOP_UP_DOWN_SUM_OBSERVER_METRIC;\n    };\n    /**\n     * Returns constant noop batch observer.\n     * @param name the name of the metric.\n     * @param callback the batch observer callback\n     */\n    NoopMeter.prototype.createBatchObserver = function (_callback) {\n        return exports.NOOP_BATCH_OBSERVER;\n    };\n    return NoopMeter;\n}());\nexports.NoopMeter = NoopMeter;\nvar NoopMetric = /** @class */ (function () {\n    function NoopMetric(instrument) {\n        this._instrument = instrument;\n    }\n    /**\n     * Returns a Bound Instrument associated with specified Labels.\n     * It is recommended to keep a reference to the Bound Instrument instead of\n     * always calling this method for every operations.\n     * @param labels key-values pairs that are associated with a specific metric\n     *     that you want to record.\n     */\n    NoopMetric.prototype.bind = function (_labels) {\n        return this._instrument;\n    };\n    /**\n     * Removes the Binding from the metric, if it is present.\n     * @param labels key-values pairs that are associated with a specific metric.\n     */\n    NoopMetric.prototype.unbind = function (_labels) {\n        return;\n    };\n    /**\n     * Clears all timeseries from the Metric.\n     */\n    NoopMetric.prototype.clear = function () {\n        return;\n    };\n    return NoopMetric;\n}());\nexports.NoopMetric = NoopMetric;\nvar NoopCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopCounterMetric, _super);\n    function NoopCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopCounterMetric.prototype.add = function (value, labels) {\n        this.bind(labels).add(value);\n    };\n    return NoopCounterMetric;\n}(NoopMetric));\nexports.NoopCounterMetric = NoopCounterMetric;\nvar NoopValueRecorderMetric = /** @class */ (function (_super) {\n    __extends(NoopValueRecorderMetric, _super);\n    function NoopValueRecorderMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopValueRecorderMetric.prototype.record = function (value, labels) {\n        this.bind(labels).record(value);\n    };\n    return NoopValueRecorderMetric;\n}(NoopMetric));\nexports.NoopValueRecorderMetric = NoopValueRecorderMetric;\nvar NoopBaseObserverMetric = /** @class */ (function (_super) {\n    __extends(NoopBaseObserverMetric, _super);\n    function NoopBaseObserverMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopBaseObserverMetric.prototype.observation = function () {\n        return {\n            observer: this,\n            value: 0,\n        };\n    };\n    return NoopBaseObserverMetric;\n}(NoopMetric));\nexports.NoopBaseObserverMetric = NoopBaseObserverMetric;\nvar NoopBatchObserver = /** @class */ (function () {\n    function NoopBatchObserver() {\n    }\n    return NoopBatchObserver;\n}());\nexports.NoopBatchObserver = NoopBatchObserver;\nvar NoopBoundCounter = /** @class */ (function () {\n    function NoopBoundCounter() {\n    }\n    NoopBoundCounter.prototype.add = function (_value) {\n        return;\n    };\n    return NoopBoundCounter;\n}());\nexports.NoopBoundCounter = NoopBoundCounter;\nvar NoopBoundValueRecorder = /** @class */ (function () {\n    function NoopBoundValueRecorder() {\n    }\n    NoopBoundValueRecorder.prototype.record = function (_value, _baggage, _spanContext) {\n        return;\n    };\n    return NoopBoundValueRecorder;\n}());\nexports.NoopBoundValueRecorder = NoopBoundValueRecorder;\nvar NoopBoundBaseObserver = /** @class */ (function () {\n    function NoopBoundBaseObserver() {\n    }\n    NoopBoundBaseObserver.prototype.update = function (_value) { };\n    return NoopBoundBaseObserver;\n}());\nexports.NoopBoundBaseObserver = NoopBoundBaseObserver;\nexports.NOOP_METER = new NoopMeter();\nexports.NOOP_BOUND_COUNTER = new NoopBoundCounter();\nexports.NOOP_COUNTER_METRIC = new NoopCounterMetric(exports.NOOP_BOUND_COUNTER);\nexports.NOOP_BOUND_VALUE_RECORDER = new NoopBoundValueRecorder();\nexports.NOOP_VALUE_RECORDER_METRIC = new NoopValueRecorderMetric(exports.NOOP_BOUND_VALUE_RECORDER);\nexports.NOOP_BOUND_BASE_OBSERVER = new NoopBoundBaseObserver();\nexports.NOOP_VALUE_OBSERVER_METRIC = new NoopBaseObserverMetric(exports.NOOP_BOUND_BASE_OBSERVER);\nexports.NOOP_UP_DOWN_SUM_OBSERVER_METRIC = new NoopBaseObserverMetric(exports.NOOP_BOUND_BASE_OBSERVER);\nexports.NOOP_SUM_OBSERVER_METRIC = new NoopBaseObserverMetric(exports.NOOP_BOUND_BASE_OBSERVER);\nexports.NOOP_BATCH_OBSERVER = new NoopBatchObserver();\n//# sourceMappingURL=NoopMeter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_METER_PROVIDER = exports.NoopMeterProvider = void 0;\nvar NoopMeter_1 = __webpack_require__(/*! ./NoopMeter */ \"./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js\");\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */ (function () {\n    function NoopMeterProvider() {\n    }\n    NoopMeterProvider.prototype.getMeter = function (_name, _version) {\n        return NoopMeter_1.NOOP_METER;\n    };\n    return NoopMeterProvider;\n}());\nexports.NoopMeterProvider = NoopMeterProvider;\nexports.NOOP_METER_PROVIDER = new NoopMeterProvider();\n//# sourceMappingURL=NoopMeterProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL05vb3BNZXRlclByb3ZpZGVyLmpzPzc3YWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLHFGQUFhO0FBQ3ZDO0FBQ0EsNkJBQTZCLG9CQUFvQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzL2J1aWxkL3NyYy9Ob29wTWV0ZXJQcm92aWRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTk9PUF9NRVRFUl9QUk9WSURFUiA9IGV4cG9ydHMuTm9vcE1ldGVyUHJvdmlkZXIgPSB2b2lkIDA7XG52YXIgTm9vcE1ldGVyXzEgPSByZXF1aXJlKFwiLi9Ob29wTWV0ZXJcIik7XG4vKipcbiAqIEFuIGltcGxlbWVudGF0aW9uIG9mIHRoZSB7QGxpbmsgTWV0ZXJQcm92aWRlcn0gd2hpY2ggcmV0dXJucyBhbiBpbXBvdGVudCBNZXRlclxuICogZm9yIGFsbCBjYWxscyB0byBgZ2V0TWV0ZXJgXG4gKi9cbnZhciBOb29wTWV0ZXJQcm92aWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wTWV0ZXJQcm92aWRlcigpIHtcbiAgICB9XG4gICAgTm9vcE1ldGVyUHJvdmlkZXIucHJvdG90eXBlLmdldE1ldGVyID0gZnVuY3Rpb24gKF9uYW1lLCBfdmVyc2lvbikge1xuICAgICAgICByZXR1cm4gTm9vcE1ldGVyXzEuTk9PUF9NRVRFUjtcbiAgICB9O1xuICAgIHJldHVybiBOb29wTWV0ZXJQcm92aWRlcjtcbn0oKSk7XG5leHBvcnRzLk5vb3BNZXRlclByb3ZpZGVyID0gTm9vcE1ldGVyUHJvdmlkZXI7XG5leHBvcnRzLk5PT1BfTUVURVJfUFJPVklERVIgPSBuZXcgTm9vcE1ldGVyUHJvdmlkZXIoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5vb3BNZXRlclByb3ZpZGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/api/global-utils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/api/global-utils.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API_BACKWARDS_COMPATIBILITY_VERSION = exports.makeGetter = exports._global = exports.GLOBAL_METRICS_API_KEY = void 0;\nvar platform_1 = __webpack_require__(/*! ../platform */ \"./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/index.js\");\nexports.GLOBAL_METRICS_API_KEY = Symbol.for('io.opentelemetry.js.api.metrics');\nexports._global = platform_1._globalThis;\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nfunction makeGetter(requiredVersion, instance, fallback) {\n    return function (version) {\n        return version === requiredVersion ? instance : fallback;\n    };\n}\nexports.makeGetter = makeGetter;\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexports.API_BACKWARDS_COMPATIBILITY_VERSION = 3;\n//# sourceMappingURL=global-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL2FwaS9nbG9iYWwtdXRpbHMuanM/NjU4YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMsa0dBQWE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL2FwaS9nbG9iYWwtdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFQSV9CQUNLV0FSRFNfQ09NUEFUSUJJTElUWV9WRVJTSU9OID0gZXhwb3J0cy5tYWtlR2V0dGVyID0gZXhwb3J0cy5fZ2xvYmFsID0gZXhwb3J0cy5HTE9CQUxfTUVUUklDU19BUElfS0VZID0gdm9pZCAwO1xudmFyIHBsYXRmb3JtXzEgPSByZXF1aXJlKFwiLi4vcGxhdGZvcm1cIik7XG5leHBvcnRzLkdMT0JBTF9NRVRSSUNTX0FQSV9LRVkgPSBTeW1ib2wuZm9yKCdpby5vcGVudGVsZW1ldHJ5LmpzLmFwaS5tZXRyaWNzJyk7XG5leHBvcnRzLl9nbG9iYWwgPSBwbGF0Zm9ybV8xLl9nbG9iYWxUaGlzO1xuLyoqXG4gKiBNYWtlIGEgZnVuY3Rpb24gd2hpY2ggYWNjZXB0cyBhIHZlcnNpb24gaW50ZWdlciBhbmQgcmV0dXJucyB0aGUgaW5zdGFuY2Ugb2YgYW4gQVBJIGlmIHRoZSB2ZXJzaW9uXG4gKiBpcyBjb21wYXRpYmxlLCBvciBhIGZhbGxiYWNrIHZlcnNpb24gKHVzdWFsbHkgTk9PUCkgaWYgaXQgaXMgbm90LlxuICpcbiAqIEBwYXJhbSByZXF1aXJlZFZlcnNpb24gQmFja3dhcmRzIGNvbXBhdGliaWxpdHkgdmVyc2lvbiB3aGljaCBpcyByZXF1aXJlZCB0byByZXR1cm4gdGhlIGluc3RhbmNlXG4gKiBAcGFyYW0gaW5zdGFuY2UgSW5zdGFuY2Ugd2hpY2ggc2hvdWxkIGJlIHJldHVybmVkIGlmIHRoZSByZXF1aXJlZCB2ZXJzaW9uIGlzIGNvbXBhdGlibGVcbiAqIEBwYXJhbSBmYWxsYmFjayBGYWxsYmFjayBpbnN0YW5jZSwgdXN1YWxseSBOT09QLCB3aGljaCB3aWxsIGJlIHJldHVybmVkIGlmIHRoZSByZXF1aXJlZCB2ZXJzaW9uIGlzIG5vdCBjb21wYXRpYmxlXG4gKi9cbmZ1bmN0aW9uIG1ha2VHZXR0ZXIocmVxdWlyZWRWZXJzaW9uLCBpbnN0YW5jZSwgZmFsbGJhY2spIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHZlcnNpb24pIHtcbiAgICAgICAgcmV0dXJuIHZlcnNpb24gPT09IHJlcXVpcmVkVmVyc2lvbiA/IGluc3RhbmNlIDogZmFsbGJhY2s7XG4gICAgfTtcbn1cbmV4cG9ydHMubWFrZUdldHRlciA9IG1ha2VHZXR0ZXI7XG4vKipcbiAqIEEgbnVtYmVyIHdoaWNoIHNob3VsZCBiZSBpbmNyZW1lbnRlZCBlYWNoIHRpbWUgYSBiYWNrd2FyZHMgaW5jb21wYXRpYmxlXG4gKiBjaGFuZ2UgaXMgbWFkZSB0byB0aGUgQVBJLiBUaGlzIG51bWJlciBpcyB1c2VkIHdoZW4gYW4gQVBJIHBhY2thZ2VcbiAqIGF0dGVtcHRzIHRvIGFjY2VzcyB0aGUgZ2xvYmFsIEFQSSB0byBlbnN1cmUgaXQgaXMgZ2V0dGluZyBhIGNvbXBhdGlibGVcbiAqIHZlcnNpb24uIElmIHRoZSBnbG9iYWwgQVBJIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggdGhlIEFQSSBwYWNrYWdlXG4gKiBhdHRlbXB0aW5nIHRvIGdldCBpdCwgYSBOT09QIEFQSSBpbXBsZW1lbnRhdGlvbiB3aWxsIGJlIHJldHVybmVkLlxuICovXG5leHBvcnRzLkFQSV9CQUNLV0FSRFNfQ09NUEFUSUJJTElUWV9WRVJTSU9OID0gMztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbC11dGlscy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/api/global-utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/api/metrics.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/api/metrics.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetricsAPI = void 0;\nvar NoopMeterProvider_1 = __webpack_require__(/*! ../NoopMeterProvider */ \"./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js\");\nvar global_utils_1 = __webpack_require__(/*! ./global-utils */ \"./node_modules/@opentelemetry/api-metrics/build/src/api/global-utils.js\");\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nvar MetricsAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function MetricsAPI() {\n    }\n    /** Get the singleton instance of the Metrics API */\n    MetricsAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new MetricsAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global meter. Returns the initialized global meter provider.\n     */\n    MetricsAPI.prototype.setGlobalMeterProvider = function (provider) {\n        if (global_utils_1._global[global_utils_1.GLOBAL_METRICS_API_KEY]) {\n            // global meter provider has already been set\n            return this.getMeterProvider();\n        }\n        global_utils_1._global[global_utils_1.GLOBAL_METRICS_API_KEY] = global_utils_1.makeGetter(global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION, provider, NoopMeterProvider_1.NOOP_METER_PROVIDER);\n        return provider;\n    };\n    /**\n     * Returns the global meter provider.\n     */\n    MetricsAPI.prototype.getMeterProvider = function () {\n        var _a, _b;\n        return ((_b = (_a = global_utils_1._global[global_utils_1.GLOBAL_METRICS_API_KEY]) === null || _a === void 0 ? void 0 : _a.call(global_utils_1._global, global_utils_1.API_BACKWARDS_COMPATIBILITY_VERSION)) !== null && _b !== void 0 ? _b : NoopMeterProvider_1.NOOP_METER_PROVIDER);\n    };\n    /**\n     * Returns a meter from the global meter provider.\n     */\n    MetricsAPI.prototype.getMeter = function (name, version) {\n        return this.getMeterProvider().getMeter(name, version);\n    };\n    /** Remove the global meter provider */\n    MetricsAPI.prototype.disable = function () {\n        delete global_utils_1._global[global_utils_1.GLOBAL_METRICS_API_KEY];\n    };\n    return MetricsAPI;\n}());\nexports.MetricsAPI = MetricsAPI;\n//# sourceMappingURL=metrics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL2FwaS9tZXRyaWNzLmpzPzNmZTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLDBCQUEwQixtQkFBTyxDQUFDLHNHQUFzQjtBQUN4RCxxQkFBcUIsbUJBQU8sQ0FBQywrRkFBZ0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGktbWV0cmljcy9idWlsZC9zcmMvYXBpL21ldHJpY3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1ldHJpY3NBUEkgPSB2b2lkIDA7XG52YXIgTm9vcE1ldGVyUHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuLi9Ob29wTWV0ZXJQcm92aWRlclwiKTtcbnZhciBnbG9iYWxfdXRpbHNfMSA9IHJlcXVpcmUoXCIuL2dsb2JhbC11dGlsc1wiKTtcbi8qKlxuICogU2luZ2xldG9uIG9iamVjdCB3aGljaCByZXByZXNlbnRzIHRoZSBlbnRyeSBwb2ludCB0byB0aGUgT3BlblRlbGVtZXRyeSBNZXRyaWNzIEFQSVxuICovXG52YXIgTWV0cmljc0FQSSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKiogRW1wdHkgcHJpdmF0ZSBjb25zdHJ1Y3RvciBwcmV2ZW50cyBlbmQgdXNlcnMgZnJvbSBjb25zdHJ1Y3RpbmcgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIEFQSSAqL1xuICAgIGZ1bmN0aW9uIE1ldHJpY3NBUEkoKSB7XG4gICAgfVxuICAgIC8qKiBHZXQgdGhlIHNpbmdsZXRvbiBpbnN0YW5jZSBvZiB0aGUgTWV0cmljcyBBUEkgKi9cbiAgICBNZXRyaWNzQVBJLmdldEluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBNZXRyaWNzQVBJKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBjdXJyZW50IGdsb2JhbCBtZXRlci4gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgZ2xvYmFsIG1ldGVyIHByb3ZpZGVyLlxuICAgICAqL1xuICAgIE1ldHJpY3NBUEkucHJvdG90eXBlLnNldEdsb2JhbE1ldGVyUHJvdmlkZXIgPSBmdW5jdGlvbiAocHJvdmlkZXIpIHtcbiAgICAgICAgaWYgKGdsb2JhbF91dGlsc18xLl9nbG9iYWxbZ2xvYmFsX3V0aWxzXzEuR0xPQkFMX01FVFJJQ1NfQVBJX0tFWV0pIHtcbiAgICAgICAgICAgIC8vIGdsb2JhbCBtZXRlciBwcm92aWRlciBoYXMgYWxyZWFkeSBiZWVuIHNldFxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TWV0ZXJQcm92aWRlcigpO1xuICAgICAgICB9XG4gICAgICAgIGdsb2JhbF91dGlsc18xLl9nbG9iYWxbZ2xvYmFsX3V0aWxzXzEuR0xPQkFMX01FVFJJQ1NfQVBJX0tFWV0gPSBnbG9iYWxfdXRpbHNfMS5tYWtlR2V0dGVyKGdsb2JhbF91dGlsc18xLkFQSV9CQUNLV0FSRFNfQ09NUEFUSUJJTElUWV9WRVJTSU9OLCBwcm92aWRlciwgTm9vcE1ldGVyUHJvdmlkZXJfMS5OT09QX01FVEVSX1BST1ZJREVSKTtcbiAgICAgICAgcmV0dXJuIHByb3ZpZGVyO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgZ2xvYmFsIG1ldGVyIHByb3ZpZGVyLlxuICAgICAqL1xuICAgIE1ldHJpY3NBUEkucHJvdG90eXBlLmdldE1ldGVyUHJvdmlkZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHJldHVybiAoKF9iID0gKF9hID0gZ2xvYmFsX3V0aWxzXzEuX2dsb2JhbFtnbG9iYWxfdXRpbHNfMS5HTE9CQUxfTUVUUklDU19BUElfS0VZXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoZ2xvYmFsX3V0aWxzXzEuX2dsb2JhbCwgZ2xvYmFsX3V0aWxzXzEuQVBJX0JBQ0tXQVJEU19DT01QQVRJQklMSVRZX1ZFUlNJT04pKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBOb29wTWV0ZXJQcm92aWRlcl8xLk5PT1BfTUVURVJfUFJPVklERVIpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIG1ldGVyIGZyb20gdGhlIGdsb2JhbCBtZXRlciBwcm92aWRlci5cbiAgICAgKi9cbiAgICBNZXRyaWNzQVBJLnByb3RvdHlwZS5nZXRNZXRlciA9IGZ1bmN0aW9uIChuYW1lLCB2ZXJzaW9uKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldE1ldGVyUHJvdmlkZXIoKS5nZXRNZXRlcihuYW1lLCB2ZXJzaW9uKTtcbiAgICB9O1xuICAgIC8qKiBSZW1vdmUgdGhlIGdsb2JhbCBtZXRlciBwcm92aWRlciAqL1xuICAgIE1ldHJpY3NBUEkucHJvdG90eXBlLmRpc2FibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRlbGV0ZSBnbG9iYWxfdXRpbHNfMS5fZ2xvYmFsW2dsb2JhbF91dGlsc18xLkdMT0JBTF9NRVRSSUNTX0FQSV9LRVldO1xuICAgIH07XG4gICAgcmV0dXJuIE1ldHJpY3NBUEk7XG59KCkpO1xuZXhwb3J0cy5NZXRyaWNzQVBJID0gTWV0cmljc0FQSTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1ldHJpY3MuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/api/metrics.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.metrics = void 0;\n__exportStar(__webpack_require__(/*! ./NoopMeter */ \"./node_modules/@opentelemetry/api-metrics/build/src/NoopMeter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./NoopMeterProvider */ \"./node_modules/@opentelemetry/api-metrics/build/src/NoopMeterProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/BatchObserverResult */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/BatchObserverResult.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/BoundInstrument */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/BoundInstrument.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/Meter */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/Meter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/MeterProvider */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/MeterProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/Metric */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/Metric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/Observation */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/Observation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types/ObserverResult */ \"./node_modules/@opentelemetry/api-metrics/build/src/types/ObserverResult.js\"), exports);\nvar metrics_1 = __webpack_require__(/*! ./api/metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/api/metrics.js\");\n/** Entrypoint for metrics API */\nexports.metrics = metrics_1.MetricsAPI.getInstance();\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL2luZGV4LmpzPzZjZTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxxRkFBYTtBQUNsQyxhQUFhLG1CQUFPLENBQUMscUdBQXFCO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQyxxSEFBNkI7QUFDbEQsYUFBYSxtQkFBTyxDQUFDLDZHQUF5QjtBQUM5QyxhQUFhLG1CQUFPLENBQUMseUZBQWU7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLHlHQUF1QjtBQUM1QyxhQUFhLG1CQUFPLENBQUMsMkZBQWdCO0FBQ3JDLGFBQWEsbUJBQU8sQ0FBQyxxR0FBcUI7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLDJHQUF3QjtBQUM3QyxnQkFBZ0IsbUJBQU8sQ0FBQyx5RkFBZTtBQUN2QztBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1ldHJpY3MgPSB2b2lkIDA7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vTm9vcE1ldGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Ob29wTWV0ZXJQcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXMvQmF0Y2hPYnNlcnZlclJlc3VsdFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXMvQm91bmRJbnN0cnVtZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy9NZXRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXMvTWV0ZXJQcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXMvTWV0cmljXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy9PYnNlcnZhdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXMvT2JzZXJ2ZXJSZXN1bHRcIiksIGV4cG9ydHMpO1xudmFyIG1ldHJpY3NfMSA9IHJlcXVpcmUoXCIuL2FwaS9tZXRyaWNzXCIpO1xuLyoqIEVudHJ5cG9pbnQgZm9yIG1ldHJpY3MgQVBJICovXG5leHBvcnRzLm1ldHJpY3MgPSBtZXRyaWNzXzEuTWV0cmljc0FQSS5nZXRJbnN0YW5jZSgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/globalThis.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/globalThis.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._globalThis = void 0;\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexports._globalThis = typeof globalThis === 'object' ? globalThis : window;\n//# sourceMappingURL=globalThis.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvZ2xvYmFsVGhpcy5qcz80ZjI2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGktbWV0cmljcy9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9nbG9iYWxUaGlzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5fZ2xvYmFsVGhpcyA9IHZvaWQgMDtcbi8qKiBvbmx5IGdsb2JhbHMgdGhhdCBjb21tb24gdG8gbm9kZSBhbmQgYnJvd3NlcnMgYXJlIGFsbG93ZWQgKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBub2RlL25vLXVuc3VwcG9ydGVkLWZlYXR1cmVzL2VzLWJ1aWx0aW5zLCBuby11bmRlZlxuZXhwb3J0cy5fZ2xvYmFsVGhpcyA9IHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JyA/IGdsb2JhbFRoaXMgOiB3aW5kb3c7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxUaGlzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/globalThis.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/index.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./globalThis */ \"./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/globalThis.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvaW5kZXguanM/ODIzNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msb0NBQW9DLGFBQWEsRUFBRSxFQUFFO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGFBQWEsbUJBQU8sQ0FBQyx3R0FBYztBQUNuQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGktbWV0cmljcy9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dsb2JhbFRoaXNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/BatchObserverResult.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/BatchObserverResult.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=BatchObserverResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL0JhdGNoT2JzZXJ2ZXJSZXN1bHQuanM/OWZmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzL2J1aWxkL3NyYy90eXBlcy9CYXRjaE9ic2VydmVyUmVzdWx0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmF0Y2hPYnNlcnZlclJlc3VsdC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/BatchObserverResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/BoundInstrument.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/BoundInstrument.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=BoundInstrument.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL0JvdW5kSW5zdHJ1bWVudC5qcz9jNDAyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL0JvdW5kSW5zdHJ1bWVudC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJvdW5kSW5zdHJ1bWVudC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/BoundInstrument.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/Meter.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/Meter.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Meter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL01ldGVyLmpzPzMzMDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGktbWV0cmljcy9idWlsZC9zcmMvdHlwZXMvTWV0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZXRlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/Meter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/MeterProvider.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/MeterProvider.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MeterProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL01ldGVyUHJvdmlkZXIuanM/OTQ1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS1tZXRyaWNzL2J1aWxkL3NyYy90eXBlcy9NZXRlclByb3ZpZGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWV0ZXJQcm92aWRlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/MeterProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/Metric.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/Metric.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueType = void 0;\n/** The Type of value. It describes how the data is reported. */\nvar ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"INT\"] = 0] = \"INT\";\n    ValueType[ValueType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n})(ValueType = exports.ValueType || (exports.ValueType = {}));\n//# sourceMappingURL=Metric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL01ldHJpYy5qcz8wYmJkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwREFBMEQ7QUFDM0QiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL01ldHJpYy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVmFsdWVUeXBlID0gdm9pZCAwO1xuLyoqIFRoZSBUeXBlIG9mIHZhbHVlLiBJdCBkZXNjcmliZXMgaG93IHRoZSBkYXRhIGlzIHJlcG9ydGVkLiAqL1xudmFyIFZhbHVlVHlwZTtcbihmdW5jdGlvbiAoVmFsdWVUeXBlKSB7XG4gICAgVmFsdWVUeXBlW1ZhbHVlVHlwZVtcIklOVFwiXSA9IDBdID0gXCJJTlRcIjtcbiAgICBWYWx1ZVR5cGVbVmFsdWVUeXBlW1wiRE9VQkxFXCJdID0gMV0gPSBcIkRPVUJMRVwiO1xufSkoVmFsdWVUeXBlID0gZXhwb3J0cy5WYWx1ZVR5cGUgfHwgKGV4cG9ydHMuVmFsdWVUeXBlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1ldHJpYy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/Metric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/Observation.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/Observation.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Observation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL09ic2VydmF0aW9uLmpzPzBjZjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGktbWV0cmljcy9idWlsZC9zcmMvdHlwZXMvT2JzZXJ2YXRpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PYnNlcnZhdGlvbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/Observation.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api-metrics/build/src/types/ObserverResult.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api-metrics/build/src/types/ObserverResult.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ObserverResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3MvYnVpbGQvc3JjL3R5cGVzL09ic2VydmVyUmVzdWx0LmpzPzlmNmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGktbWV0cmljcy9idWlsZC9zcmMvdHlwZXMvT2JzZXJ2ZXJSZXN1bHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PYnNlcnZlclJlc3VsdC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api-metrics/build/src/types/ObserverResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/api/context.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/api/context.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContextAPI = void 0;\nvar NoopContextManager_1 = __webpack_require__(/*! ../context/NoopContextManager */ \"./node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js\");\nvar global_utils_1 = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/src/internal/global-utils.js\");\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new NoopContextManager_1.NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager. Returns the initialized context manager\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        global_utils_1.registerGlobal(API_NAME, contextManager);\n        return contextManager;\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArrays([context, fn, thisArg], args));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param target function or event emitter to bind\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     */\n    ContextAPI.prototype.bind = function (target, context) {\n        if (context === void 0) { context = this.active(); }\n        return this._getContextManager().bind(target, context);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return global_utils_1.getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        global_utils_1.unregisterGlobal(API_NAME);\n    };\n    return ContextAPI;\n}());\nexports.ContextAPI = ContextAPI;\n//# sourceMappingURL=context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvY29udGV4dC5qcz9iMzIyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsUUFBUTtBQUN6RCx3Q0FBd0MsUUFBUTtBQUNoRCx3REFBd0QsUUFBUTtBQUNoRTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLDJCQUEyQixtQkFBTyxDQUFDLGdIQUErQjtBQUNsRSxxQkFBcUIsbUJBQU8sQ0FBQyxzR0FBMEI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMseUJBQXlCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2FwaS9jb250ZXh0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fc3ByZWFkQXJyYXlzID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5cykgfHwgZnVuY3Rpb24gKCkge1xuICAgIGZvciAodmFyIHMgPSAwLCBpID0gMCwgaWwgPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgaWw7IGkrKykgcyArPSBhcmd1bWVudHNbaV0ubGVuZ3RoO1xuICAgIGZvciAodmFyIHIgPSBBcnJheShzKSwgayA9IDAsIGkgPSAwOyBpIDwgaWw7IGkrKylcbiAgICAgICAgZm9yICh2YXIgYSA9IGFyZ3VtZW50c1tpXSwgaiA9IDAsIGpsID0gYS5sZW5ndGg7IGogPCBqbDsgaisrLCBrKyspXG4gICAgICAgICAgICByW2tdID0gYVtqXTtcbiAgICByZXR1cm4gcjtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnRleHRBUEkgPSB2b2lkIDA7XG52YXIgTm9vcENvbnRleHRNYW5hZ2VyXzEgPSByZXF1aXJlKFwiLi4vY29udGV4dC9Ob29wQ29udGV4dE1hbmFnZXJcIik7XG52YXIgZ2xvYmFsX3V0aWxzXzEgPSByZXF1aXJlKFwiLi4vaW50ZXJuYWwvZ2xvYmFsLXV0aWxzXCIpO1xudmFyIEFQSV9OQU1FID0gJ2NvbnRleHQnO1xudmFyIE5PT1BfQ09OVEVYVF9NQU5BR0VSID0gbmV3IE5vb3BDb250ZXh0TWFuYWdlcl8xLk5vb3BDb250ZXh0TWFuYWdlcigpO1xuLyoqXG4gKiBTaW5nbGV0b24gb2JqZWN0IHdoaWNoIHJlcHJlc2VudHMgdGhlIGVudHJ5IHBvaW50IHRvIHRoZSBPcGVuVGVsZW1ldHJ5IENvbnRleHQgQVBJXG4gKi9cbnZhciBDb250ZXh0QVBJID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKiBFbXB0eSBwcml2YXRlIGNvbnN0cnVjdG9yIHByZXZlbnRzIGVuZCB1c2VycyBmcm9tIGNvbnN0cnVjdGluZyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgQVBJICovXG4gICAgZnVuY3Rpb24gQ29udGV4dEFQSSgpIHtcbiAgICB9XG4gICAgLyoqIEdldCB0aGUgc2luZ2xldG9uIGluc3RhbmNlIG9mIHRoZSBDb250ZXh0IEFQSSAqL1xuICAgIENvbnRleHRBUEkuZ2V0SW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5faW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IENvbnRleHRBUEkoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGN1cnJlbnQgY29udGV4dCBtYW5hZ2VyLiBSZXR1cm5zIHRoZSBpbml0aWFsaXplZCBjb250ZXh0IG1hbmFnZXJcbiAgICAgKi9cbiAgICBDb250ZXh0QVBJLnByb3RvdHlwZS5zZXRHbG9iYWxDb250ZXh0TWFuYWdlciA9IGZ1bmN0aW9uIChjb250ZXh0TWFuYWdlcikge1xuICAgICAgICBnbG9iYWxfdXRpbHNfMS5yZWdpc3Rlckdsb2JhbChBUElfTkFNRSwgY29udGV4dE1hbmFnZXIpO1xuICAgICAgICByZXR1cm4gY29udGV4dE1hbmFnZXI7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGN1cnJlbnRseSBhY3RpdmUgY29udGV4dFxuICAgICAqL1xuICAgIENvbnRleHRBUEkucHJvdG90eXBlLmFjdGl2ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldENvbnRleHRNYW5hZ2VyKCkuYWN0aXZlKCk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgZnVuY3Rpb24gd2l0aCBhbiBhY3RpdmUgY29udGV4dFxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbnRleHQgY29udGV4dCB0byBiZSBhY3RpdmUgZHVyaW5nIGZ1bmN0aW9uIGV4ZWN1dGlvblxuICAgICAqIEBwYXJhbSBmbiBmdW5jdGlvbiB0byBleGVjdXRlIGluIGEgY29udGV4dFxuICAgICAqIEBwYXJhbSB0aGlzQXJnIG9wdGlvbmFsIHJlY2VpdmVyIHRvIGJlIHVzZWQgZm9yIGNhbGxpbmcgZm5cbiAgICAgKiBAcGFyYW0gYXJncyBvcHRpb25hbCBhcmd1bWVudHMgZm9yd2FyZGVkIHRvIGZuXG4gICAgICovXG4gICAgQ29udGV4dEFQSS5wcm90b3R5cGUud2l0aCA9IGZ1bmN0aW9uIChjb250ZXh0LCBmbiwgdGhpc0FyZykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMzsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pIC0gM10gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLl9nZXRDb250ZXh0TWFuYWdlcigpKS53aXRoLmFwcGx5KF9hLCBfX3NwcmVhZEFycmF5cyhbY29udGV4dCwgZm4sIHRoaXNBcmddLCBhcmdzKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBCaW5kIGEgY29udGV4dCB0byBhIHRhcmdldCBmdW5jdGlvbiBvciBldmVudCBlbWl0dGVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdGFyZ2V0IGZ1bmN0aW9uIG9yIGV2ZW50IGVtaXR0ZXIgdG8gYmluZFxuICAgICAqIEBwYXJhbSBjb250ZXh0IGNvbnRleHQgdG8gYmluZCB0byB0aGUgZXZlbnQgZW1pdHRlciBvciBmdW5jdGlvbi4gRGVmYXVsdHMgdG8gdGhlIGN1cnJlbnRseSBhY3RpdmUgY29udGV4dFxuICAgICAqL1xuICAgIENvbnRleHRBUEkucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiAodGFyZ2V0LCBjb250ZXh0KSB7XG4gICAgICAgIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHsgY29udGV4dCA9IHRoaXMuYWN0aXZlKCk7IH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldENvbnRleHRNYW5hZ2VyKCkuYmluZCh0YXJnZXQsIGNvbnRleHQpO1xuICAgIH07XG4gICAgQ29udGV4dEFQSS5wcm90b3R5cGUuX2dldENvbnRleHRNYW5hZ2VyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZ2xvYmFsX3V0aWxzXzEuZ2V0R2xvYmFsKEFQSV9OQU1FKSB8fCBOT09QX0NPTlRFWFRfTUFOQUdFUjtcbiAgICB9O1xuICAgIC8qKiBEaXNhYmxlIGFuZCByZW1vdmUgdGhlIGdsb2JhbCBjb250ZXh0IG1hbmFnZXIgKi9cbiAgICBDb250ZXh0QVBJLnByb3RvdHlwZS5kaXNhYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9nZXRDb250ZXh0TWFuYWdlcigpLmRpc2FibGUoKTtcbiAgICAgICAgZ2xvYmFsX3V0aWxzXzEudW5yZWdpc3Rlckdsb2JhbChBUElfTkFNRSk7XG4gICAgfTtcbiAgICByZXR1cm4gQ29udGV4dEFQSTtcbn0oKSk7XG5leHBvcnRzLkNvbnRleHRBUEkgPSBDb250ZXh0QVBJO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGV4dC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/api/context.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/api/diag.js":
/*!***************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/api/diag.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagAPI = void 0;\nvar logLevelLogger_1 = __webpack_require__(/*! ../diag/internal/logLevelLogger */ \"./node_modules/@opentelemetry/api/build/src/diag/internal/logLevelLogger.js\");\nvar types_1 = __webpack_require__(/*! ../diag/types */ \"./node_modules/@opentelemetry/api/build/src/diag/types.js\");\nvar global_utils_1 = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/src/internal/global-utils.js\");\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var logger = global_utils_1.getGlobal('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, \n                // work around Function.prototype.apply types\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                arguments);\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        self.setLogger = function (logger, logLevel) {\n            var _a;\n            if (logLevel === void 0) { logLevel = types_1.DiagLogLevel.INFO; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return;\n            }\n            global_utils_1.registerGlobal('diag', logLevelLogger_1.createLogLevelDiagLogger(logLevel, logger), true);\n        };\n        self.disable = function () {\n            global_utils_1.unregisterGlobal(API_NAME);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\nexports.DiagAPI = DiagAPI;\n//# sourceMappingURL=diag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvZGlhZy5qcz9hZjE3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSx1QkFBdUIsbUJBQU8sQ0FBQyxvSEFBaUM7QUFDaEUsY0FBYyxtQkFBTyxDQUFDLGdGQUFlO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLHNHQUEwQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxzQ0FBc0M7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvZGlhZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGlhZ0FQSSA9IHZvaWQgMDtcbnZhciBsb2dMZXZlbExvZ2dlcl8xID0gcmVxdWlyZShcIi4uL2RpYWcvaW50ZXJuYWwvbG9nTGV2ZWxMb2dnZXJcIik7XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCIuLi9kaWFnL3R5cGVzXCIpO1xudmFyIGdsb2JhbF91dGlsc18xID0gcmVxdWlyZShcIi4uL2ludGVybmFsL2dsb2JhbC11dGlsc1wiKTtcbnZhciBBUElfTkFNRSA9ICdkaWFnJztcbi8qKlxuICogU2luZ2xldG9uIG9iamVjdCB3aGljaCByZXByZXNlbnRzIHRoZSBlbnRyeSBwb2ludCB0byB0aGUgT3BlblRlbGVtZXRyeSBpbnRlcm5hbFxuICogZGlhZ25vc3RpYyBBUElcbiAqL1xudmFyIERpYWdBUEkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogUHJpdmF0ZSBpbnRlcm5hbCBjb25zdHJ1Y3RvclxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgZnVuY3Rpb24gRGlhZ0FQSSgpIHtcbiAgICAgICAgZnVuY3Rpb24gX2xvZ1Byb3h5KGZ1bmNOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBsb2dnZXIgPSBnbG9iYWxfdXRpbHNfMS5nZXRHbG9iYWwoJ2RpYWcnKTtcbiAgICAgICAgICAgICAgICAvLyBzaG9ydGN1dCBpZiBsb2dnZXIgbm90IHNldFxuICAgICAgICAgICAgICAgIGlmICghbG9nZ2VyKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxvZ2dlcltmdW5jTmFtZV0uYXBwbHkobG9nZ2VyLCBcbiAgICAgICAgICAgICAgICAvLyB3b3JrIGFyb3VuZCBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkgdHlwZXNcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgICAgICAgICAgIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIC8vIFVzaW5nIHNlbGYgbG9jYWwgdmFyaWFibGUgZm9yIG1pbmlmaWNhdGlvbiBwdXJwb3NlcyBhcyAndGhpcycgY2Fubm90IGJlIG1pbmlmaWVkXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgLy8gRGlhZ0FQSSBzcGVjaWZpYyBmdW5jdGlvbnNcbiAgICAgICAgc2VsZi5zZXRMb2dnZXIgPSBmdW5jdGlvbiAobG9nZ2VyLCBsb2dMZXZlbCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKGxvZ0xldmVsID09PSB2b2lkIDApIHsgbG9nTGV2ZWwgPSB0eXBlc18xLkRpYWdMb2dMZXZlbC5JTkZPOyB9XG4gICAgICAgICAgICBpZiAobG9nZ2VyID09PSBzZWxmKSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlcmUgaXNuJ3QgbXVjaCB3ZSBjYW4gZG8gaGVyZS5cbiAgICAgICAgICAgICAgICAvLyBMb2dnaW5nIHRvIHRoZSBjb25zb2xlIG1pZ2h0IGJyZWFrIHRoZSB1c2VyIGFwcGxpY2F0aW9uLlxuICAgICAgICAgICAgICAgIC8vIFRyeSB0byBsb2cgdG8gc2VsZi4gSWYgYSBsb2dnZXIgd2FzIHByZXZpb3VzbHkgcmVnaXN0ZXJlZCBpdCB3aWxsIHJlY2VpdmUgdGhlIGxvZy5cbiAgICAgICAgICAgICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdDYW5ub3QgdXNlIGRpYWcgYXMgdGhlIGxvZ2dlciBmb3IgaXRzZWxmLiBQbGVhc2UgdXNlIGEgRGlhZ0xvZ2dlciBpbXBsZW1lbnRhdGlvbiBsaWtlIENvbnNvbGVEaWFnTG9nZ2VyIG9yIGEgY3VzdG9tIGltcGxlbWVudGF0aW9uJyk7XG4gICAgICAgICAgICAgICAgc2VsZi5lcnJvcigoX2EgPSBlcnIuc3RhY2spICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGVyci5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBnbG9iYWxfdXRpbHNfMS5yZWdpc3Rlckdsb2JhbCgnZGlhZycsIGxvZ0xldmVsTG9nZ2VyXzEuY3JlYXRlTG9nTGV2ZWxEaWFnTG9nZ2VyKGxvZ0xldmVsLCBsb2dnZXIpLCB0cnVlKTtcbiAgICAgICAgfTtcbiAgICAgICAgc2VsZi5kaXNhYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZ2xvYmFsX3V0aWxzXzEudW5yZWdpc3Rlckdsb2JhbChBUElfTkFNRSk7XG4gICAgICAgIH07XG4gICAgICAgIHNlbGYudmVyYm9zZSA9IF9sb2dQcm94eSgndmVyYm9zZScpO1xuICAgICAgICBzZWxmLmRlYnVnID0gX2xvZ1Byb3h5KCdkZWJ1ZycpO1xuICAgICAgICBzZWxmLmluZm8gPSBfbG9nUHJveHkoJ2luZm8nKTtcbiAgICAgICAgc2VsZi53YXJuID0gX2xvZ1Byb3h5KCd3YXJuJyk7XG4gICAgICAgIHNlbGYuZXJyb3IgPSBfbG9nUHJveHkoJ2Vycm9yJyk7XG4gICAgfVxuICAgIC8qKiBHZXQgdGhlIHNpbmdsZXRvbiBpbnN0YW5jZSBvZiB0aGUgRGlhZ0FQSSBBUEkgKi9cbiAgICBEaWFnQVBJLmluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBEaWFnQVBJKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xuICAgIH07XG4gICAgcmV0dXJuIERpYWdBUEk7XG59KCkpO1xuZXhwb3J0cy5EaWFnQVBJID0gRGlhZ0FQSTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpYWcuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/api/diag.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/api/propagation.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/api/propagation.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropagationAPI = void 0;\nvar NoopTextMapPropagator_1 = __webpack_require__(/*! ../propagation/NoopTextMapPropagator */ \"./node_modules/@opentelemetry/api/build/src/propagation/NoopTextMapPropagator.js\");\nvar TextMapPropagator_1 = __webpack_require__(/*! ../propagation/TextMapPropagator */ \"./node_modules/@opentelemetry/api/build/src/propagation/TextMapPropagator.js\");\nvar global_utils_1 = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/src/internal/global-utils.js\");\nvar API_NAME = 'propagation';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator. Returns the initialized propagator\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        global_utils_1.registerGlobal(API_NAME, propagator);\n        return propagator;\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = TextMapPropagator_1.defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = TextMapPropagator_1.defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        global_utils_1.unregisterGlobal(API_NAME);\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return global_utils_1.getGlobal(API_NAME) || NoopTextMapPropagator_1.NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\nexports.PropagationAPI = PropagationAPI;\n//# sourceMappingURL=propagation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvcHJvcGFnYXRpb24uanM/N2ZlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsOEJBQThCLG1CQUFPLENBQUMsOEhBQXNDO0FBQzVFLDBCQUEwQixtQkFBTyxDQUFDLHNIQUFrQztBQUNwRSxxQkFBcUIsbUJBQU8sQ0FBQyxzR0FBMEI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG1EQUFtRDtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxtREFBbUQ7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2FwaS9wcm9wYWdhdGlvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvcGFnYXRpb25BUEkgPSB2b2lkIDA7XG52YXIgTm9vcFRleHRNYXBQcm9wYWdhdG9yXzEgPSByZXF1aXJlKFwiLi4vcHJvcGFnYXRpb24vTm9vcFRleHRNYXBQcm9wYWdhdG9yXCIpO1xudmFyIFRleHRNYXBQcm9wYWdhdG9yXzEgPSByZXF1aXJlKFwiLi4vcHJvcGFnYXRpb24vVGV4dE1hcFByb3BhZ2F0b3JcIik7XG52YXIgZ2xvYmFsX3V0aWxzXzEgPSByZXF1aXJlKFwiLi4vaW50ZXJuYWwvZ2xvYmFsLXV0aWxzXCIpO1xudmFyIEFQSV9OQU1FID0gJ3Byb3BhZ2F0aW9uJztcbi8qKlxuICogU2luZ2xldG9uIG9iamVjdCB3aGljaCByZXByZXNlbnRzIHRoZSBlbnRyeSBwb2ludCB0byB0aGUgT3BlblRlbGVtZXRyeSBQcm9wYWdhdGlvbiBBUElcbiAqL1xudmFyIFByb3BhZ2F0aW9uQVBJID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKiBFbXB0eSBwcml2YXRlIGNvbnN0cnVjdG9yIHByZXZlbnRzIGVuZCB1c2VycyBmcm9tIGNvbnN0cnVjdGluZyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgQVBJICovXG4gICAgZnVuY3Rpb24gUHJvcGFnYXRpb25BUEkoKSB7XG4gICAgfVxuICAgIC8qKiBHZXQgdGhlIHNpbmdsZXRvbiBpbnN0YW5jZSBvZiB0aGUgUHJvcGFnYXRvciBBUEkgKi9cbiAgICBQcm9wYWdhdGlvbkFQSS5nZXRJbnN0YW5jZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhpcy5faW5zdGFuY2UgPSBuZXcgUHJvcGFnYXRpb25BUEkoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5faW5zdGFuY2U7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGN1cnJlbnQgcHJvcGFnYXRvci4gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgcHJvcGFnYXRvclxuICAgICAqL1xuICAgIFByb3BhZ2F0aW9uQVBJLnByb3RvdHlwZS5zZXRHbG9iYWxQcm9wYWdhdG9yID0gZnVuY3Rpb24gKHByb3BhZ2F0b3IpIHtcbiAgICAgICAgZ2xvYmFsX3V0aWxzXzEucmVnaXN0ZXJHbG9iYWwoQVBJX05BTUUsIHByb3BhZ2F0b3IpO1xuICAgICAgICByZXR1cm4gcHJvcGFnYXRvcjtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEluamVjdCBjb250ZXh0IGludG8gYSBjYXJyaWVyIHRvIGJlIHByb3BhZ2F0ZWQgaW50ZXItcHJvY2Vzc1xuICAgICAqXG4gICAgICogQHBhcmFtIGNvbnRleHQgQ29udGV4dCBjYXJyeWluZyB0cmFjaW5nIGRhdGEgdG8gaW5qZWN0XG4gICAgICogQHBhcmFtIGNhcnJpZXIgY2FycmllciB0byBpbmplY3QgY29udGV4dCBpbnRvXG4gICAgICogQHBhcmFtIHNldHRlciBGdW5jdGlvbiB1c2VkIHRvIHNldCB2YWx1ZXMgb24gdGhlIGNhcnJpZXJcbiAgICAgKi9cbiAgICBQcm9wYWdhdGlvbkFQSS5wcm90b3R5cGUuaW5qZWN0ID0gZnVuY3Rpb24gKGNvbnRleHQsIGNhcnJpZXIsIHNldHRlcikge1xuICAgICAgICBpZiAoc2V0dGVyID09PSB2b2lkIDApIHsgc2V0dGVyID0gVGV4dE1hcFByb3BhZ2F0b3JfMS5kZWZhdWx0VGV4dE1hcFNldHRlcjsgfVxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0R2xvYmFsUHJvcGFnYXRvcigpLmluamVjdChjb250ZXh0LCBjYXJyaWVyLCBzZXR0ZXIpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogRXh0cmFjdCBjb250ZXh0IGZyb20gYSBjYXJyaWVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY29udGV4dCBDb250ZXh0IHdoaWNoIHRoZSBuZXdseSBjcmVhdGVkIGNvbnRleHQgd2lsbCBpbmhlcml0IGZyb21cbiAgICAgKiBAcGFyYW0gY2FycmllciBDYXJyaWVyIHRvIGV4dHJhY3QgY29udGV4dCBmcm9tXG4gICAgICogQHBhcmFtIGdldHRlciBGdW5jdGlvbiB1c2VkIHRvIGV4dHJhY3Qga2V5cyBmcm9tIGEgY2FycmllclxuICAgICAqL1xuICAgIFByb3BhZ2F0aW9uQVBJLnByb3RvdHlwZS5leHRyYWN0ID0gZnVuY3Rpb24gKGNvbnRleHQsIGNhcnJpZXIsIGdldHRlcikge1xuICAgICAgICBpZiAoZ2V0dGVyID09PSB2b2lkIDApIHsgZ2V0dGVyID0gVGV4dE1hcFByb3BhZ2F0b3JfMS5kZWZhdWx0VGV4dE1hcEdldHRlcjsgfVxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0R2xvYmFsUHJvcGFnYXRvcigpLmV4dHJhY3QoY29udGV4dCwgY2FycmllciwgZ2V0dGVyKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHVybiBhIGxpc3Qgb2YgYWxsIGZpZWxkcyB3aGljaCBtYXkgYmUgdXNlZCBieSB0aGUgcHJvcGFnYXRvci5cbiAgICAgKi9cbiAgICBQcm9wYWdhdGlvbkFQSS5wcm90b3R5cGUuZmllbGRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0R2xvYmFsUHJvcGFnYXRvcigpLmZpZWxkcygpO1xuICAgIH07XG4gICAgLyoqIFJlbW92ZSB0aGUgZ2xvYmFsIHByb3BhZ2F0b3IgKi9cbiAgICBQcm9wYWdhdGlvbkFQSS5wcm90b3R5cGUuZGlzYWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZ2xvYmFsX3V0aWxzXzEudW5yZWdpc3Rlckdsb2JhbChBUElfTkFNRSk7XG4gICAgfTtcbiAgICBQcm9wYWdhdGlvbkFQSS5wcm90b3R5cGUuX2dldEdsb2JhbFByb3BhZ2F0b3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBnbG9iYWxfdXRpbHNfMS5nZXRHbG9iYWwoQVBJX05BTUUpIHx8IE5vb3BUZXh0TWFwUHJvcGFnYXRvcl8xLk5PT1BfVEVYVF9NQVBfUFJPUEFHQVRPUjtcbiAgICB9O1xuICAgIHJldHVybiBQcm9wYWdhdGlvbkFQSTtcbn0oKSk7XG5leHBvcnRzLlByb3BhZ2F0aW9uQVBJID0gUHJvcGFnYXRpb25BUEk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9wYWdhdGlvbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/api/propagation.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/api/trace.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/api/trace.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceAPI = void 0;\nvar ProxyTracerProvider_1 = __webpack_require__(/*! ../trace/ProxyTracerProvider */ \"./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js\");\nvar spancontext_utils_1 = __webpack_require__(/*! ../trace/spancontext-utils */ \"./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\");\nvar global_utils_1 = __webpack_require__(/*! ../internal/global-utils */ \"./node_modules/@opentelemetry/api/build/src/internal/global-utils.js\");\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new ProxyTracerProvider_1.ProxyTracerProvider();\n        this.isSpanContextValid = spancontext_utils_1.isSpanContextValid;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer. Returns the initialized global tracer provider\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        this._proxyTracerProvider.setDelegate(provider);\n        global_utils_1.registerGlobal(API_NAME, this._proxyTracerProvider);\n        return this._proxyTracerProvider;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return global_utils_1.getGlobal(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        global_utils_1.unregisterGlobal(API_NAME);\n        this._proxyTracerProvider = new ProxyTracerProvider_1.ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\nexports.TraceAPI = TraceAPI;\n//# sourceMappingURL=trace.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9hcGkvdHJhY2UuanM/MjgzMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsNEJBQTRCLG1CQUFPLENBQUMsOEdBQThCO0FBQ2xFLDBCQUEwQixtQkFBTyxDQUFDLDBHQUE0QjtBQUM5RCxxQkFBcUIsbUJBQU8sQ0FBQyxzR0FBMEI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2FwaS90cmFjZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhY2VBUEkgPSB2b2lkIDA7XG52YXIgUHJveHlUcmFjZXJQcm92aWRlcl8xID0gcmVxdWlyZShcIi4uL3RyYWNlL1Byb3h5VHJhY2VyUHJvdmlkZXJcIik7XG52YXIgc3BhbmNvbnRleHRfdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi90cmFjZS9zcGFuY29udGV4dC11dGlsc1wiKTtcbnZhciBnbG9iYWxfdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi9pbnRlcm5hbC9nbG9iYWwtdXRpbHNcIik7XG52YXIgQVBJX05BTUUgPSAndHJhY2UnO1xuLyoqXG4gKiBTaW5nbGV0b24gb2JqZWN0IHdoaWNoIHJlcHJlc2VudHMgdGhlIGVudHJ5IHBvaW50IHRvIHRoZSBPcGVuVGVsZW1ldHJ5IFRyYWNpbmcgQVBJXG4gKi9cbnZhciBUcmFjZUFQSSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKiogRW1wdHkgcHJpdmF0ZSBjb25zdHJ1Y3RvciBwcmV2ZW50cyBlbmQgdXNlcnMgZnJvbSBjb25zdHJ1Y3RpbmcgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIEFQSSAqL1xuICAgIGZ1bmN0aW9uIFRyYWNlQVBJKCkge1xuICAgICAgICB0aGlzLl9wcm94eVRyYWNlclByb3ZpZGVyID0gbmV3IFByb3h5VHJhY2VyUHJvdmlkZXJfMS5Qcm94eVRyYWNlclByb3ZpZGVyKCk7XG4gICAgICAgIHRoaXMuaXNTcGFuQ29udGV4dFZhbGlkID0gc3BhbmNvbnRleHRfdXRpbHNfMS5pc1NwYW5Db250ZXh0VmFsaWQ7XG4gICAgfVxuICAgIC8qKiBHZXQgdGhlIHNpbmdsZXRvbiBpbnN0YW5jZSBvZiB0aGUgVHJhY2UgQVBJICovXG4gICAgVHJhY2VBUEkuZ2V0SW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5faW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID0gbmV3IFRyYWNlQVBJKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBjdXJyZW50IGdsb2JhbCB0cmFjZXIuIFJldHVybnMgdGhlIGluaXRpYWxpemVkIGdsb2JhbCB0cmFjZXIgcHJvdmlkZXJcbiAgICAgKi9cbiAgICBUcmFjZUFQSS5wcm90b3R5cGUuc2V0R2xvYmFsVHJhY2VyUHJvdmlkZXIgPSBmdW5jdGlvbiAocHJvdmlkZXIpIHtcbiAgICAgICAgdGhpcy5fcHJveHlUcmFjZXJQcm92aWRlci5zZXREZWxlZ2F0ZShwcm92aWRlcik7XG4gICAgICAgIGdsb2JhbF91dGlsc18xLnJlZ2lzdGVyR2xvYmFsKEFQSV9OQU1FLCB0aGlzLl9wcm94eVRyYWNlclByb3ZpZGVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Byb3h5VHJhY2VyUHJvdmlkZXI7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBnbG9iYWwgdHJhY2VyIHByb3ZpZGVyLlxuICAgICAqL1xuICAgIFRyYWNlQVBJLnByb3RvdHlwZS5nZXRUcmFjZXJQcm92aWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGdsb2JhbF91dGlsc18xLmdldEdsb2JhbChBUElfTkFNRSkgfHwgdGhpcy5fcHJveHlUcmFjZXJQcm92aWRlcjtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSB0cmFjZXIgZnJvbSB0aGUgZ2xvYmFsIHRyYWNlciBwcm92aWRlci5cbiAgICAgKi9cbiAgICBUcmFjZUFQSS5wcm90b3R5cGUuZ2V0VHJhY2VyID0gZnVuY3Rpb24gKG5hbWUsIHZlcnNpb24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0VHJhY2VyUHJvdmlkZXIoKS5nZXRUcmFjZXIobmFtZSwgdmVyc2lvbik7XG4gICAgfTtcbiAgICAvKiogUmVtb3ZlIHRoZSBnbG9iYWwgdHJhY2VyIHByb3ZpZGVyICovXG4gICAgVHJhY2VBUEkucHJvdG90eXBlLmRpc2FibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGdsb2JhbF91dGlsc18xLnVucmVnaXN0ZXJHbG9iYWwoQVBJX05BTUUpO1xuICAgICAgICB0aGlzLl9wcm94eVRyYWNlclByb3ZpZGVyID0gbmV3IFByb3h5VHJhY2VyUHJvdmlkZXJfMS5Qcm94eVRyYWNlclByb3ZpZGVyKCk7XG4gICAgfTtcbiAgICByZXR1cm4gVHJhY2VBUEk7XG59KCkpO1xuZXhwb3J0cy5UcmFjZUFQSSA9IFRyYWNlQVBJO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/api/trace.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/baggage/Baggage.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/baggage/Baggage.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Baggage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL0JhZ2dhZ2UuanM/MTI4ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvYmFnZ2FnZS9CYWdnYWdlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmFnZ2FnZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/baggage/Baggage.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/baggage/Entry.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/baggage/Entry.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Entry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL0VudHJ5LmpzPzliYWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2JhZ2dhZ2UvRW50cnkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FbnRyeS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/baggage/Entry.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/baggage/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/baggage/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baggageEntryMetadataFromString = exports.createBaggage = void 0;\nvar baggage_1 = __webpack_require__(/*! ./internal/baggage */ \"./node_modules/@opentelemetry/api/build/src/baggage/internal/baggage.js\");\nvar symbol_1 = __webpack_require__(/*! ./internal/symbol */ \"./node_modules/@opentelemetry/api/build/src/baggage/internal/symbol.js\");\n__exportStar(__webpack_require__(/*! ./Baggage */ \"./node_modules/@opentelemetry/api/build/src/baggage/Baggage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Entry */ \"./node_modules/@opentelemetry/api/build/src/baggage/Entry.js\"), exports);\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nfunction createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new baggage_1.BaggageImpl(new Map(Object.entries(entries)));\n}\nexports.createBaggage = createBaggage;\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nfunction baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        // @TODO log diagnostic\n        str = '';\n    }\n    return {\n        __TYPE__: symbol_1.baggageEntryMetadataSymbol,\n        toString: function () {\n            return str;\n        },\n    };\n}\nexports.baggageEntryMetadataFromString = baggageEntryMetadataFromString;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL2luZGV4LmpzP2MyMTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLG1HQUFvQjtBQUM1QyxlQUFlLG1CQUFPLENBQUMsaUdBQW1CO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQyxpRkFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsNkVBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGNBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvYmFnZ2FnZS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5iYWdnYWdlRW50cnlNZXRhZGF0YUZyb21TdHJpbmcgPSBleHBvcnRzLmNyZWF0ZUJhZ2dhZ2UgPSB2b2lkIDA7XG52YXIgYmFnZ2FnZV8xID0gcmVxdWlyZShcIi4vaW50ZXJuYWwvYmFnZ2FnZVwiKTtcbnZhciBzeW1ib2xfMSA9IHJlcXVpcmUoXCIuL2ludGVybmFsL3N5bWJvbFwiKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9CYWdnYWdlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9FbnRyeVwiKSwgZXhwb3J0cyk7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBCYWdnYWdlIHdpdGggb3B0aW9uYWwgZW50cmllc1xuICpcbiAqIEBwYXJhbSBlbnRyaWVzIEFuIGFycmF5IG9mIGJhZ2dhZ2UgZW50cmllcyB0aGUgbmV3IGJhZ2dhZ2Ugc2hvdWxkIGNvbnRhaW5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQmFnZ2FnZShlbnRyaWVzKSB7XG4gICAgaWYgKGVudHJpZXMgPT09IHZvaWQgMCkgeyBlbnRyaWVzID0ge307IH1cbiAgICByZXR1cm4gbmV3IGJhZ2dhZ2VfMS5CYWdnYWdlSW1wbChuZXcgTWFwKE9iamVjdC5lbnRyaWVzKGVudHJpZXMpKSk7XG59XG5leHBvcnRzLmNyZWF0ZUJhZ2dhZ2UgPSBjcmVhdGVCYWdnYWdlO1xuLyoqXG4gKiBDcmVhdGUgYSBzZXJpYWxpemFibGUgQmFnZ2FnZUVudHJ5TWV0YWRhdGEgb2JqZWN0IGZyb20gYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHN0ciBzdHJpbmcgbWV0YWRhdGEuIEZvcm1hdCBpcyBjdXJyZW50bHkgbm90IGRlZmluZWQgYnkgdGhlIHNwZWMgYW5kIGhhcyBubyBzcGVjaWFsIG1lYW5pbmcuXG4gKlxuICovXG5mdW5jdGlvbiBiYWdnYWdlRW50cnlNZXRhZGF0YUZyb21TdHJpbmcoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8vIEBUT0RPIGxvZyBkaWFnbm9zdGljXG4gICAgICAgIHN0ciA9ICcnO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBfX1RZUEVfXzogc3ltYm9sXzEuYmFnZ2FnZUVudHJ5TWV0YWRhdGFTeW1ib2wsXG4gICAgICAgIHRvU3RyaW5nOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyO1xuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLmJhZ2dhZ2VFbnRyeU1ldGFkYXRhRnJvbVN0cmluZyA9IGJhZ2dhZ2VFbnRyeU1ldGFkYXRhRnJvbVN0cmluZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/baggage/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/baggage/internal/baggage.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/baggage/internal/baggage.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaggageImpl = void 0;\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var k = _a[0], v = _a[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n            var key = keys_1[_a];\n            newBaggage._entries.delete(key);\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\nexports.BaggageImpl = BaggageImpl;\n//# sourceMappingURL=baggage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL2ludGVybmFsL2JhZ2dhZ2UuanM/MTNiOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxvQkFBb0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL2ludGVybmFsL2JhZ2dhZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJhZ2dhZ2VJbXBsID0gdm9pZCAwO1xudmFyIEJhZ2dhZ2VJbXBsID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJhZ2dhZ2VJbXBsKGVudHJpZXMpIHtcbiAgICAgICAgdGhpcy5fZW50cmllcyA9IGVudHJpZXMgPyBuZXcgTWFwKGVudHJpZXMpIDogbmV3IE1hcCgpO1xuICAgIH1cbiAgICBCYWdnYWdlSW1wbC5wcm90b3R5cGUuZ2V0RW50cnkgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMuX2VudHJpZXMuZ2V0KGtleSk7XG4gICAgICAgIGlmICghZW50cnkpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGVudHJ5KTtcbiAgICB9O1xuICAgIEJhZ2dhZ2VJbXBsLnByb3RvdHlwZS5nZXRBbGxFbnRyaWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9lbnRyaWVzLmVudHJpZXMoKSkubWFwKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgdmFyIGsgPSBfYVswXSwgdiA9IF9hWzFdO1xuICAgICAgICAgICAgcmV0dXJuIFtrLCB2XTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBCYWdnYWdlSW1wbC5wcm90b3R5cGUuc2V0RW50cnkgPSBmdW5jdGlvbiAoa2V5LCBlbnRyeSkge1xuICAgICAgICB2YXIgbmV3QmFnZ2FnZSA9IG5ldyBCYWdnYWdlSW1wbCh0aGlzLl9lbnRyaWVzKTtcbiAgICAgICAgbmV3QmFnZ2FnZS5fZW50cmllcy5zZXQoa2V5LCBlbnRyeSk7XG4gICAgICAgIHJldHVybiBuZXdCYWdnYWdlO1xuICAgIH07XG4gICAgQmFnZ2FnZUltcGwucHJvdG90eXBlLnJlbW92ZUVudHJ5ID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgbmV3QmFnZ2FnZSA9IG5ldyBCYWdnYWdlSW1wbCh0aGlzLl9lbnRyaWVzKTtcbiAgICAgICAgbmV3QmFnZ2FnZS5fZW50cmllcy5kZWxldGUoa2V5KTtcbiAgICAgICAgcmV0dXJuIG5ld0JhZ2dhZ2U7XG4gICAgfTtcbiAgICBCYWdnYWdlSW1wbC5wcm90b3R5cGUucmVtb3ZlRW50cmllcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGtleXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGtleXNbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbmV3QmFnZ2FnZSA9IG5ldyBCYWdnYWdlSW1wbCh0aGlzLl9lbnRyaWVzKTtcbiAgICAgICAgZm9yICh2YXIgX2EgPSAwLCBrZXlzXzEgPSBrZXlzOyBfYSA8IGtleXNfMS5sZW5ndGg7IF9hKyspIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBrZXlzXzFbX2FdO1xuICAgICAgICAgICAgbmV3QmFnZ2FnZS5fZW50cmllcy5kZWxldGUoa2V5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3QmFnZ2FnZTtcbiAgICB9O1xuICAgIEJhZ2dhZ2VJbXBsLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBCYWdnYWdlSW1wbCgpO1xuICAgIH07XG4gICAgcmV0dXJuIEJhZ2dhZ2VJbXBsO1xufSgpKTtcbmV4cG9ydHMuQmFnZ2FnZUltcGwgPSBCYWdnYWdlSW1wbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhZ2dhZ2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/baggage/internal/baggage.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/baggage/internal/symbol.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/baggage/internal/symbol.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baggageEntryMetadataSymbol = void 0;\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexports.baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9iYWdnYWdlL2ludGVybmFsL3N5bWJvbC5qcz84ZTZmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvYmFnZ2FnZS9pbnRlcm5hbC9zeW1ib2wuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJhZ2dhZ2VFbnRyeU1ldGFkYXRhU3ltYm9sID0gdm9pZCAwO1xuLyoqXG4gKiBTeW1ib2wgdXNlZCB0byBtYWtlIEJhZ2dhZ2VFbnRyeU1ldGFkYXRhIGFuIG9wYXF1ZSB0eXBlXG4gKi9cbmV4cG9ydHMuYmFnZ2FnZUVudHJ5TWV0YWRhdGFTeW1ib2wgPSBTeW1ib2woJ0JhZ2dhZ2VFbnRyeU1ldGFkYXRhJyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zeW1ib2wuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/baggage/internal/symbol.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/common/Exception.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/common/Exception.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Exception.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb21tb24vRXhjZXB0aW9uLmpzPzQ1M2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2NvbW1vbi9FeGNlcHRpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FeGNlcHRpb24uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/common/Exception.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/common/Time.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/common/Time.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Time.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb21tb24vVGltZS5qcz9lNDUzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb21tb24vVGltZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGltZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/common/Time.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopContextManager = void 0;\nvar context_1 = __webpack_require__(/*! ./context */ \"./node_modules/@opentelemetry/api/build/src/context/context.js\");\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return context_1.ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArrays([thisArg], args));\n    };\n    NoopContextManager.prototype.bind = function (target, _context) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\nexports.NoopContextManager = NoopContextManager;\n//# sourceMappingURL=NoopContextManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb250ZXh0L05vb3BDb250ZXh0TWFuYWdlci5qcz9mYjI2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsUUFBUTtBQUN6RCx3Q0FBd0MsUUFBUTtBQUNoRCx3REFBd0QsUUFBUTtBQUNoRTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLGlGQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2NvbnRleHQvTm9vcENvbnRleHRNYW5hZ2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fc3ByZWFkQXJyYXlzID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5cykgfHwgZnVuY3Rpb24gKCkge1xuICAgIGZvciAodmFyIHMgPSAwLCBpID0gMCwgaWwgPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgaWw7IGkrKykgcyArPSBhcmd1bWVudHNbaV0ubGVuZ3RoO1xuICAgIGZvciAodmFyIHIgPSBBcnJheShzKSwgayA9IDAsIGkgPSAwOyBpIDwgaWw7IGkrKylcbiAgICAgICAgZm9yICh2YXIgYSA9IGFyZ3VtZW50c1tpXSwgaiA9IDAsIGpsID0gYS5sZW5ndGg7IGogPCBqbDsgaisrLCBrKyspXG4gICAgICAgICAgICByW2tdID0gYVtqXTtcbiAgICByZXR1cm4gcjtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vb3BDb250ZXh0TWFuYWdlciA9IHZvaWQgMDtcbnZhciBjb250ZXh0XzEgPSByZXF1aXJlKFwiLi9jb250ZXh0XCIpO1xudmFyIE5vb3BDb250ZXh0TWFuYWdlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wQ29udGV4dE1hbmFnZXIoKSB7XG4gICAgfVxuICAgIE5vb3BDb250ZXh0TWFuYWdlci5wcm90b3R5cGUuYWN0aXZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gY29udGV4dF8xLlJPT1RfQ09OVEVYVDtcbiAgICB9O1xuICAgIE5vb3BDb250ZXh0TWFuYWdlci5wcm90b3R5cGUud2l0aCA9IGZ1bmN0aW9uIChfY29udGV4dCwgZm4sIHRoaXNBcmcpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAzOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2kgLSAzXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZuLmNhbGwuYXBwbHkoZm4sIF9fc3ByZWFkQXJyYXlzKFt0aGlzQXJnXSwgYXJncykpO1xuICAgIH07XG4gICAgTm9vcENvbnRleHRNYW5hZ2VyLnByb3RvdHlwZS5iaW5kID0gZnVuY3Rpb24gKHRhcmdldCwgX2NvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9O1xuICAgIE5vb3BDb250ZXh0TWFuYWdlci5wcm90b3R5cGUuZW5hYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIE5vb3BDb250ZXh0TWFuYWdlci5wcm90b3R5cGUuZGlzYWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICByZXR1cm4gTm9vcENvbnRleHRNYW5hZ2VyO1xufSgpKTtcbmV4cG9ydHMuTm9vcENvbnRleHRNYW5hZ2VyID0gTm9vcENvbnRleHRNYW5hZ2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Tm9vcENvbnRleHRNYW5hZ2VyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/context/context.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/context/context.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ROOT_CONTEXT = exports.createContextKey = exports.setBaggage = exports.getBaggage = exports.isInstrumentationSuppressed = exports.unsuppressInstrumentation = exports.suppressInstrumentation = exports.getSpanContext = exports.setSpanContext = exports.setSpan = exports.getSpan = void 0;\nvar NoopSpan_1 = __webpack_require__(/*! ../trace/NoopSpan */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js\");\n/**\n * span key\n */\nvar SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Shared key for indicating if instrumentation should be suppressed beyond\n * this current scope.\n */\nvar SUPPRESS_INSTRUMENTATION_KEY = createContextKey('OpenTelemetry Context Key SUPPRESS_INSTRUMENTATION');\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nfunction getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\nexports.getSpan = getSpan;\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nfunction setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\nexports.setSpan = setSpan;\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nfunction setSpanContext(context, spanContext) {\n    return setSpan(context, new NoopSpan_1.NoopSpan(spanContext));\n}\nexports.setSpanContext = setSpanContext;\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nfunction getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.context();\n}\nexports.getSpanContext = getSpanContext;\n/**\n * Sets value on context to indicate that instrumentation should\n * be suppressed beyond this current scope.\n *\n * @param context context to set the suppress instrumentation value on.\n */\nfunction suppressInstrumentation(context) {\n    return context.setValue(SUPPRESS_INSTRUMENTATION_KEY, true);\n}\nexports.suppressInstrumentation = suppressInstrumentation;\n/**\n * Sets value on context to indicate that instrumentation should\n * no-longer be suppressed beyond this current scope.\n *\n * @param context context to set the suppress instrumentation value on.\n */\nfunction unsuppressInstrumentation(context) {\n    return context.setValue(SUPPRESS_INSTRUMENTATION_KEY, false);\n}\nexports.unsuppressInstrumentation = unsuppressInstrumentation;\n/**\n * Return current suppress instrumentation value for the given context,\n * if it exists.\n *\n * @param context context check for the suppress instrumentation value.\n */\nfunction isInstrumentationSuppressed(context) {\n    return Boolean(context.getValue(SUPPRESS_INSTRUMENTATION_KEY));\n}\nexports.isInstrumentationSuppressed = isInstrumentationSuppressed;\n/**\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nfunction getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\nexports.getBaggage = getBaggage;\n/**\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nfunction setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\nexports.setBaggage = setBaggage;\n/** Get a key to uniquely identify a context value */\nfunction createContextKey(description) {\n    return Symbol.for(description);\n}\nexports.createContextKey = createContextKey;\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nexports.ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/context/context.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/context/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/context/types.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9jb250ZXh0L3R5cGVzLmpzP2YwMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2NvbnRleHQvdHlwZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/context/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/diag/consoleLogger.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/diag/consoleLogger.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagConsoleLogger = void 0;\nvar consoleMap = [\n    { n: 'error', c: 'error' },\n    { n: 'warn', c: 'warn' },\n    { n: 'info', c: 'info' },\n    { n: 'debug', c: 'debug' },\n    { n: 'verbose', c: 'trace' },\n];\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nvar DiagConsoleLogger = /** @class */ (function () {\n    function DiagConsoleLogger() {\n        function _consoleFunc(funcName) {\n            return function () {\n                var orgArguments = arguments;\n                if (console) {\n                    // Some environments only expose the console when the F12 developer console is open\n                    var theFunc = console[funcName];\n                    if (typeof theFunc !== 'function') {\n                        // Not all environments support all functions\n                        theFunc = console.log;\n                    }\n                    // One last final check\n                    if (typeof theFunc === 'function') {\n                        return theFunc.apply(console, orgArguments);\n                    }\n                }\n            };\n        }\n        for (var i = 0; i < consoleMap.length; i++) {\n            this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n        }\n    }\n    return DiagConsoleLogger;\n}());\nexports.DiagConsoleLogger = DiagConsoleLogger;\n//# sourceMappingURL=consoleLogger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9kaWFnL2NvbnNvbGVMb2dnZXIuanM/ODMxYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQSxLQUFLLHlCQUF5QjtBQUM5QixLQUFLLHVCQUF1QjtBQUM1QixLQUFLLHVCQUF1QjtBQUM1QixLQUFLLHlCQUF5QjtBQUM5QixLQUFLLDJCQUEyQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVCQUF1QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvZGlhZy9jb25zb2xlTG9nZ2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EaWFnQ29uc29sZUxvZ2dlciA9IHZvaWQgMDtcbnZhciBjb25zb2xlTWFwID0gW1xuICAgIHsgbjogJ2Vycm9yJywgYzogJ2Vycm9yJyB9LFxuICAgIHsgbjogJ3dhcm4nLCBjOiAnd2FybicgfSxcbiAgICB7IG46ICdpbmZvJywgYzogJ2luZm8nIH0sXG4gICAgeyBuOiAnZGVidWcnLCBjOiAnZGVidWcnIH0sXG4gICAgeyBuOiAndmVyYm9zZScsIGM6ICd0cmFjZScgfSxcbl07XG4vKipcbiAqIEEgc2ltcGxlIEltbXV0YWJsZSBDb25zb2xlIGJhc2VkIGRpYWdub3N0aWMgbG9nZ2VyIHdoaWNoIHdpbGwgb3V0cHV0IGFueSBtZXNzYWdlcyB0byB0aGUgQ29uc29sZS5cbiAqIElmIHlvdSB3YW50IHRvIGxpbWl0IHRoZSBhbW91bnQgb2YgbG9nZ2luZyB0byBhIHNwZWNpZmljIGxldmVsIG9yIGxvd2VyIHVzZSB0aGVcbiAqIHtAbGluayBjcmVhdGVMb2dMZXZlbERpYWdMb2dnZXJ9XG4gKi9cbnZhciBEaWFnQ29uc29sZUxvZ2dlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEaWFnQ29uc29sZUxvZ2dlcigpIHtcbiAgICAgICAgZnVuY3Rpb24gX2NvbnNvbGVGdW5jKGZ1bmNOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBvcmdBcmd1bWVudHMgPSBhcmd1bWVudHM7XG4gICAgICAgICAgICAgICAgaWYgKGNvbnNvbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU29tZSBlbnZpcm9ubWVudHMgb25seSBleHBvc2UgdGhlIGNvbnNvbGUgd2hlbiB0aGUgRjEyIGRldmVsb3BlciBjb25zb2xlIGlzIG9wZW5cbiAgICAgICAgICAgICAgICAgICAgdmFyIHRoZUZ1bmMgPSBjb25zb2xlW2Z1bmNOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGVGdW5jICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBOb3QgYWxsIGVudmlyb25tZW50cyBzdXBwb3J0IGFsbCBmdW5jdGlvbnNcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoZUZ1bmMgPSBjb25zb2xlLmxvZztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBPbmUgbGFzdCBmaW5hbCBjaGVja1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoZUZ1bmMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGVGdW5jLmFwcGx5KGNvbnNvbGUsIG9yZ0FyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29uc29sZU1hcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpc1tjb25zb2xlTWFwW2ldLm5dID0gX2NvbnNvbGVGdW5jKGNvbnNvbGVNYXBbaV0uYyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIERpYWdDb25zb2xlTG9nZ2VyO1xufSgpKTtcbmV4cG9ydHMuRGlhZ0NvbnNvbGVMb2dnZXIgPSBEaWFnQ29uc29sZUxvZ2dlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnNvbGVMb2dnZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/diag/consoleLogger.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/diag/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/diag/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./consoleLogger */ \"./node_modules/@opentelemetry/api/build/src/diag/consoleLogger.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/api/build/src/diag/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9kaWFnL2luZGV4LmpzP2MyMzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxhQUFhLG1CQUFPLENBQUMsMEZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQywwRUFBUztBQUM5QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL2RpYWcvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zb2xlTG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/diag/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/diag/internal/logLevelLogger.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/diag/internal/logLevelLogger.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLogLevelDiagLogger = void 0;\nvar types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@opentelemetry/api/build/src/diag/types.js\");\nfunction createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < types_1.DiagLogLevel.NONE) {\n        maxLevel = types_1.DiagLogLevel.NONE;\n    }\n    else if (maxLevel > types_1.DiagLogLevel.ALL) {\n        maxLevel = types_1.DiagLogLevel.ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', types_1.DiagLogLevel.ERROR),\n        warn: _filterFunc('warn', types_1.DiagLogLevel.WARN),\n        info: _filterFunc('info', types_1.DiagLogLevel.INFO),\n        debug: _filterFunc('debug', types_1.DiagLogLevel.DEBUG),\n        verbose: _filterFunc('verbose', types_1.DiagLogLevel.VERBOSE),\n    };\n}\nexports.createLogLevelDiagLogger = createLogLevelDiagLogger;\n//# sourceMappingURL=logLevelLogger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9kaWFnL2ludGVybmFsL2xvZ0xldmVsTG9nZ2VyLmpzP2UyOTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGNBQWMsbUJBQU8sQ0FBQywyRUFBVTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9kaWFnL2ludGVybmFsL2xvZ0xldmVsTG9nZ2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVMb2dMZXZlbERpYWdMb2dnZXIgPSB2b2lkIDA7XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCIuLi90eXBlc1wiKTtcbmZ1bmN0aW9uIGNyZWF0ZUxvZ0xldmVsRGlhZ0xvZ2dlcihtYXhMZXZlbCwgbG9nZ2VyKSB7XG4gICAgaWYgKG1heExldmVsIDwgdHlwZXNfMS5EaWFnTG9nTGV2ZWwuTk9ORSkge1xuICAgICAgICBtYXhMZXZlbCA9IHR5cGVzXzEuRGlhZ0xvZ0xldmVsLk5PTkU7XG4gICAgfVxuICAgIGVsc2UgaWYgKG1heExldmVsID4gdHlwZXNfMS5EaWFnTG9nTGV2ZWwuQUxMKSB7XG4gICAgICAgIG1heExldmVsID0gdHlwZXNfMS5EaWFnTG9nTGV2ZWwuQUxMO1xuICAgIH1cbiAgICAvLyBJbiBjYXNlIHRoZSBsb2dnZXIgaXMgbnVsbCBvciB1bmRlZmluZWRcbiAgICBsb2dnZXIgPSBsb2dnZXIgfHwge307XG4gICAgZnVuY3Rpb24gX2ZpbHRlckZ1bmMoZnVuY05hbWUsIHRoZUxldmVsKSB7XG4gICAgICAgIHZhciB0aGVGdW5jID0gbG9nZ2VyW2Z1bmNOYW1lXTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGVGdW5jID09PSAnZnVuY3Rpb24nICYmIG1heExldmVsID49IHRoZUxldmVsKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhlRnVuYy5iaW5kKGxvZ2dlcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZXJyb3I6IF9maWx0ZXJGdW5jKCdlcnJvcicsIHR5cGVzXzEuRGlhZ0xvZ0xldmVsLkVSUk9SKSxcbiAgICAgICAgd2FybjogX2ZpbHRlckZ1bmMoJ3dhcm4nLCB0eXBlc18xLkRpYWdMb2dMZXZlbC5XQVJOKSxcbiAgICAgICAgaW5mbzogX2ZpbHRlckZ1bmMoJ2luZm8nLCB0eXBlc18xLkRpYWdMb2dMZXZlbC5JTkZPKSxcbiAgICAgICAgZGVidWc6IF9maWx0ZXJGdW5jKCdkZWJ1ZycsIHR5cGVzXzEuRGlhZ0xvZ0xldmVsLkRFQlVHKSxcbiAgICAgICAgdmVyYm9zZTogX2ZpbHRlckZ1bmMoJ3ZlcmJvc2UnLCB0eXBlc18xLkRpYWdMb2dMZXZlbC5WRVJCT1NFKSxcbiAgICB9O1xufVxuZXhwb3J0cy5jcmVhdGVMb2dMZXZlbERpYWdMb2dnZXIgPSBjcmVhdGVMb2dMZXZlbERpYWdMb2dnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dMZXZlbExvZ2dlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/diag/internal/logLevelLogger.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/diag/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/diag/types.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagLogLevel = void 0;\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nvar DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel = exports.DiagLogLevel || (exports.DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9kaWFnL3R5cGVzLmpzPzZhYzciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsbUVBQW1FO0FBQ3BFIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvZGlhZy90eXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGlhZ0xvZ0xldmVsID0gdm9pZCAwO1xuLyoqXG4gKiBEZWZpbmVzIHRoZSBhdmFpbGFibGUgaW50ZXJuYWwgbG9nZ2luZyBsZXZlbHMgZm9yIHRoZSBkaWFnbm9zdGljIGxvZ2dlciwgdGhlIG51bWVyaWMgdmFsdWVzXG4gKiBvZiB0aGUgbGV2ZWxzIGFyZSBkZWZpbmVkIHRvIG1hdGNoIHRoZSBvcmlnaW5hbCB2YWx1ZXMgZnJvbSB0aGUgaW5pdGlhbCBMb2dMZXZlbCB0byBhdm9pZFxuICogY29tcGF0aWJpbGl0eS9taWdyYXRpb24gaXNzdWVzIGZvciBhbnkgaW1wbGVtZW50YXRpb24gdGhhdCBhc3N1bWUgdGhlIG51bWVyaWMgb3JkZXJpbmcuXG4gKi9cbnZhciBEaWFnTG9nTGV2ZWw7XG4oZnVuY3Rpb24gKERpYWdMb2dMZXZlbCkge1xuICAgIC8qKiBEaWFnbm9zdGljIExvZ2dpbmcgbGV2ZWwgc2V0dGluZyB0byBkaXNhYmxlIGFsbCBsb2dnaW5nIChleGNlcHQgYW5kIGZvcmNlZCBsb2dzKSAqL1xuICAgIERpYWdMb2dMZXZlbFtEaWFnTG9nTGV2ZWxbXCJOT05FXCJdID0gMF0gPSBcIk5PTkVcIjtcbiAgICAvKiogSWRlbnRpZmllcyBhbiBlcnJvciBzY2VuYXJpbyAqL1xuICAgIERpYWdMb2dMZXZlbFtEaWFnTG9nTGV2ZWxbXCJFUlJPUlwiXSA9IDMwXSA9IFwiRVJST1JcIjtcbiAgICAvKiogSWRlbnRpZmllcyBhIHdhcm5pbmcgc2NlbmFyaW8gKi9cbiAgICBEaWFnTG9nTGV2ZWxbRGlhZ0xvZ0xldmVsW1wiV0FSTlwiXSA9IDUwXSA9IFwiV0FSTlwiO1xuICAgIC8qKiBHZW5lcmFsIGluZm9ybWF0aW9uYWwgbG9nIG1lc3NhZ2UgKi9cbiAgICBEaWFnTG9nTGV2ZWxbRGlhZ0xvZ0xldmVsW1wiSU5GT1wiXSA9IDYwXSA9IFwiSU5GT1wiO1xuICAgIC8qKiBHZW5lcmFsIGRlYnVnIGxvZyBtZXNzYWdlICovXG4gICAgRGlhZ0xvZ0xldmVsW0RpYWdMb2dMZXZlbFtcIkRFQlVHXCJdID0gNzBdID0gXCJERUJVR1wiO1xuICAgIC8qKlxuICAgICAqIERldGFpbGVkIHRyYWNlIGxldmVsIGxvZ2dpbmcgc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgZGV2ZWxvcG1lbnQsIHNob3VsZCBvbmx5IGJlIHNldFxuICAgICAqIGluIGEgZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnQuXG4gICAgICovXG4gICAgRGlhZ0xvZ0xldmVsW0RpYWdMb2dMZXZlbFtcIlZFUkJPU0VcIl0gPSA4MF0gPSBcIlZFUkJPU0VcIjtcbiAgICAvKiogVXNlZCB0byBzZXQgdGhlIGxvZ2dpbmcgbGV2ZWwgdG8gaW5jbHVkZSBhbGwgbG9nZ2luZyAqL1xuICAgIERpYWdMb2dMZXZlbFtEaWFnTG9nTGV2ZWxbXCJBTExcIl0gPSA5OTk5XSA9IFwiQUxMXCI7XG59KShEaWFnTG9nTGV2ZWwgPSBleHBvcnRzLkRpYWdMb2dMZXZlbCB8fCAoZXhwb3J0cy5EaWFnTG9nTGV2ZWwgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/diag/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.diag = exports.propagation = exports.trace = exports.context = exports.isValidSpanId = exports.isValidTraceId = exports.isSpanContextValid = exports.INVALID_SPAN_CONTEXT = exports.INVALID_TRACEID = exports.INVALID_SPANID = void 0;\n__exportStar(__webpack_require__(/*! ./baggage */ \"./node_modules/@opentelemetry/api/build/src/baggage/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/Exception */ \"./node_modules/@opentelemetry/api/build/src/common/Exception.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/Time */ \"./node_modules/@opentelemetry/api/build/src/common/Time.js\"), exports);\n__exportStar(__webpack_require__(/*! ./diag */ \"./node_modules/@opentelemetry/api/build/src/diag/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./propagation/NoopTextMapPropagator */ \"./node_modules/@opentelemetry/api/build/src/propagation/NoopTextMapPropagator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./propagation/TextMapPropagator */ \"./node_modules/@opentelemetry/api/build/src/propagation/TextMapPropagator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/attributes */ \"./node_modules/@opentelemetry/api/build/src/trace/attributes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/Event */ \"./node_modules/@opentelemetry/api/build/src/trace/Event.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/link_context */ \"./node_modules/@opentelemetry/api/build/src/trace/link_context.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/link */ \"./node_modules/@opentelemetry/api/build/src/trace/link.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/NoopTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/NoopTracerProvider */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/ProxyTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/ProxyTracerProvider */ \"./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/Sampler */ \"./node_modules/@opentelemetry/api/build/src/trace/Sampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/SamplingResult */ \"./node_modules/@opentelemetry/api/build/src/trace/SamplingResult.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/span_context */ \"./node_modules/@opentelemetry/api/build/src/trace/span_context.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/span_kind */ \"./node_modules/@opentelemetry/api/build/src/trace/span_kind.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/span */ \"./node_modules/@opentelemetry/api/build/src/trace/span.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/SpanOptions */ \"./node_modules/@opentelemetry/api/build/src/trace/SpanOptions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/status */ \"./node_modules/@opentelemetry/api/build/src/trace/status.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/TimedEvent */ \"./node_modules/@opentelemetry/api/build/src/trace/TimedEvent.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/trace_flags */ \"./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/trace_state */ \"./node_modules/@opentelemetry/api/build/src/trace/trace_state.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/tracer_provider */ \"./node_modules/@opentelemetry/api/build/src/trace/tracer_provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/tracer */ \"./node_modules/@opentelemetry/api/build/src/trace/tracer.js\"), exports);\nvar spancontext_utils_1 = __webpack_require__(/*! ./trace/spancontext-utils */ \"./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\");\nObject.defineProperty(exports, \"INVALID_SPANID\", { enumerable: true, get: function () { return spancontext_utils_1.INVALID_SPANID; } });\nObject.defineProperty(exports, \"INVALID_TRACEID\", { enumerable: true, get: function () { return spancontext_utils_1.INVALID_TRACEID; } });\nObject.defineProperty(exports, \"INVALID_SPAN_CONTEXT\", { enumerable: true, get: function () { return spancontext_utils_1.INVALID_SPAN_CONTEXT; } });\nObject.defineProperty(exports, \"isSpanContextValid\", { enumerable: true, get: function () { return spancontext_utils_1.isSpanContextValid; } });\nObject.defineProperty(exports, \"isValidTraceId\", { enumerable: true, get: function () { return spancontext_utils_1.isValidTraceId; } });\nObject.defineProperty(exports, \"isValidSpanId\", { enumerable: true, get: function () { return spancontext_utils_1.isValidSpanId; } });\n__exportStar(__webpack_require__(/*! ./context/context */ \"./node_modules/@opentelemetry/api/build/src/context/context.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/NoopContextManager */ \"./node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/types */ \"./node_modules/@opentelemetry/api/build/src/context/types.js\"), exports);\nvar context_1 = __webpack_require__(/*! ./api/context */ \"./node_modules/@opentelemetry/api/build/src/api/context.js\");\n/** Entrypoint for context API */\nexports.context = context_1.ContextAPI.getInstance();\nvar trace_1 = __webpack_require__(/*! ./api/trace */ \"./node_modules/@opentelemetry/api/build/src/api/trace.js\");\n/** Entrypoint for trace API */\nexports.trace = trace_1.TraceAPI.getInstance();\nvar propagation_1 = __webpack_require__(/*! ./api/propagation */ \"./node_modules/@opentelemetry/api/build/src/api/propagation.js\");\n/** Entrypoint for propagation API */\nexports.propagation = propagation_1.PropagationAPI.getInstance();\nvar diag_1 = __webpack_require__(/*! ./api/diag */ \"./node_modules/@opentelemetry/api/build/src/api/diag.js\");\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexports.diag = diag_1.DiagAPI.instance();\nexports.default = {\n    trace: exports.trace,\n    context: exports.context,\n    propagation: exports.propagation,\n    diag: exports.diag,\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9pbmRleC5qcz9kMDA5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxhQUFhLG1CQUFPLENBQUMsK0VBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLDJGQUFvQjtBQUN6QyxhQUFhLG1CQUFPLENBQUMsaUZBQWU7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLHlFQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyw2SEFBcUM7QUFDMUQsYUFBYSxtQkFBTyxDQUFDLHFIQUFpQztBQUN0RCxhQUFhLG1CQUFPLENBQUMsMkZBQW9CO0FBQ3pDLGFBQWEsbUJBQU8sQ0FBQyxpRkFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsK0ZBQXNCO0FBQzNDLGFBQWEsbUJBQU8sQ0FBQywrRUFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsMkZBQW9CO0FBQ3pDLGFBQWEsbUJBQU8sQ0FBQywyR0FBNEI7QUFDakQsYUFBYSxtQkFBTyxDQUFDLDZGQUFxQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMsNkdBQTZCO0FBQ2xELGFBQWEsbUJBQU8sQ0FBQyxxRkFBaUI7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLG1HQUF3QjtBQUM3QyxhQUFhLG1CQUFPLENBQUMsK0ZBQXNCO0FBQzNDLGFBQWEsbUJBQU8sQ0FBQyx5RkFBbUI7QUFDeEMsYUFBYSxtQkFBTyxDQUFDLCtFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyw2RkFBcUI7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLG1GQUFnQjtBQUNyQyxhQUFhLG1CQUFPLENBQUMsMkZBQW9CO0FBQ3pDLGFBQWEsbUJBQU8sQ0FBQyw2RkFBcUI7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLDZGQUFxQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMscUdBQXlCO0FBQzlDLGFBQWEsbUJBQU8sQ0FBQyxtRkFBZ0I7QUFDckMsMEJBQTBCLG1CQUFPLENBQUMseUdBQTJCO0FBQzdELGtEQUFrRCxxQ0FBcUMsMkNBQTJDLEVBQUUsRUFBRTtBQUN0SSxtREFBbUQscUNBQXFDLDRDQUE0QyxFQUFFLEVBQUU7QUFDeEksd0RBQXdELHFDQUFxQyxpREFBaUQsRUFBRSxFQUFFO0FBQ2xKLHNEQUFzRCxxQ0FBcUMsK0NBQStDLEVBQUUsRUFBRTtBQUM5SSxrREFBa0QscUNBQXFDLDJDQUEyQyxFQUFFLEVBQUU7QUFDdEksaURBQWlELHFDQUFxQywwQ0FBMEMsRUFBRSxFQUFFO0FBQ3BJLGFBQWEsbUJBQU8sQ0FBQyx5RkFBbUI7QUFDeEMsYUFBYSxtQkFBTyxDQUFDLCtHQUE4QjtBQUNuRCxhQUFhLG1CQUFPLENBQUMscUZBQWlCO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLGlGQUFlO0FBQ3ZDO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsNkVBQWE7QUFDbkM7QUFDQTtBQUNBLG9CQUFvQixtQkFBTyxDQUFDLHlGQUFtQjtBQUMvQztBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLDJFQUFZO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kaWFnID0gZXhwb3J0cy5wcm9wYWdhdGlvbiA9IGV4cG9ydHMudHJhY2UgPSBleHBvcnRzLmNvbnRleHQgPSBleHBvcnRzLmlzVmFsaWRTcGFuSWQgPSBleHBvcnRzLmlzVmFsaWRUcmFjZUlkID0gZXhwb3J0cy5pc1NwYW5Db250ZXh0VmFsaWQgPSBleHBvcnRzLklOVkFMSURfU1BBTl9DT05URVhUID0gZXhwb3J0cy5JTlZBTElEX1RSQUNFSUQgPSBleHBvcnRzLklOVkFMSURfU1BBTklEID0gdm9pZCAwO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2JhZ2dhZ2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbW1vbi9FeGNlcHRpb25cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbW1vbi9UaW1lXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kaWFnXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm9wYWdhdGlvbi9Ob29wVGV4dE1hcFByb3BhZ2F0b3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Byb3BhZ2F0aW9uL1RleHRNYXBQcm9wYWdhdG9yXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9hdHRyaWJ1dGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9FdmVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvbGlua19jb250ZXh0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9saW5rXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9Ob29wVHJhY2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9Ob29wVHJhY2VyUHJvdmlkZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL1Byb3h5VHJhY2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9Qcm94eVRyYWNlclByb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9TYW1wbGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9TYW1wbGluZ1Jlc3VsdFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2Uvc3Bhbl9jb250ZXh0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9zcGFuX2tpbmRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL3NwYW5cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL1NwYW5PcHRpb25zXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9zdGF0dXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL1RpbWVkRXZlbnRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL3RyYWNlX2ZsYWdzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS90cmFjZV9zdGF0ZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvdHJhY2VyX3Byb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS90cmFjZXJcIiksIGV4cG9ydHMpO1xudmFyIHNwYW5jb250ZXh0X3V0aWxzXzEgPSByZXF1aXJlKFwiLi90cmFjZS9zcGFuY29udGV4dC11dGlsc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIklOVkFMSURfU1BBTklEXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzcGFuY29udGV4dF91dGlsc18xLklOVkFMSURfU1BBTklEOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSU5WQUxJRF9UUkFDRUlEXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzcGFuY29udGV4dF91dGlsc18xLklOVkFMSURfVFJBQ0VJRDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIklOVkFMSURfU1BBTl9DT05URVhUXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzcGFuY29udGV4dF91dGlsc18xLklOVkFMSURfU1BBTl9DT05URVhUOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNTcGFuQ29udGV4dFZhbGlkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzcGFuY29udGV4dF91dGlsc18xLmlzU3BhbkNvbnRleHRWYWxpZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzVmFsaWRUcmFjZUlkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzcGFuY29udGV4dF91dGlsc18xLmlzVmFsaWRUcmFjZUlkOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNWYWxpZFNwYW5JZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3BhbmNvbnRleHRfdXRpbHNfMS5pc1ZhbGlkU3BhbklkOyB9IH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnRleHQvY29udGV4dFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29udGV4dC9Ob29wQ29udGV4dE1hbmFnZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnRleHQvdHlwZXNcIiksIGV4cG9ydHMpO1xudmFyIGNvbnRleHRfMSA9IHJlcXVpcmUoXCIuL2FwaS9jb250ZXh0XCIpO1xuLyoqIEVudHJ5cG9pbnQgZm9yIGNvbnRleHQgQVBJICovXG5leHBvcnRzLmNvbnRleHQgPSBjb250ZXh0XzEuQ29udGV4dEFQSS5nZXRJbnN0YW5jZSgpO1xudmFyIHRyYWNlXzEgPSByZXF1aXJlKFwiLi9hcGkvdHJhY2VcIik7XG4vKiogRW50cnlwb2ludCBmb3IgdHJhY2UgQVBJICovXG5leHBvcnRzLnRyYWNlID0gdHJhY2VfMS5UcmFjZUFQSS5nZXRJbnN0YW5jZSgpO1xudmFyIHByb3BhZ2F0aW9uXzEgPSByZXF1aXJlKFwiLi9hcGkvcHJvcGFnYXRpb25cIik7XG4vKiogRW50cnlwb2ludCBmb3IgcHJvcGFnYXRpb24gQVBJICovXG5leHBvcnRzLnByb3BhZ2F0aW9uID0gcHJvcGFnYXRpb25fMS5Qcm9wYWdhdGlvbkFQSS5nZXRJbnN0YW5jZSgpO1xudmFyIGRpYWdfMSA9IHJlcXVpcmUoXCIuL2FwaS9kaWFnXCIpO1xuLyoqXG4gKiBFbnRyeXBvaW50IGZvciBEaWFnIEFQSS5cbiAqIERlZmluZXMgRGlhZ25vc3RpYyBoYW5kbGVyIHVzZWQgZm9yIGludGVybmFsIGRpYWdub3N0aWMgbG9nZ2luZyBvcGVyYXRpb25zLlxuICogVGhlIGRlZmF1bHQgcHJvdmlkZXMgYSBOb29wIERpYWdMb2dnZXIgaW1wbGVtZW50YXRpb24gd2hpY2ggbWF5IGJlIGNoYW5nZWQgdmlhIHRoZVxuICogZGlhZy5zZXRMb2dnZXIobG9nZ2VyOiBEaWFnTG9nZ2VyKSBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0cy5kaWFnID0gZGlhZ18xLkRpYWdBUEkuaW5zdGFuY2UoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgICB0cmFjZTogZXhwb3J0cy50cmFjZSxcbiAgICBjb250ZXh0OiBleHBvcnRzLmNvbnRleHQsXG4gICAgcHJvcGFnYXRpb246IGV4cG9ydHMucHJvcGFnYXRpb24sXG4gICAgZGlhZzogZXhwb3J0cy5kaWFnLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/internal/global-utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/internal/global-utils.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unregisterGlobal = exports.getGlobal = exports.registerGlobal = void 0;\nvar __1 = __webpack_require__(/*! .. */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nvar platform_1 = __webpack_require__(/*! ../platform */ \"./node_modules/@opentelemetry/api/build/src/platform/browser/index.js\");\nvar version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@opentelemetry/api/build/src/version.js\");\nvar semver_1 = __webpack_require__(/*! ./semver */ \"./node_modules/@opentelemetry/api/build/src/internal/semver.js\");\nvar major = version_1.VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"io.opentelemetry.js.api.\" + major);\nvar _global = platform_1._globalThis;\nfunction registerGlobal(type, instance, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    _global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: version_1.VERSION,\n    };\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        __1.diag.error(err.stack || err.message);\n        return;\n    }\n    if (api.version !== version_1.VERSION) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error('@opentelemetry/api: All API registration versions must match');\n        __1.diag.error(err.stack || err.message);\n        return;\n    }\n    api[type] = instance;\n}\nexports.registerGlobal = registerGlobal;\nfunction getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !semver_1.isCompatible(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nexports.getGlobal = getGlobal;\nfunction unregisterGlobal(type) {\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\nexports.unregisterGlobal = unregisterGlobal;\n//# sourceMappingURL=global-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9pbnRlcm5hbC9nbG9iYWwtdXRpbHMuanM/ZjdmOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsVUFBVSxtQkFBTyxDQUFDLGdFQUFJO0FBQ3RCLGlCQUFpQixtQkFBTyxDQUFDLDBGQUFhO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLDBFQUFZO0FBQ3BDLGVBQWUsbUJBQU8sQ0FBQyxnRkFBVTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHVCQUF1QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9pbnRlcm5hbC9nbG9iYWwtdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVucmVnaXN0ZXJHbG9iYWwgPSBleHBvcnRzLmdldEdsb2JhbCA9IGV4cG9ydHMucmVnaXN0ZXJHbG9iYWwgPSB2b2lkIDA7XG52YXIgX18xID0gcmVxdWlyZShcIi4uXCIpO1xudmFyIHBsYXRmb3JtXzEgPSByZXF1aXJlKFwiLi4vcGxhdGZvcm1cIik7XG52YXIgdmVyc2lvbl8xID0gcmVxdWlyZShcIi4uL3ZlcnNpb25cIik7XG52YXIgc2VtdmVyXzEgPSByZXF1aXJlKFwiLi9zZW12ZXJcIik7XG52YXIgbWFqb3IgPSB2ZXJzaW9uXzEuVkVSU0lPTi5zcGxpdCgnLicpWzBdO1xudmFyIEdMT0JBTF9PUEVOVEVMRU1FVFJZX0FQSV9LRVkgPSBTeW1ib2wuZm9yKFwiaW8ub3BlbnRlbGVtZXRyeS5qcy5hcGkuXCIgKyBtYWpvcik7XG52YXIgX2dsb2JhbCA9IHBsYXRmb3JtXzEuX2dsb2JhbFRoaXM7XG5mdW5jdGlvbiByZWdpc3Rlckdsb2JhbCh0eXBlLCBpbnN0YW5jZSwgYWxsb3dPdmVycmlkZSkge1xuICAgIHZhciBfYTtcbiAgICBpZiAoYWxsb3dPdmVycmlkZSA9PT0gdm9pZCAwKSB7IGFsbG93T3ZlcnJpZGUgPSBmYWxzZTsgfVxuICAgIF9nbG9iYWxbR0xPQkFMX09QRU5URUxFTUVUUllfQVBJX0tFWV0gPSAoX2EgPSBfZ2xvYmFsW0dMT0JBTF9PUEVOVEVMRU1FVFJZX0FQSV9LRVldKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB7XG4gICAgICAgIHZlcnNpb246IHZlcnNpb25fMS5WRVJTSU9OLFxuICAgIH07XG4gICAgdmFyIGFwaSA9IF9nbG9iYWxbR0xPQkFMX09QRU5URUxFTUVUUllfQVBJX0tFWV07XG4gICAgaWYgKCFhbGxvd092ZXJyaWRlICYmIGFwaVt0eXBlXSkge1xuICAgICAgICAvLyBhbHJlYWR5IHJlZ2lzdGVyZWQgYW4gQVBJIG9mIHRoaXMgdHlwZVxuICAgICAgICB2YXIgZXJyID0gbmV3IEVycm9yKFwiQG9wZW50ZWxlbWV0cnkvYXBpOiBBdHRlbXB0ZWQgZHVwbGljYXRlIHJlZ2lzdHJhdGlvbiBvZiBBUEk6IFwiICsgdHlwZSk7XG4gICAgICAgIF9fMS5kaWFnLmVycm9yKGVyci5zdGFjayB8fCBlcnIubWVzc2FnZSk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGFwaS52ZXJzaW9uICE9PSB2ZXJzaW9uXzEuVkVSU0lPTikge1xuICAgICAgICAvLyBBbGwgcmVnaXN0ZXJlZCBBUElzIG11c3QgYmUgb2YgdGhlIHNhbWUgdmVyc2lvbiBleGFjdGx5XG4gICAgICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ0BvcGVudGVsZW1ldHJ5L2FwaTogQWxsIEFQSSByZWdpc3RyYXRpb24gdmVyc2lvbnMgbXVzdCBtYXRjaCcpO1xuICAgICAgICBfXzEuZGlhZy5lcnJvcihlcnIuc3RhY2sgfHwgZXJyLm1lc3NhZ2UpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGFwaVt0eXBlXSA9IGluc3RhbmNlO1xufVxuZXhwb3J0cy5yZWdpc3Rlckdsb2JhbCA9IHJlZ2lzdGVyR2xvYmFsO1xuZnVuY3Rpb24gZ2V0R2xvYmFsKHR5cGUpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHZhciBnbG9iYWxWZXJzaW9uID0gKF9hID0gX2dsb2JhbFtHTE9CQUxfT1BFTlRFTEVNRVRSWV9BUElfS0VZXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnZlcnNpb247XG4gICAgaWYgKCFnbG9iYWxWZXJzaW9uIHx8ICFzZW12ZXJfMS5pc0NvbXBhdGlibGUoZ2xvYmFsVmVyc2lvbikpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZXR1cm4gKF9iID0gX2dsb2JhbFtHTE9CQUxfT1BFTlRFTEVNRVRSWV9BUElfS0VZXSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iW3R5cGVdO1xufVxuZXhwb3J0cy5nZXRHbG9iYWwgPSBnZXRHbG9iYWw7XG5mdW5jdGlvbiB1bnJlZ2lzdGVyR2xvYmFsKHR5cGUpIHtcbiAgICB2YXIgYXBpID0gX2dsb2JhbFtHTE9CQUxfT1BFTlRFTEVNRVRSWV9BUElfS0VZXTtcbiAgICBpZiAoYXBpKSB7XG4gICAgICAgIGRlbGV0ZSBhcGlbdHlwZV07XG4gICAgfVxufVxuZXhwb3J0cy51bnJlZ2lzdGVyR2xvYmFsID0gdW5yZWdpc3Rlckdsb2JhbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbC11dGlscy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/internal/global-utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/internal/semver.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/internal/semver.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCompatible = exports._makeCompatibilityCheck = void 0;\nvar version_1 = __webpack_require__(/*! ../version */ \"./node_modules/@opentelemetry/api/build/src/version.js\");\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(?:-(.*))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nfunction _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n    };\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n        };\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\nexports._makeCompatibilityCheck = _makeCompatibilityCheck;\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexports.isCompatible = _makeCompatibilityCheck(version_1.VERSION);\n//# sourceMappingURL=semver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9pbnRlcm5hbC9zZW12ZXIuanM/NDZkMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsMEVBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixjQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvaW50ZXJuYWwvc2VtdmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0NvbXBhdGlibGUgPSBleHBvcnRzLl9tYWtlQ29tcGF0aWJpbGl0eUNoZWNrID0gdm9pZCAwO1xudmFyIHZlcnNpb25fMSA9IHJlcXVpcmUoXCIuLi92ZXJzaW9uXCIpO1xudmFyIHJlID0gL14oXFxkKylcXC4oXFxkKylcXC4oXFxkKykoPzotKC4qKSk/JC87XG4vKipcbiAqIENyZWF0ZSBhIGZ1bmN0aW9uIHRvIHRlc3QgYW4gQVBJIHZlcnNpb24gdG8gc2VlIGlmIGl0IGlzIGNvbXBhdGlibGUgd2l0aCB0aGUgcHJvdmlkZWQgb3duVmVyc2lvbi5cbiAqXG4gKiBUaGUgcmV0dXJuZWQgZnVuY3Rpb24gaGFzIHRoZSBmb2xsb3dpbmcgc2VtYW50aWNzOlxuICogLSBFeGFjdCBtYXRjaCBpcyBhbHdheXMgY29tcGF0aWJsZVxuICogLSBNYWpvciB2ZXJzaW9ucyBtdXN0IG1hdGNoIGV4YWN0bHlcbiAqICAgIC0gMS54IHBhY2thZ2UgY2Fubm90IHVzZSBnbG9iYWwgMi54IHBhY2thZ2VcbiAqICAgIC0gMi54IHBhY2thZ2UgY2Fubm90IHVzZSBnbG9iYWwgMS54IHBhY2thZ2VcbiAqIC0gVGhlIG1pbm9yIHZlcnNpb24gb2YgdGhlIEFQSSBtb2R1bGUgcmVxdWVzdGluZyBhY2Nlc3MgdG8gdGhlIGdsb2JhbCBBUEkgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdGhlIG1pbm9yIHZlcnNpb24gb2YgdGhpcyBBUElcbiAqICAgIC0gMS4zIHBhY2thZ2UgbWF5IHVzZSAxLjQgZ2xvYmFsIGJlY2F1c2UgdGhlIGxhdGVyIGdsb2JhbCBjb250YWlucyBhbGwgZnVuY3Rpb25zIDEuMyBleHBlY3RzXG4gKiAgICAtIDEuNCBwYWNrYWdlIG1heSBOT1QgdXNlIDEuMyBnbG9iYWwgYmVjYXVzZSBpdCBtYXkgdHJ5IHRvIGNhbGwgZnVuY3Rpb25zIHdoaWNoIGRvbid0IGV4aXN0IG9uIDEuM1xuICogLSBJZiB0aGUgbWFqb3IgdmVyc2lvbiBpcyAwLCB0aGUgbWlub3IgdmVyc2lvbiBpcyB0cmVhdGVkIGFzIHRoZSBtYWpvciBhbmQgdGhlIHBhdGNoIGlzIHRyZWF0ZWQgYXMgdGhlIG1pbm9yXG4gKiAtIFBhdGNoIGFuZCBidWlsZCB0YWcgZGlmZmVyZW5jZXMgYXJlIG5vdCBjb25zaWRlcmVkIGF0IHRoaXMgdGltZVxuICpcbiAqIEBwYXJhbSBvd25WZXJzaW9uIHZlcnNpb24gd2hpY2ggc2hvdWxkIGJlIGNoZWNrZWQgYWdhaW5zdFxuICovXG5mdW5jdGlvbiBfbWFrZUNvbXBhdGliaWxpdHlDaGVjayhvd25WZXJzaW9uKSB7XG4gICAgdmFyIGFjY2VwdGVkVmVyc2lvbnMgPSBuZXcgU2V0KFtvd25WZXJzaW9uXSk7XG4gICAgdmFyIHJlamVjdGVkVmVyc2lvbnMgPSBuZXcgU2V0KCk7XG4gICAgdmFyIG15VmVyc2lvbk1hdGNoID0gb3duVmVyc2lvbi5tYXRjaChyZSk7XG4gICAgaWYgKCFteVZlcnNpb25NYXRjaCkge1xuICAgICAgICAvLyB3ZSBjYW5ub3QgZ3VhcmFudGVlIGNvbXBhdGliaWxpdHkgc28gd2UgYWx3YXlzIHJldHVybiBub29wXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBmYWxzZTsgfTtcbiAgICB9XG4gICAgdmFyIG93blZlcnNpb25QYXJzZWQgPSB7XG4gICAgICAgIG1ham9yOiArbXlWZXJzaW9uTWF0Y2hbMV0sXG4gICAgICAgIG1pbm9yOiArbXlWZXJzaW9uTWF0Y2hbMl0sXG4gICAgICAgIHBhdGNoOiArbXlWZXJzaW9uTWF0Y2hbM10sXG4gICAgfTtcbiAgICBmdW5jdGlvbiBfcmVqZWN0KHYpIHtcbiAgICAgICAgcmVqZWN0ZWRWZXJzaW9ucy5hZGQodik7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gX2FjY2VwdCh2KSB7XG4gICAgICAgIGFjY2VwdGVkVmVyc2lvbnMuYWRkKHYpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGlzQ29tcGF0aWJsZShnbG9iYWxWZXJzaW9uKSB7XG4gICAgICAgIGlmIChhY2NlcHRlZFZlcnNpb25zLmhhcyhnbG9iYWxWZXJzaW9uKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlamVjdGVkVmVyc2lvbnMuaGFzKGdsb2JhbFZlcnNpb24pKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGdsb2JhbFZlcnNpb25NYXRjaCA9IGdsb2JhbFZlcnNpb24ubWF0Y2gocmUpO1xuICAgICAgICBpZiAoIWdsb2JhbFZlcnNpb25NYXRjaCkge1xuICAgICAgICAgICAgLy8gY2Fubm90IHBhcnNlIG90aGVyIHZlcnNpb25cbiAgICAgICAgICAgIC8vIHdlIGNhbm5vdCBndWFyYW50ZWUgY29tcGF0aWJpbGl0eSBzbyB3ZSBhbHdheXMgbm9vcFxuICAgICAgICAgICAgcmV0dXJuIF9yZWplY3QoZ2xvYmFsVmVyc2lvbik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGdsb2JhbFZlcnNpb25QYXJzZWQgPSB7XG4gICAgICAgICAgICBtYWpvcjogK2dsb2JhbFZlcnNpb25NYXRjaFsxXSxcbiAgICAgICAgICAgIG1pbm9yOiArZ2xvYmFsVmVyc2lvbk1hdGNoWzJdLFxuICAgICAgICAgICAgcGF0Y2g6ICtnbG9iYWxWZXJzaW9uTWF0Y2hbM10sXG4gICAgICAgIH07XG4gICAgICAgIC8vIG1ham9yIHZlcnNpb25zIG11c3QgbWF0Y2hcbiAgICAgICAgaWYgKG93blZlcnNpb25QYXJzZWQubWFqb3IgIT09IGdsb2JhbFZlcnNpb25QYXJzZWQubWFqb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBfcmVqZWN0KGdsb2JhbFZlcnNpb24pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvd25WZXJzaW9uUGFyc2VkLm1ham9yID09PSAwKSB7XG4gICAgICAgICAgICBpZiAob3duVmVyc2lvblBhcnNlZC5taW5vciA9PT0gZ2xvYmFsVmVyc2lvblBhcnNlZC5taW5vciAmJlxuICAgICAgICAgICAgICAgIG93blZlcnNpb25QYXJzZWQucGF0Y2ggPD0gZ2xvYmFsVmVyc2lvblBhcnNlZC5wYXRjaCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfYWNjZXB0KGdsb2JhbFZlcnNpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIF9yZWplY3QoZ2xvYmFsVmVyc2lvbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG93blZlcnNpb25QYXJzZWQubWlub3IgPD0gZ2xvYmFsVmVyc2lvblBhcnNlZC5taW5vcikge1xuICAgICAgICAgICAgcmV0dXJuIF9hY2NlcHQoZ2xvYmFsVmVyc2lvbik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9yZWplY3QoZ2xvYmFsVmVyc2lvbik7XG4gICAgfTtcbn1cbmV4cG9ydHMuX21ha2VDb21wYXRpYmlsaXR5Q2hlY2sgPSBfbWFrZUNvbXBhdGliaWxpdHlDaGVjaztcbi8qKlxuICogVGVzdCBhbiBBUEkgdmVyc2lvbiB0byBzZWUgaWYgaXQgaXMgY29tcGF0aWJsZSB3aXRoIHRoaXMgQVBJLlxuICpcbiAqIC0gRXhhY3QgbWF0Y2ggaXMgYWx3YXlzIGNvbXBhdGlibGVcbiAqIC0gTWFqb3IgdmVyc2lvbnMgbXVzdCBtYXRjaCBleGFjdGx5XG4gKiAgICAtIDEueCBwYWNrYWdlIGNhbm5vdCB1c2UgZ2xvYmFsIDIueCBwYWNrYWdlXG4gKiAgICAtIDIueCBwYWNrYWdlIGNhbm5vdCB1c2UgZ2xvYmFsIDEueCBwYWNrYWdlXG4gKiAtIFRoZSBtaW5vciB2ZXJzaW9uIG9mIHRoZSBBUEkgbW9kdWxlIHJlcXVlc3RpbmcgYWNjZXNzIHRvIHRoZSBnbG9iYWwgQVBJIG11c3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHRoZSBtaW5vciB2ZXJzaW9uIG9mIHRoaXMgQVBJXG4gKiAgICAtIDEuMyBwYWNrYWdlIG1heSB1c2UgMS40IGdsb2JhbCBiZWNhdXNlIHRoZSBsYXRlciBnbG9iYWwgY29udGFpbnMgYWxsIGZ1bmN0aW9ucyAxLjMgZXhwZWN0c1xuICogICAgLSAxLjQgcGFja2FnZSBtYXkgTk9UIHVzZSAxLjMgZ2xvYmFsIGJlY2F1c2UgaXQgbWF5IHRyeSB0byBjYWxsIGZ1bmN0aW9ucyB3aGljaCBkb24ndCBleGlzdCBvbiAxLjNcbiAqIC0gSWYgdGhlIG1ham9yIHZlcnNpb24gaXMgMCwgdGhlIG1pbm9yIHZlcnNpb24gaXMgdHJlYXRlZCBhcyB0aGUgbWFqb3IgYW5kIHRoZSBwYXRjaCBpcyB0cmVhdGVkIGFzIHRoZSBtaW5vclxuICogLSBQYXRjaCBhbmQgYnVpbGQgdGFnIGRpZmZlcmVuY2VzIGFyZSBub3QgY29uc2lkZXJlZCBhdCB0aGlzIHRpbWVcbiAqXG4gKiBAcGFyYW0gdmVyc2lvbiB2ZXJzaW9uIG9mIHRoZSBBUEkgcmVxdWVzdGluZyBhbiBpbnN0YW5jZSBvZiB0aGUgZ2xvYmFsIEFQSVxuICovXG5leHBvcnRzLmlzQ29tcGF0aWJsZSA9IF9tYWtlQ29tcGF0aWJpbGl0eUNoZWNrKHZlcnNpb25fMS5WRVJTSU9OKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlbXZlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/internal/semver.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/platform/browser/globalThis.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/platform/browser/globalThis.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._globalThis = void 0;\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexports._globalThis = typeof globalThis === 'object' ? globalThis : window;\n//# sourceMappingURL=globalThis.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2dsb2JhbFRoaXMuanM/YTgwYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2dsb2JhbFRoaXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLl9nbG9iYWxUaGlzID0gdm9pZCAwO1xuLyoqIG9ubHkgZ2xvYmFscyB0aGF0IGNvbW1vbiB0byBub2RlIGFuZCBicm93c2VycyBhcmUgYWxsb3dlZCAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vZGUvbm8tdW5zdXBwb3J0ZWQtZmVhdHVyZXMvZXMtYnVpbHRpbnMsIG5vLXVuZGVmXG5leHBvcnRzLl9nbG9iYWxUaGlzID0gdHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnID8gZ2xvYmFsVGhpcyA6IHdpbmRvdztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbFRoaXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/platform/browser/globalThis.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/platform/browser/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/platform/browser/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./globalThis */ \"./node_modules/@opentelemetry/api/build/src/platform/browser/globalThis.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzPzMzOTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxhQUFhLG1CQUFPLENBQUMsZ0dBQWM7QUFDbkMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZ2xvYmFsVGhpc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/propagation/NoopTextMapPropagator.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/propagation/NoopTextMapPropagator.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TEXT_MAP_PROPAGATOR = exports.NoopTextMapPropagator = void 0;\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\nexports.NoopTextMapPropagator = NoopTextMapPropagator;\nexports.NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n//# sourceMappingURL=NoopTextMapPropagator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wcm9wYWdhdGlvbi9Ob29wVGV4dE1hcFByb3BhZ2F0b3IuanM/YTIwYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQSw2QkFBNkIsd0JBQXdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEU7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wcm9wYWdhdGlvbi9Ob29wVGV4dE1hcFByb3BhZ2F0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5PT1BfVEVYVF9NQVBfUFJPUEFHQVRPUiA9IGV4cG9ydHMuTm9vcFRleHRNYXBQcm9wYWdhdG9yID0gdm9pZCAwO1xuLyoqXG4gKiBOby1vcCBpbXBsZW1lbnRhdGlvbnMgb2Yge0BsaW5rIFRleHRNYXBQcm9wYWdhdG9yfS5cbiAqL1xudmFyIE5vb3BUZXh0TWFwUHJvcGFnYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wVGV4dE1hcFByb3BhZ2F0b3IoKSB7XG4gICAgfVxuICAgIC8qKiBOb29wIGluamVjdCBmdW5jdGlvbiBkb2VzIG5vdGhpbmcgKi9cbiAgICBOb29wVGV4dE1hcFByb3BhZ2F0b3IucHJvdG90eXBlLmluamVjdCA9IGZ1bmN0aW9uIChfY29udGV4dCwgX2NhcnJpZXIpIHsgfTtcbiAgICAvKiogTm9vcCBleHRyYWN0IGZ1bmN0aW9uIGRvZXMgbm90aGluZyBhbmQgcmV0dXJucyB0aGUgaW5wdXQgY29udGV4dCAqL1xuICAgIE5vb3BUZXh0TWFwUHJvcGFnYXRvci5wcm90b3R5cGUuZXh0cmFjdCA9IGZ1bmN0aW9uIChjb250ZXh0LCBfY2Fycmllcikge1xuICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICB9O1xuICAgIE5vb3BUZXh0TWFwUHJvcGFnYXRvci5wcm90b3R5cGUuZmllbGRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfTtcbiAgICByZXR1cm4gTm9vcFRleHRNYXBQcm9wYWdhdG9yO1xufSgpKTtcbmV4cG9ydHMuTm9vcFRleHRNYXBQcm9wYWdhdG9yID0gTm9vcFRleHRNYXBQcm9wYWdhdG9yO1xuZXhwb3J0cy5OT09QX1RFWFRfTUFQX1BST1BBR0FUT1IgPSBuZXcgTm9vcFRleHRNYXBQcm9wYWdhdG9yKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ob29wVGV4dE1hcFByb3BhZ2F0b3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/propagation/NoopTextMapPropagator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/propagation/TextMapPropagator.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/propagation/TextMapPropagator.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultTextMapSetter = exports.defaultTextMapGetter = void 0;\nexports.defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nexports.defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy9wcm9wYWdhdGlvbi9UZXh0TWFwUHJvcGFnYXRvci5qcz9kY2QxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvcHJvcGFnYXRpb24vVGV4dE1hcFByb3BhZ2F0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHRUZXh0TWFwU2V0dGVyID0gZXhwb3J0cy5kZWZhdWx0VGV4dE1hcEdldHRlciA9IHZvaWQgMDtcbmV4cG9ydHMuZGVmYXVsdFRleHRNYXBHZXR0ZXIgPSB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoY2Fycmllciwga2V5KSB7XG4gICAgICAgIGlmIChjYXJyaWVyID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNhcnJpZXJba2V5XTtcbiAgICB9LFxuICAgIGtleXM6IGZ1bmN0aW9uIChjYXJyaWVyKSB7XG4gICAgICAgIGlmIChjYXJyaWVyID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMoY2Fycmllcik7XG4gICAgfSxcbn07XG5leHBvcnRzLmRlZmF1bHRUZXh0TWFwU2V0dGVyID0ge1xuICAgIHNldDogZnVuY3Rpb24gKGNhcnJpZXIsIGtleSwgdmFsdWUpIHtcbiAgICAgICAgaWYgKGNhcnJpZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNhcnJpZXJba2V5XSA9IHZhbHVlO1xuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGV4dE1hcFByb3BhZ2F0b3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/propagation/TextMapPropagator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/Event.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/Event.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Event.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9FdmVudC5qcz83MmY2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9FdmVudC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV2ZW50LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/Event.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopSpan = void 0;\nvar spancontext_utils_1 = __webpack_require__(/*! ./spancontext-utils */ \"./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\");\n/**\n * The NoopSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NoopSpan = /** @class */ (function () {\n    function NoopSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = spancontext_utils_1.INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NoopSpan.prototype.context = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for noopSpan.\n    NoopSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NoopSpan.prototype.recordException = function (_exception, _time) { };\n    return NoopSpan;\n}());\nexports.NoopSpan = NoopSpan;\n//# sourceMappingURL=NoopSpan.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Ob29wU3Bhbi5qcz80YTliIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyxtR0FBcUI7QUFDdkQ7QUFDQSxnQ0FBZ0MsV0FBVztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHlEQUF5RDtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RTtBQUN2RTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvTm9vcFNwYW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vb3BTcGFuID0gdm9pZCAwO1xudmFyIHNwYW5jb250ZXh0X3V0aWxzXzEgPSByZXF1aXJlKFwiLi9zcGFuY29udGV4dC11dGlsc1wiKTtcbi8qKlxuICogVGhlIE5vb3BTcGFuIGlzIHRoZSBkZWZhdWx0IHtAbGluayBTcGFufSB0aGF0IGlzIHVzZWQgd2hlbiBubyBTcGFuXG4gKiBpbXBsZW1lbnRhdGlvbiBpcyBhdmFpbGFibGUuIEFsbCBvcGVyYXRpb25zIGFyZSBuby1vcCBpbmNsdWRpbmcgY29udGV4dFxuICogcHJvcGFnYXRpb24uXG4gKi9cbnZhciBOb29wU3BhbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wU3Bhbihfc3BhbkNvbnRleHQpIHtcbiAgICAgICAgaWYgKF9zcGFuQ29udGV4dCA9PT0gdm9pZCAwKSB7IF9zcGFuQ29udGV4dCA9IHNwYW5jb250ZXh0X3V0aWxzXzEuSU5WQUxJRF9TUEFOX0NPTlRFWFQ7IH1cbiAgICAgICAgdGhpcy5fc3BhbkNvbnRleHQgPSBfc3BhbkNvbnRleHQ7XG4gICAgfVxuICAgIC8vIFJldHVybnMgYSBTcGFuQ29udGV4dC5cbiAgICBOb29wU3Bhbi5wcm90b3R5cGUuY29udGV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NwYW5Db250ZXh0O1xuICAgIH07XG4gICAgLy8gQnkgZGVmYXVsdCBkb2VzIG5vdGhpbmdcbiAgICBOb29wU3Bhbi5wcm90b3R5cGUuc2V0QXR0cmlidXRlID0gZnVuY3Rpb24gKF9rZXksIF92YWx1ZSkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIC8vIEJ5IGRlZmF1bHQgZG9lcyBub3RoaW5nXG4gICAgTm9vcFNwYW4ucHJvdG90eXBlLnNldEF0dHJpYnV0ZXMgPSBmdW5jdGlvbiAoX2F0dHJpYnV0ZXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICAvLyBCeSBkZWZhdWx0IGRvZXMgbm90aGluZ1xuICAgIE5vb3BTcGFuLnByb3RvdHlwZS5hZGRFdmVudCA9IGZ1bmN0aW9uIChfbmFtZSwgX2F0dHJpYnV0ZXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICAvLyBCeSBkZWZhdWx0IGRvZXMgbm90aGluZ1xuICAgIE5vb3BTcGFuLnByb3RvdHlwZS5zZXRTdGF0dXMgPSBmdW5jdGlvbiAoX3N0YXR1cykge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIC8vIEJ5IGRlZmF1bHQgZG9lcyBub3RoaW5nXG4gICAgTm9vcFNwYW4ucHJvdG90eXBlLnVwZGF0ZU5hbWUgPSBmdW5jdGlvbiAoX25hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICAvLyBCeSBkZWZhdWx0IGRvZXMgbm90aGluZ1xuICAgIE5vb3BTcGFuLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbiAoX2VuZFRpbWUpIHsgfTtcbiAgICAvLyBpc1JlY29yZGluZyBhbHdheXMgcmV0dXJucyBmYWxzZSBmb3Igbm9vcFNwYW4uXG4gICAgTm9vcFNwYW4ucHJvdG90eXBlLmlzUmVjb3JkaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICAvLyBCeSBkZWZhdWx0IGRvZXMgbm90aGluZ1xuICAgIE5vb3BTcGFuLnByb3RvdHlwZS5yZWNvcmRFeGNlcHRpb24gPSBmdW5jdGlvbiAoX2V4Y2VwdGlvbiwgX3RpbWUpIHsgfTtcbiAgICByZXR1cm4gTm9vcFNwYW47XG59KCkpO1xuZXhwb3J0cy5Ob29wU3BhbiA9IE5vb3BTcGFuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Tm9vcFNwYW4uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TRACER = exports.NoopTracer = void 0;\nvar context_1 = __webpack_require__(/*! ../context/context */ \"./node_modules/@opentelemetry/api/build/src/context/context.js\");\nvar NoopSpan_1 = __webpack_require__(/*! ./NoopSpan */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js\");\nvar spancontext_utils_1 = __webpack_require__(/*! ./spancontext-utils */ \"./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\");\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new NoopSpan_1.NoopSpan();\n        }\n        var parentFromContext = context && context_1.getSpanContext(context);\n        if (isSpanContext(parentFromContext) &&\n            spancontext_utils_1.isSpanContextValid(parentFromContext)) {\n            return new NoopSpan_1.NoopSpan(parentFromContext);\n        }\n        else {\n            return new NoopSpan_1.NoopSpan();\n        }\n    };\n    return NoopTracer;\n}());\nexports.NoopTracer = NoopTracer;\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\nexports.NOOP_TRACER = new NoopTracer();\n//# sourceMappingURL=NoopTracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Ob29wVHJhY2VyLmpzP2UxNjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLDBGQUFvQjtBQUM1QyxpQkFBaUIsbUJBQU8sQ0FBQyxpRkFBWTtBQUNyQywwQkFBMEIsbUJBQU8sQ0FBQyxtR0FBcUI7QUFDdkQ7QUFDQSw2QkFBNkIsYUFBYTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL05vb3BUcmFjZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5PT1BfVFJBQ0VSID0gZXhwb3J0cy5Ob29wVHJhY2VyID0gdm9pZCAwO1xudmFyIGNvbnRleHRfMSA9IHJlcXVpcmUoXCIuLi9jb250ZXh0L2NvbnRleHRcIik7XG52YXIgTm9vcFNwYW5fMSA9IHJlcXVpcmUoXCIuL05vb3BTcGFuXCIpO1xudmFyIHNwYW5jb250ZXh0X3V0aWxzXzEgPSByZXF1aXJlKFwiLi9zcGFuY29udGV4dC11dGlsc1wiKTtcbi8qKlxuICogTm8tb3AgaW1wbGVtZW50YXRpb25zIG9mIHtAbGluayBUcmFjZXJ9LlxuICovXG52YXIgTm9vcFRyYWNlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wVHJhY2VyKCkge1xuICAgIH1cbiAgICAvLyBzdGFydFNwYW4gc3RhcnRzIGEgbm9vcCBzcGFuLlxuICAgIE5vb3BUcmFjZXIucHJvdG90eXBlLnN0YXJ0U3BhbiA9IGZ1bmN0aW9uIChuYW1lLCBvcHRpb25zLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciByb290ID0gQm9vbGVhbihvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucm9vdCk7XG4gICAgICAgIGlmIChyb290KSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IE5vb3BTcGFuXzEuTm9vcFNwYW4oKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcGFyZW50RnJvbUNvbnRleHQgPSBjb250ZXh0ICYmIGNvbnRleHRfMS5nZXRTcGFuQ29udGV4dChjb250ZXh0KTtcbiAgICAgICAgaWYgKGlzU3BhbkNvbnRleHQocGFyZW50RnJvbUNvbnRleHQpICYmXG4gICAgICAgICAgICBzcGFuY29udGV4dF91dGlsc18xLmlzU3BhbkNvbnRleHRWYWxpZChwYXJlbnRGcm9tQ29udGV4dCkpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgTm9vcFNwYW5fMS5Ob29wU3BhbihwYXJlbnRGcm9tQ29udGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IE5vb3BTcGFuXzEuTm9vcFNwYW4oKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIE5vb3BUcmFjZXI7XG59KCkpO1xuZXhwb3J0cy5Ob29wVHJhY2VyID0gTm9vcFRyYWNlcjtcbmZ1bmN0aW9uIGlzU3BhbkNvbnRleHQoc3BhbkNvbnRleHQpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBzcGFuQ29udGV4dCA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgdHlwZW9mIHNwYW5Db250ZXh0WydzcGFuSWQnXSA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgdHlwZW9mIHNwYW5Db250ZXh0Wyd0cmFjZUlkJ10gPT09ICdzdHJpbmcnICYmXG4gICAgICAgIHR5cGVvZiBzcGFuQ29udGV4dFsndHJhY2VGbGFncyddID09PSAnbnVtYmVyJyk7XG59XG5leHBvcnRzLk5PT1BfVFJBQ0VSID0gbmV3IE5vb3BUcmFjZXIoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5vb3BUcmFjZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TRACER_PROVIDER = exports.NoopTracerProvider = void 0;\nvar NoopTracer_1 = __webpack_require__(/*! ./NoopTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js\");\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version) {\n        return NoopTracer_1.NOOP_TRACER;\n    };\n    return NoopTracerProvider;\n}());\nexports.NoopTracerProvider = NoopTracerProvider;\nexports.NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n//# sourceMappingURL=NoopTracerProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Ob29wVHJhY2VyUHJvdmlkZXIuanM/YjYyNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMscUZBQWM7QUFDekM7QUFDQSw2QkFBNkIscUJBQXFCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvTm9vcFRyYWNlclByb3ZpZGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5OT09QX1RSQUNFUl9QUk9WSURFUiA9IGV4cG9ydHMuTm9vcFRyYWNlclByb3ZpZGVyID0gdm9pZCAwO1xudmFyIE5vb3BUcmFjZXJfMSA9IHJlcXVpcmUoXCIuL05vb3BUcmFjZXJcIik7XG4vKipcbiAqIEFuIGltcGxlbWVudGF0aW9uIG9mIHRoZSB7QGxpbmsgVHJhY2VyUHJvdmlkZXJ9IHdoaWNoIHJldHVybnMgYW4gaW1wb3RlbnRcbiAqIFRyYWNlciBmb3IgYWxsIGNhbGxzIHRvIGBnZXRUcmFjZXJgLlxuICpcbiAqIEFsbCBvcGVyYXRpb25zIGFyZSBuby1vcC5cbiAqL1xudmFyIE5vb3BUcmFjZXJQcm92aWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wVHJhY2VyUHJvdmlkZXIoKSB7XG4gICAgfVxuICAgIE5vb3BUcmFjZXJQcm92aWRlci5wcm90b3R5cGUuZ2V0VHJhY2VyID0gZnVuY3Rpb24gKF9uYW1lLCBfdmVyc2lvbikge1xuICAgICAgICByZXR1cm4gTm9vcFRyYWNlcl8xLk5PT1BfVFJBQ0VSO1xuICAgIH07XG4gICAgcmV0dXJuIE5vb3BUcmFjZXJQcm92aWRlcjtcbn0oKSk7XG5leHBvcnRzLk5vb3BUcmFjZXJQcm92aWRlciA9IE5vb3BUcmFjZXJQcm92aWRlcjtcbmV4cG9ydHMuTk9PUF9UUkFDRVJfUFJPVklERVIgPSBuZXcgTm9vcFRyYWNlclByb3ZpZGVyKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ob29wVHJhY2VyUHJvdmlkZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyTracer = void 0;\nvar NoopTracer_1 = __webpack_require__(/*! ./NoopTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js\");\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version);\n        if (!tracer) {\n            return NoopTracer_1.NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\nexports.ProxyTracer = ProxyTracer;\n//# sourceMappingURL=ProxyTracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Qcm94eVRyYWNlci5qcz85OWQ0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyxxRkFBYztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvUHJveHlUcmFjZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByb3h5VHJhY2VyID0gdm9pZCAwO1xudmFyIE5vb3BUcmFjZXJfMSA9IHJlcXVpcmUoXCIuL05vb3BUcmFjZXJcIik7XG4vKipcbiAqIFByb3h5IHRyYWNlciBwcm92aWRlZCBieSB0aGUgcHJveHkgdHJhY2VyIHByb3ZpZGVyXG4gKi9cbnZhciBQcm94eVRyYWNlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQcm94eVRyYWNlcihfcHJvdmlkZXIsIG5hbWUsIHZlcnNpb24pIHtcbiAgICAgICAgdGhpcy5fcHJvdmlkZXIgPSBfcHJvdmlkZXI7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMudmVyc2lvbiA9IHZlcnNpb247XG4gICAgfVxuICAgIFByb3h5VHJhY2VyLnByb3RvdHlwZS5zdGFydFNwYW4gPSBmdW5jdGlvbiAobmFtZSwgb3B0aW9ucywgY29udGV4dCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0VHJhY2VyKCkuc3RhcnRTcGFuKG5hbWUsIG9wdGlvbnMsIGNvbnRleHQpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogVHJ5IHRvIGdldCBhIHRyYWNlciBmcm9tIHRoZSBwcm94eSB0cmFjZXIgcHJvdmlkZXIuXG4gICAgICogSWYgdGhlIHByb3h5IHRyYWNlciBwcm92aWRlciBoYXMgbm8gZGVsZWdhdGUsIHJldHVybiBhIG5vb3AgdHJhY2VyLlxuICAgICAqL1xuICAgIFByb3h5VHJhY2VyLnByb3RvdHlwZS5fZ2V0VHJhY2VyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fZGVsZWdhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9kZWxlZ2F0ZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdHJhY2VyID0gdGhpcy5fcHJvdmlkZXIuZ2V0RGVsZWdhdGVUcmFjZXIodGhpcy5uYW1lLCB0aGlzLnZlcnNpb24pO1xuICAgICAgICBpZiAoIXRyYWNlcikge1xuICAgICAgICAgICAgcmV0dXJuIE5vb3BUcmFjZXJfMS5OT09QX1RSQUNFUjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9kZWxlZ2F0ZSA9IHRyYWNlcjtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RlbGVnYXRlO1xuICAgIH07XG4gICAgcmV0dXJuIFByb3h5VHJhY2VyO1xufSgpKTtcbmV4cG9ydHMuUHJveHlUcmFjZXIgPSBQcm94eVRyYWNlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVByb3h5VHJhY2VyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyTracerProvider = void 0;\nvar ProxyTracer_1 = __webpack_require__(/*! ./ProxyTracer */ \"./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js\");\nvar NoopTracerProvider_1 = __webpack_require__(/*! ./NoopTracerProvider */ \"./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js\");\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version)) !== null && _a !== void 0 ? _a : new ProxyTracer_1.ProxyTracer(this, name, version));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NoopTracerProvider_1.NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version);\n    };\n    return ProxyTracerProvider;\n}());\nexports.ProxyTracerProvider = ProxyTracerProvider;\n//# sourceMappingURL=ProxyTracerProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9Qcm94eVRyYWNlclByb3ZpZGVyLmpzP2IxMjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLG9CQUFvQixtQkFBTyxDQUFDLHVGQUFlO0FBQzNDLDJCQUEyQixtQkFBTyxDQUFDLHFHQUFzQjtBQUN6RDtBQUNBLG1DQUFtQyxrQkFBa0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvUHJveHlUcmFjZXJQcm92aWRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJveHlUcmFjZXJQcm92aWRlciA9IHZvaWQgMDtcbnZhciBQcm94eVRyYWNlcl8xID0gcmVxdWlyZShcIi4vUHJveHlUcmFjZXJcIik7XG52YXIgTm9vcFRyYWNlclByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9Ob29wVHJhY2VyUHJvdmlkZXJcIik7XG4vKipcbiAqIFRyYWNlciBwcm92aWRlciB3aGljaCBwcm92aWRlcyB7QGxpbmsgUHJveHlUcmFjZXJ9cy5cbiAqXG4gKiBCZWZvcmUgYSBkZWxlZ2F0ZSBpcyBzZXQsIHRyYWNlcnMgcHJvdmlkZWQgYXJlIE5vT3AuXG4gKiAgIFdoZW4gYSBkZWxlZ2F0ZSBpcyBzZXQsIHRyYWNlcyBhcmUgcHJvdmlkZWQgZnJvbSB0aGUgZGVsZWdhdGUuXG4gKiAgIFdoZW4gYSBkZWxlZ2F0ZSBpcyBzZXQgYWZ0ZXIgdHJhY2VycyBoYXZlIGFscmVhZHkgYmVlbiBwcm92aWRlZCxcbiAqICAgYWxsIHRyYWNlcnMgYWxyZWFkeSBwcm92aWRlZCB3aWxsIHVzZSB0aGUgcHJvdmlkZWQgZGVsZWdhdGUgaW1wbGVtZW50YXRpb24uXG4gKi9cbnZhciBQcm94eVRyYWNlclByb3ZpZGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFByb3h5VHJhY2VyUHJvdmlkZXIoKSB7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhIHtAbGluayBQcm94eVRyYWNlcn1cbiAgICAgKi9cbiAgICBQcm94eVRyYWNlclByb3ZpZGVyLnByb3RvdHlwZS5nZXRUcmFjZXIgPSBmdW5jdGlvbiAobmFtZSwgdmVyc2lvbikge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiAoKF9hID0gdGhpcy5nZXREZWxlZ2F0ZVRyYWNlcihuYW1lLCB2ZXJzaW9uKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbmV3IFByb3h5VHJhY2VyXzEuUHJveHlUcmFjZXIodGhpcywgbmFtZSwgdmVyc2lvbikpO1xuICAgIH07XG4gICAgUHJveHlUcmFjZXJQcm92aWRlci5wcm90b3R5cGUuZ2V0RGVsZWdhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX2RlbGVnYXRlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBOb29wVHJhY2VyUHJvdmlkZXJfMS5OT09QX1RSQUNFUl9QUk9WSURFUjtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFNldCB0aGUgZGVsZWdhdGUgdHJhY2VyIHByb3ZpZGVyXG4gICAgICovXG4gICAgUHJveHlUcmFjZXJQcm92aWRlci5wcm90b3R5cGUuc2V0RGVsZWdhdGUgPSBmdW5jdGlvbiAoZGVsZWdhdGUpIHtcbiAgICAgICAgdGhpcy5fZGVsZWdhdGUgPSBkZWxlZ2F0ZTtcbiAgICB9O1xuICAgIFByb3h5VHJhY2VyUHJvdmlkZXIucHJvdG90eXBlLmdldERlbGVnYXRlVHJhY2VyID0gZnVuY3Rpb24gKG5hbWUsIHZlcnNpb24pIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gKF9hID0gdGhpcy5fZGVsZWdhdGUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5nZXRUcmFjZXIobmFtZSwgdmVyc2lvbik7XG4gICAgfTtcbiAgICByZXR1cm4gUHJveHlUcmFjZXJQcm92aWRlcjtcbn0oKSk7XG5leHBvcnRzLlByb3h5VHJhY2VyUHJvdmlkZXIgPSBQcm94eVRyYWNlclByb3ZpZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHJveHlUcmFjZXJQcm92aWRlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/Sampler.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/Sampler.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Sampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9TYW1wbGVyLmpzP2E5MWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL1NhbXBsZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TYW1wbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/Sampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/SamplingResult.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/SamplingResult.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SamplingDecision = void 0;\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nvar SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision = exports.SamplingDecision || (exports.SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9TYW1wbGluZ1Jlc3VsdC5qcz9kYzY2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBLDhDQUE4QyxXQUFXO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZEO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLENBQUMsK0VBQStFO0FBQ2hGIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvU2FtcGxpbmdSZXN1bHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNhbXBsaW5nRGVjaXNpb24gPSB2b2lkIDA7XG4vKipcbiAqIEEgc2FtcGxpbmcgZGVjaXNpb24gdGhhdCBkZXRlcm1pbmVzIGhvdyBhIHtAbGluayBTcGFufSB3aWxsIGJlIHJlY29yZGVkXG4gKiBhbmQgY29sbGVjdGVkLlxuICovXG52YXIgU2FtcGxpbmdEZWNpc2lvbjtcbihmdW5jdGlvbiAoU2FtcGxpbmdEZWNpc2lvbikge1xuICAgIC8qKlxuICAgICAqIGBTcGFuLmlzUmVjb3JkaW5nKCkgPT09IGZhbHNlYCwgc3BhbiB3aWxsIG5vdCBiZSByZWNvcmRlZCBhbmQgYWxsIGV2ZW50c1xuICAgICAqIGFuZCBhdHRyaWJ1dGVzIHdpbGwgYmUgZHJvcHBlZC5cbiAgICAgKi9cbiAgICBTYW1wbGluZ0RlY2lzaW9uW1NhbXBsaW5nRGVjaXNpb25bXCJOT1RfUkVDT1JEXCJdID0gMF0gPSBcIk5PVF9SRUNPUkRcIjtcbiAgICAvKipcbiAgICAgKiBgU3Bhbi5pc1JlY29yZGluZygpID09PSB0cnVlYCwgYnV0IGBTYW1wbGVkYCBmbGFnIGluIHtAbGluayBUcmFjZUZsYWdzfVxuICAgICAqIE1VU1QgTk9UIGJlIHNldC5cbiAgICAgKi9cbiAgICBTYW1wbGluZ0RlY2lzaW9uW1NhbXBsaW5nRGVjaXNpb25bXCJSRUNPUkRcIl0gPSAxXSA9IFwiUkVDT1JEXCI7XG4gICAgLyoqXG4gICAgICogYFNwYW4uaXNSZWNvcmRpbmcoKSA9PT0gdHJ1ZWAgQU5EIGBTYW1wbGVkYCBmbGFnIGluIHtAbGluayBUcmFjZUZsYWdzfVxuICAgICAqIE1VU1QgYmUgc2V0LlxuICAgICAqL1xuICAgIFNhbXBsaW5nRGVjaXNpb25bU2FtcGxpbmdEZWNpc2lvbltcIlJFQ09SRF9BTkRfU0FNUExFRFwiXSA9IDJdID0gXCJSRUNPUkRfQU5EX1NBTVBMRURcIjtcbn0pKFNhbXBsaW5nRGVjaXNpb24gPSBleHBvcnRzLlNhbXBsaW5nRGVjaXNpb24gfHwgKGV4cG9ydHMuU2FtcGxpbmdEZWNpc2lvbiA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TYW1wbGluZ1Jlc3VsdC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/SamplingResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/SpanOptions.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/SpanOptions.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SpanOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9TcGFuT3B0aW9ucy5qcz9kMzA5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9TcGFuT3B0aW9ucy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwYW5PcHRpb25zLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/SpanOptions.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/TimedEvent.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/TimedEvent.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=TimedEvent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9UaW1lZEV2ZW50LmpzP2I0OTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL1RpbWVkRXZlbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaW1lZEV2ZW50LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/TimedEvent.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/attributes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/attributes.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=attributes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9hdHRyaWJ1dGVzLmpzPzM5ZTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL2F0dHJpYnV0ZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdHRyaWJ1dGVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/attributes.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/link.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/link.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=link.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9saW5rLmpzPzkzMmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL2xpbmsuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5rLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/link.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/link_context.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/link_context.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=link_context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9saW5rX2NvbnRleHQuanM/NWQyZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvbGlua19jb250ZXh0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlua19jb250ZXh0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/link_context.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/span.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/span.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=span.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuLmpzPzY4NmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL3NwYW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGFuLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/span.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/span_context.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/span_context.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=span_context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuX2NvbnRleHQuanM/NjU2MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2Uvc3Bhbl9jb250ZXh0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3Bhbl9jb250ZXh0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/span_context.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/span_kind.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/span_kind.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpanKind = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind = exports.SpanKind || (exports.SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuX2tpbmQuanM/NzRlNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsdURBQXVEO0FBQ3hEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2Uvc3Bhbl9raW5kLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNwYW5LaW5kID0gdm9pZCAwO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBTcGFuS2luZDtcbihmdW5jdGlvbiAoU3BhbktpbmQpIHtcbiAgICAvKiogRGVmYXVsdCB2YWx1ZS4gSW5kaWNhdGVzIHRoYXQgdGhlIHNwYW4gaXMgdXNlZCBpbnRlcm5hbGx5LiAqL1xuICAgIFNwYW5LaW5kW1NwYW5LaW5kW1wiSU5URVJOQUxcIl0gPSAwXSA9IFwiSU5URVJOQUxcIjtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgdGhhdCB0aGUgc3BhbiBjb3ZlcnMgc2VydmVyLXNpZGUgaGFuZGxpbmcgb2YgYW4gUlBDIG9yIG90aGVyXG4gICAgICogcmVtb3RlIHJlcXVlc3QuXG4gICAgICovXG4gICAgU3BhbktpbmRbU3BhbktpbmRbXCJTRVJWRVJcIl0gPSAxXSA9IFwiU0VSVkVSXCI7XG4gICAgLyoqXG4gICAgICogSW5kaWNhdGVzIHRoYXQgdGhlIHNwYW4gY292ZXJzIHRoZSBjbGllbnQtc2lkZSB3cmFwcGVyIGFyb3VuZCBhbiBSUEMgb3JcbiAgICAgKiBvdGhlciByZW1vdGUgcmVxdWVzdC5cbiAgICAgKi9cbiAgICBTcGFuS2luZFtTcGFuS2luZFtcIkNMSUVOVFwiXSA9IDJdID0gXCJDTElFTlRcIjtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgdGhhdCB0aGUgc3BhbiBkZXNjcmliZXMgcHJvZHVjZXIgc2VuZGluZyBhIG1lc3NhZ2UgdG8gYVxuICAgICAqIGJyb2tlci4gVW5saWtlIGNsaWVudCBhbmQgc2VydmVyLCB0aGVyZSBpcyBubyBkaXJlY3QgY3JpdGljYWwgcGF0aCBsYXRlbmN5XG4gICAgICogcmVsYXRpb25zaGlwIGJldHdlZW4gcHJvZHVjZXIgYW5kIGNvbnN1bWVyIHNwYW5zLlxuICAgICAqL1xuICAgIFNwYW5LaW5kW1NwYW5LaW5kW1wiUFJPRFVDRVJcIl0gPSAzXSA9IFwiUFJPRFVDRVJcIjtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgdGhhdCB0aGUgc3BhbiBkZXNjcmliZXMgY29uc3VtZXIgcmVjZWl2aW5nIGEgbWVzc2FnZSBmcm9tIGFcbiAgICAgKiBicm9rZXIuIFVubGlrZSBjbGllbnQgYW5kIHNlcnZlciwgdGhlcmUgaXMgbm8gZGlyZWN0IGNyaXRpY2FsIHBhdGggbGF0ZW5jeVxuICAgICAqIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHByb2R1Y2VyIGFuZCBjb25zdW1lciBzcGFucy5cbiAgICAgKi9cbiAgICBTcGFuS2luZFtTcGFuS2luZFtcIkNPTlNVTUVSXCJdID0gNF0gPSBcIkNPTlNVTUVSXCI7XG59KShTcGFuS2luZCA9IGV4cG9ydHMuU3BhbktpbmQgfHwgKGV4cG9ydHMuU3BhbktpbmQgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3Bhbl9raW5kLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/span_kind.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSpanContextValid = exports.isValidSpanId = exports.isValidTraceId = exports.INVALID_SPAN_CONTEXT = exports.INVALID_TRACEID = exports.INVALID_SPANID = void 0;\nvar trace_flags_1 = __webpack_require__(/*! ./trace_flags */ \"./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js\");\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexports.INVALID_SPANID = '0000000000000000';\nexports.INVALID_TRACEID = '00000000000000000000000000000000';\nexports.INVALID_SPAN_CONTEXT = {\n    traceId: exports.INVALID_TRACEID,\n    spanId: exports.INVALID_SPANID,\n    traceFlags: trace_flags_1.TraceFlags.NONE,\n};\nfunction isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== exports.INVALID_TRACEID;\n}\nexports.isValidTraceId = isValidTraceId;\nfunction isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== exports.INVALID_SPANID;\n}\nexports.isValidSpanId = isValidSpanId;\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nfunction isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\nexports.isSpanContextValid = isSpanContextValid;\n//# sourceMappingURL=spancontext-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuY29udGV4dC11dGlscy5qcz85ZTljIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyx1RkFBZTtBQUMzQyxzQ0FBc0MsR0FBRztBQUN6QyxvQ0FBb0MsR0FBRztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixrQkFBa0I7QUFDM0MseUJBQXlCLGtCQUFrQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zcGFuY29udGV4dC11dGlscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1NwYW5Db250ZXh0VmFsaWQgPSBleHBvcnRzLmlzVmFsaWRTcGFuSWQgPSBleHBvcnRzLmlzVmFsaWRUcmFjZUlkID0gZXhwb3J0cy5JTlZBTElEX1NQQU5fQ09OVEVYVCA9IGV4cG9ydHMuSU5WQUxJRF9UUkFDRUlEID0gZXhwb3J0cy5JTlZBTElEX1NQQU5JRCA9IHZvaWQgMDtcbnZhciB0cmFjZV9mbGFnc18xID0gcmVxdWlyZShcIi4vdHJhY2VfZmxhZ3NcIik7XG52YXIgVkFMSURfVFJBQ0VJRF9SRUdFWCA9IC9eKFswLTlhLWZdezMyfSkkL2k7XG52YXIgVkFMSURfU1BBTklEX1JFR0VYID0gL15bMC05YS1mXXsxNn0kL2k7XG5leHBvcnRzLklOVkFMSURfU1BBTklEID0gJzAwMDAwMDAwMDAwMDAwMDAnO1xuZXhwb3J0cy5JTlZBTElEX1RSQUNFSUQgPSAnMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnO1xuZXhwb3J0cy5JTlZBTElEX1NQQU5fQ09OVEVYVCA9IHtcbiAgICB0cmFjZUlkOiBleHBvcnRzLklOVkFMSURfVFJBQ0VJRCxcbiAgICBzcGFuSWQ6IGV4cG9ydHMuSU5WQUxJRF9TUEFOSUQsXG4gICAgdHJhY2VGbGFnczogdHJhY2VfZmxhZ3NfMS5UcmFjZUZsYWdzLk5PTkUsXG59O1xuZnVuY3Rpb24gaXNWYWxpZFRyYWNlSWQodHJhY2VJZCkge1xuICAgIHJldHVybiBWQUxJRF9UUkFDRUlEX1JFR0VYLnRlc3QodHJhY2VJZCkgJiYgdHJhY2VJZCAhPT0gZXhwb3J0cy5JTlZBTElEX1RSQUNFSUQ7XG59XG5leHBvcnRzLmlzVmFsaWRUcmFjZUlkID0gaXNWYWxpZFRyYWNlSWQ7XG5mdW5jdGlvbiBpc1ZhbGlkU3BhbklkKHNwYW5JZCkge1xuICAgIHJldHVybiBWQUxJRF9TUEFOSURfUkVHRVgudGVzdChzcGFuSWQpICYmIHNwYW5JZCAhPT0gZXhwb3J0cy5JTlZBTElEX1NQQU5JRDtcbn1cbmV4cG9ydHMuaXNWYWxpZFNwYW5JZCA9IGlzVmFsaWRTcGFuSWQ7XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGlzIHtAbGluayBTcGFuQ29udGV4dH0gaXMgdmFsaWQuXG4gKiBAcmV0dXJuIHRydWUgaWYgdGhpcyB7QGxpbmsgU3BhbkNvbnRleHR9IGlzIHZhbGlkLlxuICovXG5mdW5jdGlvbiBpc1NwYW5Db250ZXh0VmFsaWQoc3BhbkNvbnRleHQpIHtcbiAgICByZXR1cm4gKGlzVmFsaWRUcmFjZUlkKHNwYW5Db250ZXh0LnRyYWNlSWQpICYmIGlzVmFsaWRTcGFuSWQoc3BhbkNvbnRleHQuc3BhbklkKSk7XG59XG5leHBvcnRzLmlzU3BhbkNvbnRleHRWYWxpZCA9IGlzU3BhbkNvbnRleHRWYWxpZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNwYW5jb250ZXh0LXV0aWxzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/status.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/status.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpanStatusCode = void 0;\n/**\n * An enumeration of status codes.\n */\nvar SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode = exports.SpanStatusCode || (exports.SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zdGF0dXMuanM/NjY5NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx5RUFBeUU7QUFDMUUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS9zdGF0dXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3BhblN0YXR1c0NvZGUgPSB2b2lkIDA7XG4vKipcbiAqIEFuIGVudW1lcmF0aW9uIG9mIHN0YXR1cyBjb2Rlcy5cbiAqL1xudmFyIFNwYW5TdGF0dXNDb2RlO1xuKGZ1bmN0aW9uIChTcGFuU3RhdHVzQ29kZSkge1xuICAgIC8qKlxuICAgICAqIFRoZSBkZWZhdWx0IHN0YXR1cy5cbiAgICAgKi9cbiAgICBTcGFuU3RhdHVzQ29kZVtTcGFuU3RhdHVzQ29kZVtcIlVOU0VUXCJdID0gMF0gPSBcIlVOU0VUXCI7XG4gICAgLyoqXG4gICAgICogVGhlIG9wZXJhdGlvbiBoYXMgYmVlbiB2YWxpZGF0ZWQgYnkgYW4gQXBwbGljYXRpb24gZGV2ZWxvcGVyIG9yXG4gICAgICogT3BlcmF0b3IgdG8gaGF2ZSBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LlxuICAgICAqL1xuICAgIFNwYW5TdGF0dXNDb2RlW1NwYW5TdGF0dXNDb2RlW1wiT0tcIl0gPSAxXSA9IFwiT0tcIjtcbiAgICAvKipcbiAgICAgKiBUaGUgb3BlcmF0aW9uIGNvbnRhaW5zIGFuIGVycm9yLlxuICAgICAqL1xuICAgIFNwYW5TdGF0dXNDb2RlW1NwYW5TdGF0dXNDb2RlW1wiRVJST1JcIl0gPSAyXSA9IFwiRVJST1JcIjtcbn0pKFNwYW5TdGF0dXNDb2RlID0gZXhwb3J0cy5TcGFuU3RhdHVzQ29kZSB8fCAoZXhwb3J0cy5TcGFuU3RhdHVzQ29kZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0dXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/status.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceFlags = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags = exports.TraceFlags || (exports.TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZV9mbGFncy5qcz83MmE5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDZEQUE2RDtBQUM5RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3RyYWNlL3RyYWNlX2ZsYWdzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYWNlRmxhZ3MgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIFRyYWNlRmxhZ3M7XG4oZnVuY3Rpb24gKFRyYWNlRmxhZ3MpIHtcbiAgICAvKiogUmVwcmVzZW50cyBubyBmbGFnIHNldC4gKi9cbiAgICBUcmFjZUZsYWdzW1RyYWNlRmxhZ3NbXCJOT05FXCJdID0gMF0gPSBcIk5PTkVcIjtcbiAgICAvKiogQml0IHRvIHJlcHJlc2VudCB3aGV0aGVyIHRyYWNlIGlzIHNhbXBsZWQgaW4gdHJhY2UgZmxhZ3MuICovXG4gICAgVHJhY2VGbGFnc1tUcmFjZUZsYWdzW1wiU0FNUExFRFwiXSA9IDFdID0gXCJTQU1QTEVEXCI7XG59KShUcmFjZUZsYWdzID0gZXhwb3J0cy5UcmFjZUZsYWdzIHx8IChleHBvcnRzLlRyYWNlRmxhZ3MgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2VfZmxhZ3MuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/trace_state.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/trace_state.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace_state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZV9zdGF0ZS5qcz81YzhhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZV9zdGF0ZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNlX3N0YXRlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/trace_state.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/tracer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/tracer.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZXIuanM/M2I0YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvdHJhY2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2VyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/tracer.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/trace/tracer_provider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/trace/tracer_provider.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tracer_provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy90cmFjZS90cmFjZXJfcHJvdmlkZXIuanM/YTAyZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2FwaS9idWlsZC9zcmMvdHJhY2UvdHJhY2VyX3Byb3ZpZGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2VyX3Byb3ZpZGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/trace/tracer_provider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/api/build/src/version.js":
/*!**************************************************************!*\
  !*** ./node_modules/@opentelemetry/api/build/src/version.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.VERSION = '1.0.0-rc.3';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvYXBpL2J1aWxkL3NyYy92ZXJzaW9uLmpzP2M4YjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9hcGkvYnVpbGQvc3JjL3ZlcnNpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuVkVSU0lPTiA9ICcxLjAuMC1yYy4zJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/api/build/src/version.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone-peer-dep/build/src/ZoneContextManager.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone-peer-dep/build/src/ZoneContextManager.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZoneContextManager = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"./node_modules/@opentelemetry/context-zone-peer-dep/build/src/util.js\");\n/* Key name to be used to save a context reference in Zone */\nconst ZONE_CONTEXT_KEY = 'OT_ZONE_CONTEXT';\n/**\n * ZoneContextManager\n * This module provides an easy functionality for tracing action between asynchronous operations in web.\n * It was not possible with standard [StackContextManager]{@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-web/src/StackContextManager.ts}.\n * It heavily depends on [zone.js]{@link https://www.npmjs.com/package/zone.js}.\n * It stores the information about context in zone. Each Context will have always new Zone;\n * It also supports binding a certain Span to a target that has \"addEventListener\" and \"removeEventListener\".\n * When this happens a new zone is being created and the provided Span is being assigned to this zone.\n */\nclass ZoneContextManager {\n    constructor() {\n        /**\n         * whether the context manager is enabled or not\n         */\n        this._enabled = false;\n        /**\n         * Helps to create a unique name for the zones - part of zone name\n         */\n        this._zoneCounter = 0;\n    }\n    /**\n     * Returns the active context from certain zone name\n     * @param activeZone\n     */\n    _activeContextFromZone(activeZone) {\n        return (activeZone && activeZone.get(ZONE_CONTEXT_KEY)) || api_1.ROOT_CONTEXT;\n    }\n    /**\n     * @param target Function to be executed within the context\n     * @param context A context (span) to be executed within target function\n     */\n    _bindFunction(target, context) {\n        const manager = this;\n        const contextWrapper = function (...args) {\n            return manager.with(context, () => target.apply(this, args));\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    }\n    /**\n     * @param obj target object on which the listeners will be patched\n     * @param context A context (span) to be bind to target\n     */\n    _bindListener(obj, context) {\n        const target = obj;\n        if (target.__ot_listeners !== undefined) {\n            return obj;\n        }\n        target.__ot_listeners = {};\n        if (typeof target.addEventListener === 'function') {\n            target.addEventListener = this._patchAddEventListener(target, target.addEventListener, context);\n        }\n        if (typeof target.removeEventListener === 'function') {\n            target.removeEventListener = this._patchRemoveEventListener(target, target.removeEventListener);\n        }\n        return obj;\n    }\n    /**\n     * Creates a new unique zone name\n     */\n    _createZoneName() {\n        this._zoneCounter++;\n        const random = Math.random();\n        return `${this._zoneCounter}-${random}`;\n    }\n    /**\n     * Creates a new zone\n     * @param zoneName zone name\n     * @param context A context (span) to be bind with Zone\n     */\n    _createZone(zoneName, context) {\n        return Zone.current.fork({\n            name: zoneName,\n            properties: {\n                [ZONE_CONTEXT_KEY]: context,\n            },\n        });\n    }\n    /**\n     * Returns the active zone\n     */\n    _getActiveZone() {\n        return Zone.current;\n    }\n    /**\n     * Patches addEventListener method\n     * @param target any target that has \"addEventListener\" method\n     * @param original reference to the patched method\n     * @param [context] context to be bind to the listener\n     */\n    _patchAddEventListener(target, original, context) {\n        const contextManager = this;\n        return function (event, listener, opts) {\n            if (target.__ot_listeners === undefined) {\n                target.__ot_listeners = {};\n            }\n            let listeners = target.__ot_listeners[event];\n            if (listeners === undefined) {\n                listeners = new WeakMap();\n                target.__ot_listeners[event] = listeners;\n            }\n            const patchedListener = contextManager.bind(listener, context);\n            // store a weak reference of the user listener to ours\n            listeners.set(listener, patchedListener);\n            return original.call(this, event, patchedListener, opts);\n        };\n    }\n    /**\n     * Patches removeEventListener method\n     * @param target any target that has \"removeEventListener\" method\n     * @param original reference to the patched method\n     */\n    _patchRemoveEventListener(target, original) {\n        return function (event, listener) {\n            if (target.__ot_listeners === undefined ||\n                target.__ot_listeners[event] === undefined) {\n                return original.call(this, event, listener);\n            }\n            const events = target.__ot_listeners[event];\n            const patchedListener = events.get(listener);\n            events.delete(listener);\n            return original.call(this, event, patchedListener || listener);\n        };\n    }\n    /**\n     * Returns the active context\n     */\n    active() {\n        if (!this._enabled) {\n            return api_1.ROOT_CONTEXT;\n        }\n        const activeZone = this._getActiveZone();\n        const active = this._activeContextFromZone(activeZone);\n        if (active) {\n            return active;\n        }\n        return api_1.ROOT_CONTEXT;\n    }\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param target\n     * @param context A context (span) to be bind to target\n     */\n    bind(target, context) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(target, context);\n        }\n        else if (util_1.isListenerObject(target)) {\n            this._bindListener(target, context);\n        }\n        return target;\n    }\n    /**\n     * Disable the context manager (clears all the contexts)\n     */\n    disable() {\n        this._enabled = false;\n        return this;\n    }\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    enable() {\n        this._enabled = true;\n        return this;\n    }\n    /**\n     * Calls the callback function [fn] with the provided [context].\n     *     If [context] is undefined then it will use the active context.\n     *     The context will be set as active\n     * @param context A context (span) to be called with provided callback\n     * @param fn Callback function\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    with(context, fn, thisArg, ...args) {\n        const zoneName = this._createZoneName();\n        const newZone = this._createZone(zoneName, context);\n        return newZone.run(fn, thisArg, args);\n    }\n}\nexports.ZoneContextManager = ZoneContextManager;\n//# sourceMappingURL=ZoneContextManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone-peer-dep/build/src/ZoneContextManager.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone-peer-dep/build/src/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone-peer-dep/build/src/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./ZoneContextManager */ \"./node_modules/@opentelemetry/context-zone-peer-dep/build/src/ZoneContextManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/context-zone-peer-dep/build/src/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwL2J1aWxkL3NyYy9pbmRleC5qcz9lMDMzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLGlIQUFzQjtBQUMzQyxhQUFhLG1CQUFPLENBQUMsdUZBQVM7QUFDOUIiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1pvbmVDb250ZXh0TWFuYWdlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone-peer-dep/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone-peer-dep/build/src/types.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone-peer-dep/build/src/types.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwL2J1aWxkL3NyYy90eXBlcy5qcz9hMzlkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwL2J1aWxkL3NyYy90eXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone-peer-dep/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone-peer-dep/build/src/util.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone-peer-dep/build/src/util.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isListenerObject = void 0;\n/**\n * check if an object has addEventListener and removeEventListener functions then it will return true\n * @param obj\n */\nfunction isListenerObject(obj = {}) {\n    return (typeof obj.addEventListener === 'function' &&\n        typeof obj.removeEventListener === 'function');\n}\nexports.isListenerObject = isListenerObject;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwL2J1aWxkL3NyYy91dGlsLmpzPzM4NWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwL2J1aWxkL3NyYy91dGlsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0xpc3RlbmVyT2JqZWN0ID0gdm9pZCAwO1xuLyoqXG4gKiBjaGVjayBpZiBhbiBvYmplY3QgaGFzIGFkZEV2ZW50TGlzdGVuZXIgYW5kIHJlbW92ZUV2ZW50TGlzdGVuZXIgZnVuY3Rpb25zIHRoZW4gaXQgd2lsbCByZXR1cm4gdHJ1ZVxuICogQHBhcmFtIG9ialxuICovXG5mdW5jdGlvbiBpc0xpc3RlbmVyT2JqZWN0KG9iaiA9IHt9KSB7XG4gICAgcmV0dXJuICh0eXBlb2Ygb2JqLmFkZEV2ZW50TGlzdGVuZXIgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgICAgdHlwZW9mIG9iai5yZW1vdmVFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nKTtcbn1cbmV4cG9ydHMuaXNMaXN0ZW5lck9iamVjdCA9IGlzTGlzdGVuZXJPYmplY3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone-peer-dep/build/src/util.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/context-zone/build/src/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@opentelemetry/context-zone/build/src/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! @opentelemetry/context-zone-peer-dep */ \"./node_modules/@opentelemetry/context-zone-peer-dep/build/src/index.js\"), exports);\n__webpack_require__(/*! zone.js */ \"./node_modules/zone.js/fesm2015/zone.js\");\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lL2J1aWxkL3NyYy9pbmRleC5qcz85MTRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLG9IQUFzQztBQUMzRCxtQkFBTyxDQUFDLHdEQUFTO0FBQ2pCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvbnRleHQtem9uZS9idWlsZC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lLXBlZXItZGVwXCIpLCBleHBvcnRzKTtcbnJlcXVpcmUoXCJ6b25lLmpzXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/context-zone/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/ExportResult.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/ExportResult.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExportResultCode = void 0;\nvar ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode = exports.ExportResultCode || (exports.ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvRXhwb3J0UmVzdWx0LmpzPzdmNjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywrRUFBK0U7QUFDaEYiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvRXhwb3J0UmVzdWx0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FeHBvcnRSZXN1bHRDb2RlID0gdm9pZCAwO1xudmFyIEV4cG9ydFJlc3VsdENvZGU7XG4oZnVuY3Rpb24gKEV4cG9ydFJlc3VsdENvZGUpIHtcbiAgICBFeHBvcnRSZXN1bHRDb2RlW0V4cG9ydFJlc3VsdENvZGVbXCJTVUNDRVNTXCJdID0gMF0gPSBcIlNVQ0NFU1NcIjtcbiAgICBFeHBvcnRSZXN1bHRDb2RlW0V4cG9ydFJlc3VsdENvZGVbXCJGQUlMRURcIl0gPSAxXSA9IFwiRkFJTEVEXCI7XG59KShFeHBvcnRSZXN1bHRDb2RlID0gZXhwb3J0cy5FeHBvcnRSZXN1bHRDb2RlIHx8IChleHBvcnRzLkV4cG9ydFJlc3VsdENvZGUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXhwb3J0UmVzdWx0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/ExportResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/baggage/propagation/HttpBaggage.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/baggage/propagation/HttpBaggage.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpBaggage = exports.MAX_TOTAL_LENGTH = exports.MAX_PER_NAME_VALUE_PAIRS = exports.MAX_NAME_VALUE_PAIRS = exports.BAGGAGE_HEADER = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst KEY_PAIR_SEPARATOR = '=';\nconst PROPERTIES_SEPARATOR = ';';\nconst ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexports.BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexports.MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexports.MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexports.MAX_TOTAL_LENGTH = 8192;\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nclass HttpBaggage {\n    inject(context, carrier, setter) {\n        const baggage = api_1.getBaggage(context);\n        if (!baggage || api_1.isInstrumentationSuppressed(context))\n            return;\n        const keyPairs = this._getKeyPairs(baggage)\n            .filter((pair) => {\n            return pair.length <= exports.MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, exports.MAX_NAME_VALUE_PAIRS);\n        const headerValue = this._serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, exports.BAGGAGE_HEADER, headerValue);\n        }\n    }\n    _serializeKeyPairs(keyPairs) {\n        return keyPairs.reduce((hValue, current) => {\n            const value = `${hValue}${hValue !== '' ? ITEMS_SEPARATOR : ''}${current}`;\n            return value.length > exports.MAX_TOTAL_LENGTH ? hValue : value;\n        }, '');\n    }\n    _getKeyPairs(baggage) {\n        return baggage\n            .getAllEntries()\n            .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`);\n    }\n    extract(context, carrier, getter) {\n        const headerValue = getter.get(carrier, exports.BAGGAGE_HEADER);\n        if (!headerValue)\n            return context;\n        const baggage = {};\n        if (headerValue.length === 0) {\n            return context;\n        }\n        const pairs = headerValue.split(ITEMS_SEPARATOR);\n        pairs.forEach(entry => {\n            const keyPair = this._parsePairKeyValue(entry);\n            if (keyPair) {\n                const baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return api_1.setBaggage(context, api_1.createBaggage(baggage));\n    }\n    _parsePairKeyValue(entry) {\n        const valueProps = entry.split(PROPERTIES_SEPARATOR);\n        if (valueProps.length <= 0)\n            return;\n        const keyPairPart = valueProps.shift();\n        if (!keyPairPart)\n            return;\n        const keyPair = keyPairPart.split(KEY_PAIR_SEPARATOR);\n        if (keyPair.length !== 2)\n            return;\n        const key = decodeURIComponent(keyPair[0].trim());\n        const value = decodeURIComponent(keyPair[1].trim());\n        let metadata;\n        if (valueProps.length > 0) {\n            metadata = api_1.baggageEntryMetadataFromString(valueProps.join(PROPERTIES_SEPARATOR));\n        }\n        return { key, value, metadata };\n    }\n    fields() {\n        return [exports.BAGGAGE_HEADER];\n    }\n}\nexports.HttpBaggage = HttpBaggage;\n//# sourceMappingURL=HttpBaggage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvYmFnZ2FnZS9wcm9wYWdhdGlvbi9IdHRwQmFnZ2FnZS5qcz8yYjIxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0ZBQW9CO0FBQzFDO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxRQUFRO0FBQ3JGO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHdCQUF3QixHQUFHLGdDQUFnQztBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9iYWdnYWdlL3Byb3BhZ2F0aW9uL0h0dHBCYWdnYWdlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IdHRwQmFnZ2FnZSA9IGV4cG9ydHMuTUFYX1RPVEFMX0xFTkdUSCA9IGV4cG9ydHMuTUFYX1BFUl9OQU1FX1ZBTFVFX1BBSVJTID0gZXhwb3J0cy5NQVhfTkFNRV9WQUxVRV9QQUlSUyA9IGV4cG9ydHMuQkFHR0FHRV9IRUFERVIgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBLRVlfUEFJUl9TRVBBUkFUT1IgPSAnPSc7XG5jb25zdCBQUk9QRVJUSUVTX1NFUEFSQVRPUiA9ICc7JztcbmNvbnN0IElURU1TX1NFUEFSQVRPUiA9ICcsJztcbi8vIE5hbWUgb2YgdGhlIGh0dHAgaGVhZGVyIHVzZWQgdG8gcHJvcGFnYXRlIHRoZSBiYWdnYWdlXG5leHBvcnRzLkJBR0dBR0VfSEVBREVSID0gJ2JhZ2dhZ2UnO1xuLy8gTWF4aW11bSBudW1iZXIgb2YgbmFtZS12YWx1ZSBwYWlycyBhbGxvd2VkIGJ5IHczYyBzcGVjXG5leHBvcnRzLk1BWF9OQU1FX1ZBTFVFX1BBSVJTID0gMTgwO1xuLy8gTWF4aW11bSBudW1iZXIgb2YgYnl0ZXMgcGVyIGEgc2luZ2xlIG5hbWUtdmFsdWUgcGFpciBhbGxvd2VkIGJ5IHczYyBzcGVjXG5leHBvcnRzLk1BWF9QRVJfTkFNRV9WQUxVRV9QQUlSUyA9IDQwOTY7XG4vLyBNYXhpbXVtIHRvdGFsIGxlbmd0aCBvZiBhbGwgbmFtZS12YWx1ZSBwYWlycyBhbGxvd2VkIGJ5IHczYyBzcGVjXG5leHBvcnRzLk1BWF9UT1RBTF9MRU5HVEggPSA4MTkyO1xuLyoqXG4gKiBQcm9wYWdhdGVzIHtAbGluayBCYWdnYWdlfSB0aHJvdWdoIENvbnRleHQgZm9ybWF0IHByb3BhZ2F0aW9uLlxuICpcbiAqIEJhc2VkIG9uIHRoZSBCYWdnYWdlIHNwZWNpZmljYXRpb246XG4gKiBodHRwczovL3czYy5naXRodWIuaW8vYmFnZ2FnZS9cbiAqL1xuY2xhc3MgSHR0cEJhZ2dhZ2Uge1xuICAgIGluamVjdChjb250ZXh0LCBjYXJyaWVyLCBzZXR0ZXIpIHtcbiAgICAgICAgY29uc3QgYmFnZ2FnZSA9IGFwaV8xLmdldEJhZ2dhZ2UoY29udGV4dCk7XG4gICAgICAgIGlmICghYmFnZ2FnZSB8fCBhcGlfMS5pc0luc3RydW1lbnRhdGlvblN1cHByZXNzZWQoY29udGV4dCkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGtleVBhaXJzID0gdGhpcy5fZ2V0S2V5UGFpcnMoYmFnZ2FnZSlcbiAgICAgICAgICAgIC5maWx0ZXIoKHBhaXIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBwYWlyLmxlbmd0aCA8PSBleHBvcnRzLk1BWF9QRVJfTkFNRV9WQUxVRV9QQUlSUztcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5zbGljZSgwLCBleHBvcnRzLk1BWF9OQU1FX1ZBTFVFX1BBSVJTKTtcbiAgICAgICAgY29uc3QgaGVhZGVyVmFsdWUgPSB0aGlzLl9zZXJpYWxpemVLZXlQYWlycyhrZXlQYWlycyk7XG4gICAgICAgIGlmIChoZWFkZXJWYWx1ZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBzZXR0ZXIuc2V0KGNhcnJpZXIsIGV4cG9ydHMuQkFHR0FHRV9IRUFERVIsIGhlYWRlclZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBfc2VyaWFsaXplS2V5UGFpcnMoa2V5UGFpcnMpIHtcbiAgICAgICAgcmV0dXJuIGtleVBhaXJzLnJlZHVjZSgoaFZhbHVlLCBjdXJyZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGAke2hWYWx1ZX0ke2hWYWx1ZSAhPT0gJycgPyBJVEVNU19TRVBBUkFUT1IgOiAnJ30ke2N1cnJlbnR9YDtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5sZW5ndGggPiBleHBvcnRzLk1BWF9UT1RBTF9MRU5HVEggPyBoVmFsdWUgOiB2YWx1ZTtcbiAgICAgICAgfSwgJycpO1xuICAgIH1cbiAgICBfZ2V0S2V5UGFpcnMoYmFnZ2FnZSkge1xuICAgICAgICByZXR1cm4gYmFnZ2FnZVxuICAgICAgICAgICAgLmdldEFsbEVudHJpZXMoKVxuICAgICAgICAgICAgLm1hcCgoW2tleSwgdmFsdWVdKSA9PiBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQodmFsdWUudmFsdWUpfWApO1xuICAgIH1cbiAgICBleHRyYWN0KGNvbnRleHQsIGNhcnJpZXIsIGdldHRlcikge1xuICAgICAgICBjb25zdCBoZWFkZXJWYWx1ZSA9IGdldHRlci5nZXQoY2FycmllciwgZXhwb3J0cy5CQUdHQUdFX0hFQURFUik7XG4gICAgICAgIGlmICghaGVhZGVyVmFsdWUpXG4gICAgICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICAgICAgY29uc3QgYmFnZ2FnZSA9IHt9O1xuICAgICAgICBpZiAoaGVhZGVyVmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYWlycyA9IGhlYWRlclZhbHVlLnNwbGl0KElURU1TX1NFUEFSQVRPUik7XG4gICAgICAgIHBhaXJzLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgICAgICAgY29uc3Qga2V5UGFpciA9IHRoaXMuX3BhcnNlUGFpcktleVZhbHVlKGVudHJ5KTtcbiAgICAgICAgICAgIGlmIChrZXlQYWlyKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYmFnZ2FnZUVudHJ5ID0geyB2YWx1ZToga2V5UGFpci52YWx1ZSB9O1xuICAgICAgICAgICAgICAgIGlmIChrZXlQYWlyLm1ldGFkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIGJhZ2dhZ2VFbnRyeS5tZXRhZGF0YSA9IGtleVBhaXIubWV0YWRhdGE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJhZ2dhZ2Vba2V5UGFpci5rZXldID0gYmFnZ2FnZUVudHJ5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKE9iamVjdC5lbnRyaWVzKGJhZ2dhZ2UpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFwaV8xLnNldEJhZ2dhZ2UoY29udGV4dCwgYXBpXzEuY3JlYXRlQmFnZ2FnZShiYWdnYWdlKSk7XG4gICAgfVxuICAgIF9wYXJzZVBhaXJLZXlWYWx1ZShlbnRyeSkge1xuICAgICAgICBjb25zdCB2YWx1ZVByb3BzID0gZW50cnkuc3BsaXQoUFJPUEVSVElFU19TRVBBUkFUT1IpO1xuICAgICAgICBpZiAodmFsdWVQcm9wcy5sZW5ndGggPD0gMClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3Qga2V5UGFpclBhcnQgPSB2YWx1ZVByb3BzLnNoaWZ0KCk7XG4gICAgICAgIGlmICgha2V5UGFpclBhcnQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGtleVBhaXIgPSBrZXlQYWlyUGFydC5zcGxpdChLRVlfUEFJUl9TRVBBUkFUT1IpO1xuICAgICAgICBpZiAoa2V5UGFpci5sZW5ndGggIT09IDIpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGtleSA9IGRlY29kZVVSSUNvbXBvbmVudChrZXlQYWlyWzBdLnRyaW0oKSk7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZGVjb2RlVVJJQ29tcG9uZW50KGtleVBhaXJbMV0udHJpbSgpKTtcbiAgICAgICAgbGV0IG1ldGFkYXRhO1xuICAgICAgICBpZiAodmFsdWVQcm9wcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBtZXRhZGF0YSA9IGFwaV8xLmJhZ2dhZ2VFbnRyeU1ldGFkYXRhRnJvbVN0cmluZyh2YWx1ZVByb3BzLmpvaW4oUFJPUEVSVElFU19TRVBBUkFUT1IpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBrZXksIHZhbHVlLCBtZXRhZGF0YSB9O1xuICAgIH1cbiAgICBmaWVsZHMoKSB7XG4gICAgICAgIHJldHVybiBbZXhwb3J0cy5CQUdHQUdFX0hFQURFUl07XG4gICAgfVxufVxuZXhwb3J0cy5IdHRwQmFnZ2FnZSA9IEh0dHBCYWdnYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SHR0cEJhZ2dhZ2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/baggage/propagation/HttpBaggage.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/attributes.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/attributes.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAttributeValue = exports.sanitizeAttributes = void 0;\nfunction sanitizeAttributes(attributes) {\n    const out = {};\n    if (attributes == null || typeof attributes !== 'object') {\n        return out;\n    }\n    for (const [k, v] of Object.entries(attributes)) {\n        if (isAttributeValue(v)) {\n            if (Array.isArray(v)) {\n                out[k] = v.slice();\n            }\n            else {\n                out[k] = v;\n            }\n        }\n    }\n    return out;\n}\nexports.sanitizeAttributes = sanitizeAttributes;\nfunction isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nexports.isAttributeValue = isAttributeValue;\nfunction isHomogeneousAttributeValueArray(arr) {\n    let type;\n    for (const element of arr) {\n        // null/undefined elements are allowed\n        if (element == null)\n            continue;\n        if (!type) {\n            if (isValidPrimitiveAttributeValue(element)) {\n                type = typeof element;\n                continue;\n            }\n            // encountered an invalid primitive\n            return false;\n        }\n        if (typeof element === type) {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n            return true;\n        case 'boolean':\n            return true;\n        case 'string':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=attributes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL2F0dHJpYnV0ZXMuanM/ZDk4MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL2F0dHJpYnV0ZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNBdHRyaWJ1dGVWYWx1ZSA9IGV4cG9ydHMuc2FuaXRpemVBdHRyaWJ1dGVzID0gdm9pZCAwO1xuZnVuY3Rpb24gc2FuaXRpemVBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMpIHtcbiAgICBjb25zdCBvdXQgPSB7fTtcbiAgICBpZiAoYXR0cmlidXRlcyA9PSBudWxsIHx8IHR5cGVvZiBhdHRyaWJ1dGVzICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gb3V0O1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhhdHRyaWJ1dGVzKSkge1xuICAgICAgICBpZiAoaXNBdHRyaWJ1dGVWYWx1ZSh2KSkge1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodikpIHtcbiAgICAgICAgICAgICAgICBvdXRba10gPSB2LnNsaWNlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBvdXRba10gPSB2O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvdXQ7XG59XG5leHBvcnRzLnNhbml0aXplQXR0cmlidXRlcyA9IHNhbml0aXplQXR0cmlidXRlcztcbmZ1bmN0aW9uIGlzQXR0cmlidXRlVmFsdWUodmFsKSB7XG4gICAgaWYgKHZhbCA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIHJldHVybiBpc0hvbW9nZW5lb3VzQXR0cmlidXRlVmFsdWVBcnJheSh2YWwpO1xuICAgIH1cbiAgICByZXR1cm4gaXNWYWxpZFByaW1pdGl2ZUF0dHJpYnV0ZVZhbHVlKHZhbCk7XG59XG5leHBvcnRzLmlzQXR0cmlidXRlVmFsdWUgPSBpc0F0dHJpYnV0ZVZhbHVlO1xuZnVuY3Rpb24gaXNIb21vZ2VuZW91c0F0dHJpYnV0ZVZhbHVlQXJyYXkoYXJyKSB7XG4gICAgbGV0IHR5cGU7XG4gICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGFycikge1xuICAgICAgICAvLyBudWxsL3VuZGVmaW5lZCBlbGVtZW50cyBhcmUgYWxsb3dlZFxuICAgICAgICBpZiAoZWxlbWVudCA9PSBudWxsKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGlmICghdHlwZSkge1xuICAgICAgICAgICAgaWYgKGlzVmFsaWRQcmltaXRpdmVBdHRyaWJ1dGVWYWx1ZShlbGVtZW50KSkge1xuICAgICAgICAgICAgICAgIHR5cGUgPSB0eXBlb2YgZWxlbWVudDtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGVuY291bnRlcmVkIGFuIGludmFsaWQgcHJpbWl0aXZlXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBlbGVtZW50ID09PSB0eXBlKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaXNWYWxpZFByaW1pdGl2ZUF0dHJpYnV0ZVZhbHVlKHZhbCkge1xuICAgIHN3aXRjaCAodHlwZW9mIHZhbCkge1xuICAgICAgICBjYXNlICdudW1iZXInOlxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXR0cmlidXRlcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/attributes.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.globalErrorHandler = exports.setGlobalErrorHandler = void 0;\nconst logging_error_handler_1 = __webpack_require__(/*! ./logging-error-handler */ \"./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js\");\n/** The global error handler delegate */\nlet delegateHandler = logging_error_handler_1.loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nfunction setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\nexports.setGlobalErrorHandler = setGlobalErrorHandler;\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nconst globalErrorHandler = (ex) => {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n};\nexports.globalErrorHandler = globalErrorHandler;\n//# sourceMappingURL=global-error-handler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL2dsb2JhbC1lcnJvci1oYW5kbGVyLmpzPzlkYTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGdDQUFnQyxtQkFBTyxDQUFDLDZHQUF5QjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLEVBQUU7QUFDbEI7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL2NvbW1vbi9nbG9iYWwtZXJyb3ItaGFuZGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2xvYmFsRXJyb3JIYW5kbGVyID0gZXhwb3J0cy5zZXRHbG9iYWxFcnJvckhhbmRsZXIgPSB2b2lkIDA7XG5jb25zdCBsb2dnaW5nX2Vycm9yX2hhbmRsZXJfMSA9IHJlcXVpcmUoXCIuL2xvZ2dpbmctZXJyb3ItaGFuZGxlclwiKTtcbi8qKiBUaGUgZ2xvYmFsIGVycm9yIGhhbmRsZXIgZGVsZWdhdGUgKi9cbmxldCBkZWxlZ2F0ZUhhbmRsZXIgPSBsb2dnaW5nX2Vycm9yX2hhbmRsZXJfMS5sb2dnaW5nRXJyb3JIYW5kbGVyKCk7XG4vKipcbiAqIFNldCB0aGUgZ2xvYmFsIGVycm9yIGhhbmRsZXJcbiAqIEBwYXJhbSB7RXJyb3JIYW5kbGVyfSBoYW5kbGVyXG4gKi9cbmZ1bmN0aW9uIHNldEdsb2JhbEVycm9ySGFuZGxlcihoYW5kbGVyKSB7XG4gICAgZGVsZWdhdGVIYW5kbGVyID0gaGFuZGxlcjtcbn1cbmV4cG9ydHMuc2V0R2xvYmFsRXJyb3JIYW5kbGVyID0gc2V0R2xvYmFsRXJyb3JIYW5kbGVyO1xuLyoqXG4gKiBSZXR1cm4gdGhlIGdsb2JhbCBlcnJvciBoYW5kbGVyXG4gKiBAcGFyYW0ge0V4Y2VwdGlvbn0gZXhcbiAqL1xuY29uc3QgZ2xvYmFsRXJyb3JIYW5kbGVyID0gKGV4KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgZGVsZWdhdGVIYW5kbGVyKGV4KTtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7IH0gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxufTtcbmV4cG9ydHMuZ2xvYmFsRXJyb3JIYW5kbGVyID0gZ2xvYmFsRXJyb3JIYW5kbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFsLWVycm9yLWhhbmRsZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loggingErrorHandler = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nfunction loggingErrorHandler() {\n    return (ex) => {\n        api_1.diag.error(stringifyException(ex));\n    };\n}\nexports.loggingErrorHandler = loggingErrorHandler;\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    const result = {};\n    let current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(propertyName => {\n            if (result[propertyName])\n                return;\n            const value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL2xvZ2dpbmctZXJyb3ItaGFuZGxlci5qcz8yODM1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0ZBQW9CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL2NvbW1vbi9sb2dnaW5nLWVycm9yLWhhbmRsZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmxvZ2dpbmdFcnJvckhhbmRsZXIgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0aGF0IGxvZ3MgYW4gZXJyb3IgdXNpbmcgdGhlIHByb3ZpZGVkIGxvZ2dlciwgb3IgYVxuICogY29uc29sZSBsb2dnZXIgaWYgb25lIHdhcyBub3QgcHJvdmlkZWQuXG4gKi9cbmZ1bmN0aW9uIGxvZ2dpbmdFcnJvckhhbmRsZXIoKSB7XG4gICAgcmV0dXJuIChleCkgPT4ge1xuICAgICAgICBhcGlfMS5kaWFnLmVycm9yKHN0cmluZ2lmeUV4Y2VwdGlvbihleCkpO1xuICAgIH07XG59XG5leHBvcnRzLmxvZ2dpbmdFcnJvckhhbmRsZXIgPSBsb2dnaW5nRXJyb3JIYW5kbGVyO1xuLyoqXG4gKiBDb252ZXJ0cyBhbiBleGNlcHRpb24gaW50byBhIHN0cmluZyByZXByZXNlbnRhdGlvblxuICogQHBhcmFtIHtFeGNlcHRpb259IGV4XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ2lmeUV4Y2VwdGlvbihleCkge1xuICAgIGlmICh0eXBlb2YgZXggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBleDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShmbGF0dGVuRXhjZXB0aW9uKGV4KSk7XG4gICAgfVxufVxuLyoqXG4gKiBGbGF0dGVucyBhbiBleGNlcHRpb24gaW50byBrZXktdmFsdWUgcGFpcnMgYnkgdHJhdmVyc2luZyB0aGUgcHJvdG90eXBlIGNoYWluXG4gKiBhbmQgY29lcmNpbmcgdmFsdWVzIHRvIHN0cmluZ3MuIER1cGxpY2F0ZSBwcm9wZXJ0aWVzIHdpbGwgbm90IGJlIG92ZXJ3cml0dGVuO1xuICogdGhlIGZpcnN0IGluc2VydCB3aW5zLlxuICovXG5mdW5jdGlvbiBmbGF0dGVuRXhjZXB0aW9uKGV4KSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgbGV0IGN1cnJlbnQgPSBleDtcbiAgICB3aGlsZSAoY3VycmVudCAhPT0gbnVsbCkge1xuICAgICAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhjdXJyZW50KS5mb3JFYWNoKHByb3BlcnR5TmFtZSA9PiB7XG4gICAgICAgICAgICBpZiAocmVzdWx0W3Byb3BlcnR5TmFtZV0pXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBjdXJyZW50W3Byb3BlcnR5TmFtZV07XG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXN1bHRbcHJvcGVydHlOYW1lXSA9IFN0cmluZyh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBjdXJyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGN1cnJlbnQpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2luZy1lcnJvci1oYW5kbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/time.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/time.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTimeInput = exports.isTimeInputHrTime = exports.hrTimeToMicroseconds = exports.hrTimeToMilliseconds = exports.hrTimeToNanoseconds = exports.hrTimeToTimeStamp = exports.hrTimeDuration = exports.timeInputToHrTime = exports.hrTime = void 0;\nconst platform_1 = __webpack_require__(/*! ../platform */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/index.js\");\nconst NANOSECOND_DIGITS = 9;\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number to HrTime\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis) {\n    const epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    const seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    const nanos = Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n        SECOND_TO_NANOSECONDS;\n    return [seconds, nanos];\n}\nfunction getTimeOrigin() {\n    let timeOrigin = platform_1.otperformance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        const perf = platform_1.otperformance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nfunction hrTime(performanceNow) {\n    const timeOrigin = numberToHrtime(getTimeOrigin());\n    const now = numberToHrtime(typeof performanceNow === 'number' ? performanceNow : platform_1.otperformance.now());\n    let seconds = timeOrigin[0] + now[0];\n    let nanos = timeOrigin[1] + now[1];\n    // Nanoseconds\n    if (nanos > SECOND_TO_NANOSECONDS) {\n        nanos -= SECOND_TO_NANOSECONDS;\n        seconds += 1;\n    }\n    return [seconds, nanos];\n}\nexports.hrTime = hrTime;\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nfunction timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return numberToHrtime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return numberToHrtime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\nexports.timeInputToHrTime = timeInputToHrTime;\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nfunction hrTimeDuration(startTime, endTime) {\n    let seconds = endTime[0] - startTime[0];\n    let nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\nexports.hrTimeDuration = hrTimeDuration;\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param hrTime\n */\nfunction hrTimeToTimeStamp(hrTime) {\n    const precision = NANOSECOND_DIGITS;\n    const tmp = `${'0'.repeat(precision)}${hrTime[1]}Z`;\n    const nanoString = tmp.substr(tmp.length - precision - 1);\n    const date = new Date(hrTime[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\nexports.hrTimeToTimeStamp = hrTimeToTimeStamp;\n/**\n * Convert hrTime to nanoseconds.\n * @param hrTime\n */\nfunction hrTimeToNanoseconds(hrTime) {\n    return hrTime[0] * SECOND_TO_NANOSECONDS + hrTime[1];\n}\nexports.hrTimeToNanoseconds = hrTimeToNanoseconds;\n/**\n * Convert hrTime to milliseconds.\n * @param hrTime\n */\nfunction hrTimeToMilliseconds(hrTime) {\n    return Math.round(hrTime[0] * 1e3 + hrTime[1] / 1e6);\n}\nexports.hrTimeToMilliseconds = hrTimeToMilliseconds;\n/**\n * Convert hrTime to microseconds.\n * @param hrTime\n */\nfunction hrTimeToMicroseconds(hrTime) {\n    return Math.round(hrTime[0] * 1e6 + hrTime[1] / 1e3);\n}\nexports.hrTimeToMicroseconds = hrTimeToMicroseconds;\n/**\n * check if time is HrTime\n * @param value\n */\nfunction isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\nexports.isTimeInputHrTime = isTimeInputHrTime;\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nfunction isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\nexports.isTimeInput = isTimeInput;\n//# sourceMappingURL=time.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/time.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/common/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/common/types.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29tbW9uL3R5cGVzLmpzP2EwM2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9jb21tb24vdHlwZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/common/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/context/propagation/HttpTraceContext.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/context/propagation/HttpTraceContext.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpTraceContext = exports.parseTraceParent = exports.TRACE_STATE_HEADER = exports.TRACE_PARENT_HEADER = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst TraceState_1 = __webpack_require__(/*! ../../trace/TraceState */ \"./node_modules/@opentelemetry/core/build/src/trace/TraceState.js\");\nexports.TRACE_PARENT_HEADER = 'traceparent';\nexports.TRACE_STATE_HEADER = 'tracestate';\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(`^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`);\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nfunction parseTraceParent(traceParent) {\n    const match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\nexports.parseTraceParent = parseTraceParent;\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nclass HttpTraceContext {\n    inject(context, carrier, setter) {\n        const spanContext = api_1.getSpanContext(context);\n        if (!spanContext ||\n            api_1.isInstrumentationSuppressed(context) ||\n            !api_1.isSpanContextValid(spanContext))\n            return;\n        const traceParent = `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-0${Number(spanContext.traceFlags || api_1.TraceFlags.NONE).toString(16)}`;\n        setter.set(carrier, exports.TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, exports.TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    }\n    extract(context, carrier, getter) {\n        const traceParentHeader = getter.get(carrier, exports.TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        const traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        const spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        const traceStateHeader = getter.get(carrier, exports.TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            const state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState_1.TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return api_1.setSpanContext(context, spanContext);\n    }\n    fields() {\n        return [exports.TRACE_PARENT_HEADER, exports.TRACE_STATE_HEADER];\n    }\n}\nexports.HttpTraceContext = HttpTraceContext;\n//# sourceMappingURL=HttpTraceContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29udGV4dC9wcm9wYWdhdGlvbi9IdHRwVHJhY2VDb250ZXh0LmpzPzNmMGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxnRkFBb0I7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsZ0dBQXdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxFQUFFO0FBQ3ZDLDhCQUE4QixHQUFHLFVBQVUsR0FBRztBQUM5QywrQkFBK0IsR0FBRyxVQUFVLEdBQUc7QUFDL0MsNkJBQTZCLEVBQUU7QUFDL0IsK0NBQStDLGFBQWEsS0FBSyxjQUFjLEtBQUssZUFBZSxLQUFLLFdBQVc7QUFDbkg7QUFDQSw0RUFBNEU7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixRQUFRLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxlQUFlO0FBQ2xFLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtCQUFrQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLFFBQVEsR0FBRyxvQkFBb0IsR0FBRyxtQkFBbUIsSUFBSSxxRUFBcUU7QUFDN0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9jb250ZXh0L3Byb3BhZ2F0aW9uL0h0dHBUcmFjZUNvbnRleHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkh0dHBUcmFjZUNvbnRleHQgPSBleHBvcnRzLnBhcnNlVHJhY2VQYXJlbnQgPSBleHBvcnRzLlRSQUNFX1NUQVRFX0hFQURFUiA9IGV4cG9ydHMuVFJBQ0VfUEFSRU5UX0hFQURFUiA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IFRyYWNlU3RhdGVfMSA9IHJlcXVpcmUoXCIuLi8uLi90cmFjZS9UcmFjZVN0YXRlXCIpO1xuZXhwb3J0cy5UUkFDRV9QQVJFTlRfSEVBREVSID0gJ3RyYWNlcGFyZW50JztcbmV4cG9ydHMuVFJBQ0VfU1RBVEVfSEVBREVSID0gJ3RyYWNlc3RhdGUnO1xuY29uc3QgVkVSU0lPTiA9ICcwMCc7XG5jb25zdCBWRVJTSU9OX1BBUlQgPSAnKD8hZmYpW1xcXFxkYS1mXXsyfSc7XG5jb25zdCBUUkFDRV9JRF9QQVJUID0gJyg/IVswXXszMn0pW1xcXFxkYS1mXXszMn0nO1xuY29uc3QgUEFSRU5UX0lEX1BBUlQgPSAnKD8hWzBdezE2fSlbXFxcXGRhLWZdezE2fSc7XG5jb25zdCBGTEFHU19QQVJUID0gJ1tcXFxcZGEtZl17Mn0nO1xuY29uc3QgVFJBQ0VfUEFSRU5UX1JFR0VYID0gbmV3IFJlZ0V4cChgXlxcXFxzPygke1ZFUlNJT05fUEFSVH0pLSgke1RSQUNFX0lEX1BBUlR9KS0oJHtQQVJFTlRfSURfUEFSVH0pLSgke0ZMQUdTX1BBUlR9KSgtLiopP1xcXFxzPyRgKTtcbi8qKlxuICogUGFyc2VzIGluZm9ybWF0aW9uIGZyb20gdGhlIFt0cmFjZXBhcmVudF0gc3BhbiB0YWcgYW5kIGNvbnZlcnRzIGl0IGludG8ge0BsaW5rIFNwYW5Db250ZXh0fVxuICogQHBhcmFtIHRyYWNlUGFyZW50IC0gQSBtZXRhIHByb3BlcnR5IHRoYXQgY29tZXMgZnJvbSBzZXJ2ZXIuXG4gKiAgICAgSXQgc2hvdWxkIGJlIGR5bmFtaWNhbGx5IGdlbmVyYXRlZCBzZXJ2ZXIgc2lkZSB0byBoYXZlIHRoZSBzZXJ2ZXIncyByZXF1ZXN0IHRyYWNlIElkLFxuICogICAgIGEgcGFyZW50IHNwYW4gSWQgdGhhdCB3YXMgc2V0IG9uIHRoZSBzZXJ2ZXIncyByZXF1ZXN0IHNwYW4sXG4gKiAgICAgYW5kIHRoZSB0cmFjZSBmbGFncyB0byBpbmRpY2F0ZSB0aGUgc2VydmVyJ3Mgc2FtcGxpbmcgZGVjaXNpb25cbiAqICAgICAoMDEgPSBzYW1wbGVkLCAwMCA9IG5vdCBzYW1wbGVkKS5cbiAqICAgICBmb3IgZXhhbXBsZTogJ3t2ZXJzaW9ufS17dHJhY2VJZH0te3NwYW5JZH0te3NhbXBsZURlY2lzaW9ufSdcbiAqICAgICBGb3IgbW9yZSBpbmZvcm1hdGlvbiBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LnczLm9yZy9UUi90cmFjZS1jb250ZXh0L31cbiAqL1xuZnVuY3Rpb24gcGFyc2VUcmFjZVBhcmVudCh0cmFjZVBhcmVudCkge1xuICAgIGNvbnN0IG1hdGNoID0gVFJBQ0VfUEFSRU5UX1JFR0VYLmV4ZWModHJhY2VQYXJlbnQpO1xuICAgIGlmICghbWF0Y2gpXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIC8vIEFjY29yZGluZyB0byB0aGUgc3BlY2lmaWNhdGlvbiB0aGUgaW1wbGVtZW50YXRpb24gc2hvdWxkIGJlIGNvbXBhdGlibGVcbiAgICAvLyB3aXRoIGZ1dHVyZSB2ZXJzaW9ucy4gSWYgdGhlcmUgYXJlIG1vcmUgcGFydHMsIHdlIG9ubHkgcmVqZWN0IGl0IGlmIGl0J3MgdXNpbmcgdmVyc2lvbiAwMFxuICAgIC8vIFNlZSBodHRwczovL3d3dy53My5vcmcvVFIvdHJhY2UtY29udGV4dC8jdmVyc2lvbmluZy1vZi10cmFjZXBhcmVudFxuICAgIGlmIChtYXRjaFsxXSA9PT0gJzAwJyAmJiBtYXRjaFs1XSlcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHJhY2VJZDogbWF0Y2hbMl0sXG4gICAgICAgIHNwYW5JZDogbWF0Y2hbM10sXG4gICAgICAgIHRyYWNlRmxhZ3M6IHBhcnNlSW50KG1hdGNoWzRdLCAxNiksXG4gICAgfTtcbn1cbmV4cG9ydHMucGFyc2VUcmFjZVBhcmVudCA9IHBhcnNlVHJhY2VQYXJlbnQ7XG4vKipcbiAqIFByb3BhZ2F0ZXMge0BsaW5rIFNwYW5Db250ZXh0fSB0aHJvdWdoIFRyYWNlIENvbnRleHQgZm9ybWF0IHByb3BhZ2F0aW9uLlxuICpcbiAqIEJhc2VkIG9uIHRoZSBUcmFjZSBDb250ZXh0IHNwZWNpZmljYXRpb246XG4gKiBodHRwczovL3d3dy53My5vcmcvVFIvdHJhY2UtY29udGV4dC9cbiAqL1xuY2xhc3MgSHR0cFRyYWNlQ29udGV4dCB7XG4gICAgaW5qZWN0KGNvbnRleHQsIGNhcnJpZXIsIHNldHRlcikge1xuICAgICAgICBjb25zdCBzcGFuQ29udGV4dCA9IGFwaV8xLmdldFNwYW5Db250ZXh0KGNvbnRleHQpO1xuICAgICAgICBpZiAoIXNwYW5Db250ZXh0IHx8XG4gICAgICAgICAgICBhcGlfMS5pc0luc3RydW1lbnRhdGlvblN1cHByZXNzZWQoY29udGV4dCkgfHxcbiAgICAgICAgICAgICFhcGlfMS5pc1NwYW5Db250ZXh0VmFsaWQoc3BhbkNvbnRleHQpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCB0cmFjZVBhcmVudCA9IGAke1ZFUlNJT059LSR7c3BhbkNvbnRleHQudHJhY2VJZH0tJHtzcGFuQ29udGV4dC5zcGFuSWR9LTAke051bWJlcihzcGFuQ29udGV4dC50cmFjZUZsYWdzIHx8IGFwaV8xLlRyYWNlRmxhZ3MuTk9ORSkudG9TdHJpbmcoMTYpfWA7XG4gICAgICAgIHNldHRlci5zZXQoY2FycmllciwgZXhwb3J0cy5UUkFDRV9QQVJFTlRfSEVBREVSLCB0cmFjZVBhcmVudCk7XG4gICAgICAgIGlmIChzcGFuQ29udGV4dC50cmFjZVN0YXRlKSB7XG4gICAgICAgICAgICBzZXR0ZXIuc2V0KGNhcnJpZXIsIGV4cG9ydHMuVFJBQ0VfU1RBVEVfSEVBREVSLCBzcGFuQ29udGV4dC50cmFjZVN0YXRlLnNlcmlhbGl6ZSgpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBleHRyYWN0KGNvbnRleHQsIGNhcnJpZXIsIGdldHRlcikge1xuICAgICAgICBjb25zdCB0cmFjZVBhcmVudEhlYWRlciA9IGdldHRlci5nZXQoY2FycmllciwgZXhwb3J0cy5UUkFDRV9QQVJFTlRfSEVBREVSKTtcbiAgICAgICAgaWYgKCF0cmFjZVBhcmVudEhlYWRlcilcbiAgICAgICAgICAgIHJldHVybiBjb250ZXh0O1xuICAgICAgICBjb25zdCB0cmFjZVBhcmVudCA9IEFycmF5LmlzQXJyYXkodHJhY2VQYXJlbnRIZWFkZXIpXG4gICAgICAgICAgICA/IHRyYWNlUGFyZW50SGVhZGVyWzBdXG4gICAgICAgICAgICA6IHRyYWNlUGFyZW50SGVhZGVyO1xuICAgICAgICBpZiAodHlwZW9mIHRyYWNlUGFyZW50ICE9PSAnc3RyaW5nJylcbiAgICAgICAgICAgIHJldHVybiBjb250ZXh0O1xuICAgICAgICBjb25zdCBzcGFuQ29udGV4dCA9IHBhcnNlVHJhY2VQYXJlbnQodHJhY2VQYXJlbnQpO1xuICAgICAgICBpZiAoIXNwYW5Db250ZXh0KVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgICAgIHNwYW5Db250ZXh0LmlzUmVtb3RlID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgdHJhY2VTdGF0ZUhlYWRlciA9IGdldHRlci5nZXQoY2FycmllciwgZXhwb3J0cy5UUkFDRV9TVEFURV9IRUFERVIpO1xuICAgICAgICBpZiAodHJhY2VTdGF0ZUhlYWRlcikge1xuICAgICAgICAgICAgLy8gSWYgbW9yZSB0aGFuIG9uZSBgdHJhY2VzdGF0ZWAgaGVhZGVyIGlzIGZvdW5kLCB3ZSBtZXJnZSB0aGVtIGludG8gYVxuICAgICAgICAgICAgLy8gc2luZ2xlIGhlYWRlci5cbiAgICAgICAgICAgIGNvbnN0IHN0YXRlID0gQXJyYXkuaXNBcnJheSh0cmFjZVN0YXRlSGVhZGVyKVxuICAgICAgICAgICAgICAgID8gdHJhY2VTdGF0ZUhlYWRlci5qb2luKCcsJylcbiAgICAgICAgICAgICAgICA6IHRyYWNlU3RhdGVIZWFkZXI7XG4gICAgICAgICAgICBzcGFuQ29udGV4dC50cmFjZVN0YXRlID0gbmV3IFRyYWNlU3RhdGVfMS5UcmFjZVN0YXRlKHR5cGVvZiBzdGF0ZSA9PT0gJ3N0cmluZycgPyBzdGF0ZSA6IHVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFwaV8xLnNldFNwYW5Db250ZXh0KGNvbnRleHQsIHNwYW5Db250ZXh0KTtcbiAgICB9XG4gICAgZmllbGRzKCkge1xuICAgICAgICByZXR1cm4gW2V4cG9ydHMuVFJBQ0VfUEFSRU5UX0hFQURFUiwgZXhwb3J0cy5UUkFDRV9TVEFURV9IRUFERVJdO1xuICAgIH1cbn1cbmV4cG9ydHMuSHR0cFRyYWNlQ29udGV4dCA9IEh0dHBUcmFjZUNvbnRleHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1IdHRwVHJhY2VDb250ZXh0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/context/propagation/HttpTraceContext.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/context/propagation/composite.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/context/propagation/composite.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompositePropagator = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/** Combines multiple propagators into a single propagator. */\nclass CompositePropagator {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    constructor(config = {}) {\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n            .reduce((x, y) => x.concat(y), [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    inject(context, carrier, setter) {\n        for (const propagator of this._propagators) {\n            try {\n                propagator.inject(context, carrier, setter);\n            }\n            catch (err) {\n                api_1.diag.warn(`Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`);\n            }\n        }\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    extract(context, carrier, getter) {\n        return this._propagators.reduce((ctx, propagator) => {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                api_1.diag.warn(`Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`);\n            }\n            return ctx;\n        }, context);\n    }\n    fields() {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    }\n}\nexports.CompositePropagator = CompositePropagator;\n//# sourceMappingURL=composite.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29udGV4dC9wcm9wYWdhdGlvbi9jb21wb3NpdGUuanM/YTBhNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCw0QkFBNEIsU0FBUyxZQUFZO0FBQzFHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCw0QkFBNEIsU0FBUyxZQUFZO0FBQzFHO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9jb250ZXh0L3Byb3BhZ2F0aW9uL2NvbXBvc2l0ZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29tcG9zaXRlUHJvcGFnYXRvciA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbi8qKiBDb21iaW5lcyBtdWx0aXBsZSBwcm9wYWdhdG9ycyBpbnRvIGEgc2luZ2xlIHByb3BhZ2F0b3IuICovXG5jbGFzcyBDb21wb3NpdGVQcm9wYWdhdG9yIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBjb21wb3NpdGUgcHJvcGFnYXRvciBmcm9tIGEgbGlzdCBvZiBwcm9wYWdhdG9ycy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBbY29uZmlnXSBDb25maWd1cmF0aW9uIG9iamVjdCBmb3IgY29tcG9zaXRlIHByb3BhZ2F0b3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHRoaXMuX3Byb3BhZ2F0b3JzID0gKF9hID0gY29uZmlnLnByb3BhZ2F0b3JzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICAgICAgdGhpcy5fZmllbGRzID0gQXJyYXkuZnJvbShuZXcgU2V0KHRoaXMuX3Byb3BhZ2F0b3JzXG4gICAgICAgICAgICAvLyBvbGRlciBwcm9wYWdhdG9ycyBtYXkgbm90IGhhdmUgZmllbGRzIGZ1bmN0aW9uLCBudWxsIGNoZWNrIHRvIGJlIHN1cmVcbiAgICAgICAgICAgIC5tYXAocCA9PiAodHlwZW9mIHAuZmllbGRzID09PSAnZnVuY3Rpb24nID8gcC5maWVsZHMoKSA6IFtdKSlcbiAgICAgICAgICAgIC5yZWR1Y2UoKHgsIHkpID0+IHguY29uY2F0KHkpLCBbXSkpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUnVuIGVhY2ggb2YgdGhlIGNvbmZpZ3VyZWQgcHJvcGFnYXRvcnMgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgY2Fycmllci5cbiAgICAgKiBQcm9wYWdhdG9ycyBhcmUgcnVuIGluIHRoZSBvcmRlciB0aGV5IGFyZSBjb25maWd1cmVkLCBzbyBpZiBtdWx0aXBsZVxuICAgICAqIHByb3BhZ2F0b3JzIHdyaXRlIHRoZSBzYW1lIGNhcnJpZXIga2V5LCB0aGUgcHJvcGFnYXRvciBsYXRlciBpbiB0aGUgbGlzdFxuICAgICAqIHdpbGwgXCJ3aW5cIi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb250ZXh0IENvbnRleHQgdG8gaW5qZWN0XG4gICAgICogQHBhcmFtIGNhcnJpZXIgQ2FycmllciBpbnRvIHdoaWNoIGNvbnRleHQgd2lsbCBiZSBpbmplY3RlZFxuICAgICAqL1xuICAgIGluamVjdChjb250ZXh0LCBjYXJyaWVyLCBzZXR0ZXIpIHtcbiAgICAgICAgZm9yIChjb25zdCBwcm9wYWdhdG9yIG9mIHRoaXMuX3Byb3BhZ2F0b3JzKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHByb3BhZ2F0b3IuaW5qZWN0KGNvbnRleHQsIGNhcnJpZXIsIHNldHRlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgYXBpXzEuZGlhZy53YXJuKGBGYWlsZWQgdG8gaW5qZWN0IHdpdGggJHtwcm9wYWdhdG9yLmNvbnN0cnVjdG9yLm5hbWV9LiBFcnI6ICR7ZXJyLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUnVuIGVhY2ggb2YgdGhlIGNvbmZpZ3VyZWQgcHJvcGFnYXRvcnMgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgY2Fycmllci5cbiAgICAgKiBQcm9wYWdhdG9ycyBhcmUgcnVuIGluIHRoZSBvcmRlciB0aGV5IGFyZSBjb25maWd1cmVkLCBzbyBpZiBtdWx0aXBsZVxuICAgICAqIHByb3BhZ2F0b3JzIHdyaXRlIHRoZSBzYW1lIGNvbnRleHQga2V5LCB0aGUgcHJvcGFnYXRvciBsYXRlciBpbiB0aGUgbGlzdFxuICAgICAqIHdpbGwgXCJ3aW5cIi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb250ZXh0IENvbnRleHQgdG8gYWRkIHZhbHVlcyB0b1xuICAgICAqIEBwYXJhbSBjYXJyaWVyIENhcnJpZXIgZnJvbSB3aGljaCB0byBleHRyYWN0IGNvbnRleHRcbiAgICAgKi9cbiAgICBleHRyYWN0KGNvbnRleHQsIGNhcnJpZXIsIGdldHRlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvcGFnYXRvcnMucmVkdWNlKChjdHgsIHByb3BhZ2F0b3IpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3BhZ2F0b3IuZXh0cmFjdChjdHgsIGNhcnJpZXIsIGdldHRlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgYXBpXzEuZGlhZy53YXJuKGBGYWlsZWQgdG8gaW5qZWN0IHdpdGggJHtwcm9wYWdhdG9yLmNvbnN0cnVjdG9yLm5hbWV9LiBFcnI6ICR7ZXJyLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY3R4O1xuICAgICAgICB9LCBjb250ZXh0KTtcbiAgICB9XG4gICAgZmllbGRzKCkge1xuICAgICAgICAvLyByZXR1cm4gYSBuZXcgYXJyYXkgc28gb3VyIGZpZWxkcyBjYW5ub3QgYmUgbW9kaWZpZWRcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZpZWxkcy5zbGljZSgpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29tcG9zaXRlUHJvcGFnYXRvciA9IENvbXBvc2l0ZVByb3BhZ2F0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wb3NpdGUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/context/propagation/composite.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/context/propagation/types.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/context/propagation/types.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29udGV4dC9wcm9wYWdhdGlvbi90eXBlcy5qcz8wZDg2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvY29udGV4dC9wcm9wYWdhdGlvbi90eXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/context/propagation/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./common/attributes */ \"./node_modules/@opentelemetry/core/build/src/common/attributes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/global-error-handler */ \"./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/logging-error-handler */ \"./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/time */ \"./node_modules/@opentelemetry/core/build/src/common/time.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/types */ \"./node_modules/@opentelemetry/core/build/src/common/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ExportResult */ \"./node_modules/@opentelemetry/core/build/src/ExportResult.js\"), exports);\n__exportStar(__webpack_require__(/*! ./version */ \"./node_modules/@opentelemetry/core/build/src/version.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/propagation/composite */ \"./node_modules/@opentelemetry/core/build/src/context/propagation/composite.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/propagation/HttpTraceContext */ \"./node_modules/@opentelemetry/core/build/src/context/propagation/HttpTraceContext.js\"), exports);\n__exportStar(__webpack_require__(/*! ./context/propagation/types */ \"./node_modules/@opentelemetry/core/build/src/context/propagation/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./baggage/propagation/HttpBaggage */ \"./node_modules/@opentelemetry/core/build/src/baggage/propagation/HttpBaggage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/sampler/AlwaysOffSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/sampler/AlwaysOnSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/sampler/ParentBasedSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/ParentBasedSampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/sampler/TraceIdRatioBasedSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/TraceIdRatioBasedSampler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/TraceState */ \"./node_modules/@opentelemetry/core/build/src/trace/TraceState.js\"), exports);\n__exportStar(__webpack_require__(/*! ./trace/IdGenerator */ \"./node_modules/@opentelemetry/core/build/src/trace/IdGenerator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils/url */ \"./node_modules/@opentelemetry/core/build/src/utils/url.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils/wrap */ \"./node_modules/@opentelemetry/core/build/src/utils/wrap.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils/sampling */ \"./node_modules/@opentelemetry/core/build/src/utils/sampling.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvaW5kZXguanM/MzA5ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msb0NBQW9DLGFBQWEsRUFBRSxFQUFFO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGFBQWEsbUJBQU8sQ0FBQyw4RkFBcUI7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLGtIQUErQjtBQUNwRCxhQUFhLG1CQUFPLENBQUMsb0hBQWdDO0FBQ3JELGFBQWEsbUJBQU8sQ0FBQyxrRkFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsb0ZBQWdCO0FBQ3JDLGFBQWEsbUJBQU8sQ0FBQyxvRkFBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLDBFQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQyxzSEFBaUM7QUFDdEQsYUFBYSxtQkFBTyxDQUFDLG9JQUF3QztBQUM3RCxhQUFhLG1CQUFPLENBQUMsOEdBQTZCO0FBQ2xELGFBQWEsbUJBQU8sQ0FBQywwSEFBbUM7QUFDeEQsYUFBYSxtQkFBTyxDQUFDLDBGQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyx3SEFBa0M7QUFDdkQsYUFBYSxtQkFBTyxDQUFDLHNIQUFpQztBQUN0RCxhQUFhLG1CQUFPLENBQUMsNEhBQW9DO0FBQ3pELGFBQWEsbUJBQU8sQ0FBQyx3SUFBMEM7QUFDL0QsYUFBYSxtQkFBTyxDQUFDLDRGQUFvQjtBQUN6QyxhQUFhLG1CQUFPLENBQUMsOEZBQXFCO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQyw4RUFBYTtBQUNsQyxhQUFhLG1CQUFPLENBQUMsZ0ZBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLHdGQUFrQjtBQUN2QyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbW1vbi9hdHRyaWJ1dGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb21tb24vZ2xvYmFsLWVycm9yLWhhbmRsZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbW1vbi9sb2dnaW5nLWVycm9yLWhhbmRsZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbW1vbi90aW1lXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb21tb24vdHlwZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0V4cG9ydFJlc3VsdFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmVyc2lvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29udGV4dC9wcm9wYWdhdGlvbi9jb21wb3NpdGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnRleHQvcHJvcGFnYXRpb24vSHR0cFRyYWNlQ29udGV4dFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29udGV4dC9wcm9wYWdhdGlvbi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYmFnZ2FnZS9wcm9wYWdhdGlvbi9IdHRwQmFnZ2FnZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGxhdGZvcm1cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL3NhbXBsZXIvQWx3YXlzT2ZmU2FtcGxlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2Uvc2FtcGxlci9BbHdheXNPblNhbXBsZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlL3NhbXBsZXIvUGFyZW50QmFzZWRTYW1wbGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90cmFjZS9zYW1wbGVyL1RyYWNlSWRSYXRpb0Jhc2VkU2FtcGxlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvVHJhY2VTdGF0ZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHJhY2UvSWRHZW5lcmF0b3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzL3VybFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHMvd3JhcFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHMvc2FtcGxpbmdcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/internal/validators.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/internal/validators.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateValue = exports.validateKey = void 0;\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nfunction validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\nexports.validateKey = validateKey;\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nfunction validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\nexports.validateValue = validateValue;\n//# sourceMappingURL=validators.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvaW50ZXJuYWwvdmFsaWRhdG9ycy5qcz8xM2NmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBLDBCQUEwQixzQkFBc0IsTUFBTTtBQUN0RCxvQ0FBb0Msc0JBQXNCLE1BQU0sUUFBUSxzQkFBc0IsS0FBSztBQUNuRywwQ0FBMEMsVUFBVSxHQUFHLGlCQUFpQjtBQUN4RSx1Q0FBdUMsTUFBTTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL2ludGVybmFsL3ZhbGlkYXRvcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZhbGlkYXRlVmFsdWUgPSBleHBvcnRzLnZhbGlkYXRlS2V5ID0gdm9pZCAwO1xuY29uc3QgVkFMSURfS0VZX0NIQVJfUkFOR0UgPSAnW18wLTlhLXotKi9dJztcbmNvbnN0IFZBTElEX0tFWSA9IGBbYS16XSR7VkFMSURfS0VZX0NIQVJfUkFOR0V9ezAsMjU1fWA7XG5jb25zdCBWQUxJRF9WRU5ET1JfS0VZID0gYFthLXowLTldJHtWQUxJRF9LRVlfQ0hBUl9SQU5HRX17MCwyNDB9QFthLXpdJHtWQUxJRF9LRVlfQ0hBUl9SQU5HRX17MCwxM31gO1xuY29uc3QgVkFMSURfS0VZX1JFR0VYID0gbmV3IFJlZ0V4cChgXig/OiR7VkFMSURfS0VZfXwke1ZBTElEX1ZFTkRPUl9LRVl9KSRgKTtcbmNvbnN0IFZBTElEX1ZBTFVFX0JBU0VfUkVHRVggPSAvXlsgLX5dezAsMjU1fVshLX5dJC87XG5jb25zdCBJTlZBTElEX1ZBTFVFX0NPTU1BX0VRVUFMX1JFR0VYID0gLyx8PS87XG4vKipcbiAqIEtleSBpcyBvcGFxdWUgc3RyaW5nIHVwIHRvIDI1NiBjaGFyYWN0ZXJzIHByaW50YWJsZS4gSXQgTVVTVCBiZWdpbiB3aXRoIGFcbiAqIGxvd2VyY2FzZSBsZXR0ZXIsIGFuZCBjYW4gb25seSBjb250YWluIGxvd2VyY2FzZSBsZXR0ZXJzIGEteiwgZGlnaXRzIDAtOSxcbiAqIHVuZGVyc2NvcmVzIF8sIGRhc2hlcyAtLCBhc3Rlcmlza3MgKiwgYW5kIGZvcndhcmQgc2xhc2hlcyAvLlxuICogRm9yIG11bHRpLXRlbmFudCB2ZW5kb3Igc2NlbmFyaW9zLCBhbiBhdCBzaWduIChAKSBjYW4gYmUgdXNlZCB0byBwcmVmaXggdGhlXG4gKiB2ZW5kb3IgbmFtZS4gVmVuZG9ycyBTSE9VTEQgc2V0IHRoZSB0ZW5hbnQgSUQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUga2V5LlxuICogc2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi90cmFjZS1jb250ZXh0LyNrZXlcbiAqL1xuZnVuY3Rpb24gdmFsaWRhdGVLZXkoa2V5KSB7XG4gICAgcmV0dXJuIFZBTElEX0tFWV9SRUdFWC50ZXN0KGtleSk7XG59XG5leHBvcnRzLnZhbGlkYXRlS2V5ID0gdmFsaWRhdGVLZXk7XG4vKipcbiAqIFZhbHVlIGlzIG9wYXF1ZSBzdHJpbmcgdXAgdG8gMjU2IGNoYXJhY3RlcnMgcHJpbnRhYmxlIEFTQ0lJIFJGQzAwMjBcbiAqIGNoYXJhY3RlcnMgKGkuZS4sIHRoZSByYW5nZSAweDIwIHRvIDB4N0UpIGV4Y2VwdCBjb21tYSAsIGFuZCA9LlxuICovXG5mdW5jdGlvbiB2YWxpZGF0ZVZhbHVlKHZhbHVlKSB7XG4gICAgcmV0dXJuIChWQUxJRF9WQUxVRV9CQVNFX1JFR0VYLnRlc3QodmFsdWUpICYmXG4gICAgICAgICFJTlZBTElEX1ZBTFVFX0NPTU1BX0VRVUFMX1JFR0VYLnRlc3QodmFsdWUpKTtcbn1cbmV4cG9ydHMudmFsaWRhdGVWYWx1ZSA9IHZhbGlkYXRlVmFsdWU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWxpZGF0b3JzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/internal/validators.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/RandomIdGenerator.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/RandomIdGenerator.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RandomIdGenerator = void 0;\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\nclass RandomIdGenerator {\n    constructor() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n}\nexports.RandomIdGenerator = RandomIdGenerator;\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (let i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9SYW5kb21JZEdlbmVyYXRvci5qcz8wZTFiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGVBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9SYW5kb21JZEdlbmVyYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SYW5kb21JZEdlbmVyYXRvciA9IHZvaWQgMDtcbmNvbnN0IFNQQU5fSURfQllURVMgPSA4O1xuY29uc3QgVFJBQ0VfSURfQllURVMgPSAxNjtcbmNsYXNzIFJhbmRvbUlkR2VuZXJhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHVybnMgYSByYW5kb20gMTYtYnl0ZSB0cmFjZSBJRCBmb3JtYXR0ZWQvZW5jb2RlZCBhcyBhIDMyIGxvd2VyY2FzZSBoZXhcbiAgICAgICAgICogY2hhcmFjdGVycyBjb3JyZXNwb25kaW5nIHRvIDEyOCBiaXRzLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5nZW5lcmF0ZVRyYWNlSWQgPSBnZXRJZEdlbmVyYXRvcihUUkFDRV9JRF9CWVRFUyk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm5zIGEgcmFuZG9tIDgtYnl0ZSBzcGFuIElEIGZvcm1hdHRlZC9lbmNvZGVkIGFzIGEgMTYgbG93ZXJjYXNlIGhleFxuICAgICAgICAgKiBjaGFyYWN0ZXJzIGNvcnJlc3BvbmRpbmcgdG8gNjQgYml0cy5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZ2VuZXJhdGVTcGFuSWQgPSBnZXRJZEdlbmVyYXRvcihTUEFOX0lEX0JZVEVTKTtcbiAgICB9XG59XG5leHBvcnRzLlJhbmRvbUlkR2VuZXJhdG9yID0gUmFuZG9tSWRHZW5lcmF0b3I7XG5jb25zdCBTSEFSRURfQ0hBUl9DT0RFU19BUlJBWSA9IEFycmF5KDMyKTtcbmZ1bmN0aW9uIGdldElkR2VuZXJhdG9yKGJ5dGVzKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGdlbmVyYXRlSWQoKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnl0ZXMgKiAyOyBpKyspIHtcbiAgICAgICAgICAgIFNIQVJFRF9DSEFSX0NPREVTX0FSUkFZW2ldID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTYpICsgNDg7XG4gICAgICAgICAgICAvLyB2YWxpZCBoZXggY2hhcmFjdGVycyBpbiB0aGUgcmFuZ2UgNDgtNTcgYW5kIDk3LTEwMlxuICAgICAgICAgICAgaWYgKFNIQVJFRF9DSEFSX0NPREVTX0FSUkFZW2ldID49IDU4KSB7XG4gICAgICAgICAgICAgICAgU0hBUkVEX0NIQVJfQ09ERVNfQVJSQVlbaV0gKz0gMzk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgU0hBUkVEX0NIQVJfQ09ERVNfQVJSQVkuc2xpY2UoMCwgYnl0ZXMgKiAyKSk7XG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJhbmRvbUlkR2VuZXJhdG9yLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/RandomIdGenerator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/environment.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/environment.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEnv = void 0;\nconst environment_1 = __webpack_require__(/*! ../../utils/environment */ \"./node_modules/@opentelemetry/core/build/src/utils/environment.js\");\n/**\n * Gets the environment variables\n */\nfunction getEnv() {\n    const _window = window;\n    const globalEnv = environment_1.parseEnvironment(_window);\n    return Object.assign({}, environment_1.DEFAULT_ENVIRONMENT, globalEnv);\n}\nexports.getEnv = getEnv;\n//# sourceMappingURL=environment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9lbnZpcm9ubWVudC5qcz85MWNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyxrR0FBeUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2Vudmlyb25tZW50LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRFbnYgPSB2b2lkIDA7XG5jb25zdCBlbnZpcm9ubWVudF8xID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL2Vudmlyb25tZW50XCIpO1xuLyoqXG4gKiBHZXRzIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbiAqL1xuZnVuY3Rpb24gZ2V0RW52KCkge1xuICAgIGNvbnN0IF93aW5kb3cgPSB3aW5kb3c7XG4gICAgY29uc3QgZ2xvYmFsRW52ID0gZW52aXJvbm1lbnRfMS5wYXJzZUVudmlyb25tZW50KF93aW5kb3cpO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBlbnZpcm9ubWVudF8xLkRFRkFVTFRfRU5WSVJPTk1FTlQsIGdsb2JhbEVudik7XG59XG5leHBvcnRzLmdldEVudiA9IGdldEVudjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudmlyb25tZW50LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/environment.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/hex-to-base64.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/hex-to-base64.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBase64 = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction hexToBase64(hexStr) {\n    const hexStrLen = hexStr.length;\n    let hexAsciiCharsStr = '';\n    for (let i = 0; i < hexStrLen; i += 2) {\n        const hexPair = hexStr.substring(i, i + 2);\n        const hexVal = parseInt(hexPair, 16);\n        hexAsciiCharsStr += String.fromCharCode(hexVal);\n    }\n    return btoa(hexAsciiCharsStr);\n}\nexports.hexToBase64 = hexToBase64;\n//# sourceMappingURL=hex-to-base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9oZXgtdG8tYmFzZTY0LmpzP2YxNDEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixlQUFlO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9oZXgtdG8tYmFzZTY0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhleFRvQmFzZTY0ID0gdm9pZCAwO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmZ1bmN0aW9uIGhleFRvQmFzZTY0KGhleFN0cikge1xuICAgIGNvbnN0IGhleFN0ckxlbiA9IGhleFN0ci5sZW5ndGg7XG4gICAgbGV0IGhleEFzY2lpQ2hhcnNTdHIgPSAnJztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhleFN0ckxlbjsgaSArPSAyKSB7XG4gICAgICAgIGNvbnN0IGhleFBhaXIgPSBoZXhTdHIuc3Vic3RyaW5nKGksIGkgKyAyKTtcbiAgICAgICAgY29uc3QgaGV4VmFsID0gcGFyc2VJbnQoaGV4UGFpciwgMTYpO1xuICAgICAgICBoZXhBc2NpaUNoYXJzU3RyICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoaGV4VmFsKTtcbiAgICB9XG4gICAgcmV0dXJuIGJ0b2EoaGV4QXNjaWlDaGFyc1N0cik7XG59XG5leHBvcnRzLmhleFRvQmFzZTY0ID0gaGV4VG9CYXNlNjQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZXgtdG8tYmFzZTY0LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/hex-to-base64.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./environment */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/environment.js\"), exports);\n__exportStar(__webpack_require__(/*! ./hex-to-base64 */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/hex-to-base64.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RandomIdGenerator */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/RandomIdGenerator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./performance */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/performance.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sdk-info */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/sdk-info.js\"), exports);\n__exportStar(__webpack_require__(/*! ./timer-util */ \"./node_modules/@opentelemetry/core/build/src/platform/browser/timer-util.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcz8zNTBiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLG1HQUFlO0FBQ3BDLGFBQWEsbUJBQU8sQ0FBQyx1R0FBaUI7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLCtHQUFxQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMsbUdBQWU7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLDZGQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyxpR0FBYztBQUNuQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW52aXJvbm1lbnRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hleC10by1iYXNlNjRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1JhbmRvbUlkR2VuZXJhdG9yXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wZXJmb3JtYW5jZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2RrLWluZm9cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RpbWVyLXV0aWxcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/performance.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/performance.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.otperformance = void 0;\nexports.otperformance = performance;\n//# sourceMappingURL=performance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9wZXJmb3JtYW5jZS5qcz9jYmNmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvcGVyZm9ybWFuY2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm90cGVyZm9ybWFuY2UgPSB2b2lkIDA7XG5leHBvcnRzLm90cGVyZm9ybWFuY2UgPSBwZXJmb3JtYW5jZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBlcmZvcm1hbmNlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/performance.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/sdk-info.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/sdk-info.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SDK_INFO = void 0;\nconst version_1 = __webpack_require__(/*! ../../version */ \"./node_modules/@opentelemetry/core/build/src/version.js\");\n/** Constants describing the SDK in use */\nexports.SDK_INFO = {\n    NAME: 'opentelemetry',\n    RUNTIME: 'browser',\n    LANGUAGE: 'webjs',\n    VERSION: version_1.VERSION,\n};\n//# sourceMappingURL=sdk-info.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9zZGstaW5mby5qcz9iNGRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyw4RUFBZTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvc2RrLWluZm8uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNES19JTkZPID0gdm9pZCAwO1xuY29uc3QgdmVyc2lvbl8xID0gcmVxdWlyZShcIi4uLy4uL3ZlcnNpb25cIik7XG4vKiogQ29uc3RhbnRzIGRlc2NyaWJpbmcgdGhlIFNESyBpbiB1c2UgKi9cbmV4cG9ydHMuU0RLX0lORk8gPSB7XG4gICAgTkFNRTogJ29wZW50ZWxlbWV0cnknLFxuICAgIFJVTlRJTUU6ICdicm93c2VyJyxcbiAgICBMQU5HVUFHRTogJ3dlYmpzJyxcbiAgICBWRVJTSU9OOiB2ZXJzaW9uXzEuVkVSU0lPTixcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZGstaW5mby5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/sdk-info.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/platform/browser/timer-util.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/platform/browser/timer-util.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unrefTimer = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction unrefTimer(_timer) { }\nexports.unrefTimer = unrefTimer;\n//# sourceMappingURL=timer-util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci90aW1lci11dGlsLmpzPzBkZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvdGltZXItdXRpbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51bnJlZlRpbWVyID0gdm9pZCAwO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmZ1bmN0aW9uIHVucmVmVGltZXIoX3RpbWVyKSB7IH1cbmV4cG9ydHMudW5yZWZUaW1lciA9IHVucmVmVGltZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aW1lci11dGlsLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/platform/browser/timer-util.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/IdGenerator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/IdGenerator.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=IdGenerator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2UvSWRHZW5lcmF0b3IuanM/YmZkOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3RyYWNlL0lkR2VuZXJhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SWRHZW5lcmF0b3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/IdGenerator.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/TraceState.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/TraceState.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceState = void 0;\nconst validators_1 = __webpack_require__(/*! ../internal/validators */ \"./node_modules/@opentelemetry/core/build/src/internal/validators.js\");\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nclass TraceState {\n    constructor(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    set(key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        const traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    }\n    unset(key) {\n        const traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    }\n    get(key) {\n        return this._internalState.get(key);\n    }\n    serialize() {\n        return this._keys()\n            .reduce((agg, key) => {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    }\n    _parse(rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce((agg, part) => {\n            const listMember = part.trim(); // Optional Whitespace (OWS) handling\n            const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                const key = listMember.slice(0, i);\n                const value = listMember.slice(i + 1, part.length);\n                if (validators_1.validateKey(key) && validators_1.validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    }\n    _keys() {\n        return Array.from(this._internalState.keys()).reverse();\n    }\n    _clone() {\n        const traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    }\n}\nexports.TraceState = TraceState;\n//# sourceMappingURL=TraceState.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2UvVHJhY2VTdGF0ZS5qcz84MzFiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQyxtR0FBd0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3RyYWNlL1RyYWNlU3RhdGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYWNlU3RhdGUgPSB2b2lkIDA7XG5jb25zdCB2YWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vaW50ZXJuYWwvdmFsaWRhdG9yc1wiKTtcbmNvbnN0IE1BWF9UUkFDRV9TVEFURV9JVEVNUyA9IDMyO1xuY29uc3QgTUFYX1RSQUNFX1NUQVRFX0xFTiA9IDUxMjtcbmNvbnN0IExJU1RfTUVNQkVSU19TRVBBUkFUT1IgPSAnLCc7XG5jb25zdCBMSVNUX01FTUJFUl9LRVlfVkFMVUVfU1BMSVRURVIgPSAnPSc7XG4vKipcbiAqIFRyYWNlU3RhdGUgbXVzdCBiZSBhIGNsYXNzIGFuZCBub3QgYSBzaW1wbGUgb2JqZWN0IHR5cGUgYmVjYXVzZSBvZiB0aGUgc3BlY1xuICogcmVxdWlyZW1lbnQgKGh0dHBzOi8vd3d3LnczLm9yZy9UUi90cmFjZS1jb250ZXh0LyN0cmFjZXN0YXRlLWZpZWxkKS5cbiAqXG4gKiBIZXJlIGlzIHRoZSBsaXN0IG9mIGFsbG93ZWQgbXV0YXRpb25zOlxuICogLSBOZXcga2V5LXZhbHVlIHBhaXIgc2hvdWxkIGJlIGFkZGVkIGludG8gdGhlIGJlZ2lubmluZyBvZiB0aGUgbGlzdFxuICogLSBUaGUgdmFsdWUgb2YgYW55IGtleSBjYW4gYmUgdXBkYXRlZC4gTW9kaWZpZWQga2V5cyBNVVNUIGJlIG1vdmVkIHRvIHRoZVxuICogYmVnaW5uaW5nIG9mIHRoZSBsaXN0LlxuICovXG5jbGFzcyBUcmFjZVN0YXRlIHtcbiAgICBjb25zdHJ1Y3RvcihyYXdUcmFjZVN0YXRlKSB7XG4gICAgICAgIHRoaXMuX2ludGVybmFsU3RhdGUgPSBuZXcgTWFwKCk7XG4gICAgICAgIGlmIChyYXdUcmFjZVN0YXRlKVxuICAgICAgICAgICAgdGhpcy5fcGFyc2UocmF3VHJhY2VTdGF0ZSk7XG4gICAgfVxuICAgIHNldChrZXksIHZhbHVlKSB7XG4gICAgICAgIC8vIFRPRE86IEJlbmNobWFyayB0aGUgZGlmZmVyZW50IGFwcHJvYWNoZXMobWFwIHZzIGxpc3QpIGFuZFxuICAgICAgICAvLyB1c2UgdGhlIGZhc3RlciBvbmUuXG4gICAgICAgIGNvbnN0IHRyYWNlU3RhdGUgPSB0aGlzLl9jbG9uZSgpO1xuICAgICAgICBpZiAodHJhY2VTdGF0ZS5faW50ZXJuYWxTdGF0ZS5oYXMoa2V5KSkge1xuICAgICAgICAgICAgdHJhY2VTdGF0ZS5faW50ZXJuYWxTdGF0ZS5kZWxldGUoa2V5KTtcbiAgICAgICAgfVxuICAgICAgICB0cmFjZVN0YXRlLl9pbnRlcm5hbFN0YXRlLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHRyYWNlU3RhdGU7XG4gICAgfVxuICAgIHVuc2V0KGtleSkge1xuICAgICAgICBjb25zdCB0cmFjZVN0YXRlID0gdGhpcy5fY2xvbmUoKTtcbiAgICAgICAgdHJhY2VTdGF0ZS5faW50ZXJuYWxTdGF0ZS5kZWxldGUoa2V5KTtcbiAgICAgICAgcmV0dXJuIHRyYWNlU3RhdGU7XG4gICAgfVxuICAgIGdldChrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ludGVybmFsU3RhdGUuZ2V0KGtleSk7XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleXMoKVxuICAgICAgICAgICAgLnJlZHVjZSgoYWdnLCBrZXkpID0+IHtcbiAgICAgICAgICAgIGFnZy5wdXNoKGtleSArIExJU1RfTUVNQkVSX0tFWV9WQUxVRV9TUExJVFRFUiArIHRoaXMuZ2V0KGtleSkpO1xuICAgICAgICAgICAgcmV0dXJuIGFnZztcbiAgICAgICAgfSwgW10pXG4gICAgICAgICAgICAuam9pbihMSVNUX01FTUJFUlNfU0VQQVJBVE9SKTtcbiAgICB9XG4gICAgX3BhcnNlKHJhd1RyYWNlU3RhdGUpIHtcbiAgICAgICAgaWYgKHJhd1RyYWNlU3RhdGUubGVuZ3RoID4gTUFYX1RSQUNFX1NUQVRFX0xFTilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5faW50ZXJuYWxTdGF0ZSA9IHJhd1RyYWNlU3RhdGVcbiAgICAgICAgICAgIC5zcGxpdChMSVNUX01FTUJFUlNfU0VQQVJBVE9SKVxuICAgICAgICAgICAgLnJldmVyc2UoKSAvLyBTdG9yZSBpbiByZXZlcnNlIHNvIG5ldyBrZXlzICguc2V0KC4uLikpIHdpbGwgYmUgcGxhY2VkIGF0IHRoZSBiZWdpbm5pbmdcbiAgICAgICAgICAgIC5yZWR1Y2UoKGFnZywgcGFydCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbGlzdE1lbWJlciA9IHBhcnQudHJpbSgpOyAvLyBPcHRpb25hbCBXaGl0ZXNwYWNlIChPV1MpIGhhbmRsaW5nXG4gICAgICAgICAgICBjb25zdCBpID0gbGlzdE1lbWJlci5pbmRleE9mKExJU1RfTUVNQkVSX0tFWV9WQUxVRV9TUExJVFRFUik7XG4gICAgICAgICAgICBpZiAoaSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBsaXN0TWVtYmVyLnNsaWNlKDAsIGkpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gbGlzdE1lbWJlci5zbGljZShpICsgMSwgcGFydC5sZW5ndGgpO1xuICAgICAgICAgICAgICAgIGlmICh2YWxpZGF0b3JzXzEudmFsaWRhdGVLZXkoa2V5KSAmJiB2YWxpZGF0b3JzXzEudmFsaWRhdGVWYWx1ZSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgYWdnLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFRPRE86IENvbnNpZGVyIHRvIGFkZCB3YXJuaW5nIGxvZ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhZ2c7XG4gICAgICAgIH0sIG5ldyBNYXAoKSk7XG4gICAgICAgIC8vIEJlY2F1c2Ugb2YgdGhlIHJldmVyc2UoKSByZXF1aXJlbWVudCwgdHJ1bmMgbXVzdCBiZSBkb25lIGFmdGVyIG1hcCBpcyBjcmVhdGVkXG4gICAgICAgIGlmICh0aGlzLl9pbnRlcm5hbFN0YXRlLnNpemUgPiBNQVhfVFJBQ0VfU1RBVEVfSVRFTVMpIHtcbiAgICAgICAgICAgIHRoaXMuX2ludGVybmFsU3RhdGUgPSBuZXcgTWFwKEFycmF5LmZyb20odGhpcy5faW50ZXJuYWxTdGF0ZS5lbnRyaWVzKCkpXG4gICAgICAgICAgICAgICAgLnJldmVyc2UoKSAvLyBVc2UgcmV2ZXJzZSBzYW1lIGFzIG9yaWdpbmFsIHRyYWNlc3RhdGUgcGFyc2UgY2hhaW5cbiAgICAgICAgICAgICAgICAuc2xpY2UoMCwgTUFYX1RSQUNFX1NUQVRFX0lURU1TKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgX2tleXMoKSB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuX2ludGVybmFsU3RhdGUua2V5cygpKS5yZXZlcnNlKCk7XG4gICAgfVxuICAgIF9jbG9uZSgpIHtcbiAgICAgICAgY29uc3QgdHJhY2VTdGF0ZSA9IG5ldyBUcmFjZVN0YXRlKCk7XG4gICAgICAgIHRyYWNlU3RhdGUuX2ludGVybmFsU3RhdGUgPSBuZXcgTWFwKHRoaXMuX2ludGVybmFsU3RhdGUpO1xuICAgICAgICByZXR1cm4gdHJhY2VTdGF0ZTtcbiAgICB9XG59XG5leHBvcnRzLlRyYWNlU3RhdGUgPSBUcmFjZVN0YXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhY2VTdGF0ZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/TraceState.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlwaysOffSampler = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/** Sampler that samples no traces. */\nclass AlwaysOffSampler {\n    shouldSample() {\n        return {\n            decision: api_1.SamplingDecision.NOT_RECORD,\n        };\n    }\n    toString() {\n        return 'AlwaysOffSampler';\n    }\n}\nexports.AlwaysOffSampler = AlwaysOffSampler;\n//# sourceMappingURL=AlwaysOffSampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9BbHdheXNPZmZTYW1wbGVyLmpzPzQ4OGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxnRkFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9BbHdheXNPZmZTYW1wbGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BbHdheXNPZmZTYW1wbGVyID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuLyoqIFNhbXBsZXIgdGhhdCBzYW1wbGVzIG5vIHRyYWNlcy4gKi9cbmNsYXNzIEFsd2F5c09mZlNhbXBsZXIge1xuICAgIHNob3VsZFNhbXBsZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRlY2lzaW9uOiBhcGlfMS5TYW1wbGluZ0RlY2lzaW9uLk5PVF9SRUNPUkQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gJ0Fsd2F5c09mZlNhbXBsZXInO1xuICAgIH1cbn1cbmV4cG9ydHMuQWx3YXlzT2ZmU2FtcGxlciA9IEFsd2F5c09mZlNhbXBsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BbHdheXNPZmZTYW1wbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlwaysOnSampler = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/** Sampler that samples all traces. */\nclass AlwaysOnSampler {\n    shouldSample() {\n        return {\n            decision: api_1.SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    }\n    toString() {\n        return 'AlwaysOnSampler';\n    }\n}\nexports.AlwaysOnSampler = AlwaysOnSampler;\n//# sourceMappingURL=AlwaysOnSampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9BbHdheXNPblNhbXBsZXIuanM/ZTYzZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy90cmFjZS9zYW1wbGVyL0Fsd2F5c09uU2FtcGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWx3YXlzT25TYW1wbGVyID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuLyoqIFNhbXBsZXIgdGhhdCBzYW1wbGVzIGFsbCB0cmFjZXMuICovXG5jbGFzcyBBbHdheXNPblNhbXBsZXIge1xuICAgIHNob3VsZFNhbXBsZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRlY2lzaW9uOiBhcGlfMS5TYW1wbGluZ0RlY2lzaW9uLlJFQ09SRF9BTkRfU0FNUExFRCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiAnQWx3YXlzT25TYW1wbGVyJztcbiAgICB9XG59XG5leHBvcnRzLkFsd2F5c09uU2FtcGxlciA9IEFsd2F5c09uU2FtcGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFsd2F5c09uU2FtcGxlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/sampler/ParentBasedSampler.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/sampler/ParentBasedSampler.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParentBasedSampler = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst global_error_handler_1 = __webpack_require__(/*! ../../common/global-error-handler */ \"./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js\");\nconst AlwaysOffSampler_1 = __webpack_require__(/*! ./AlwaysOffSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js\");\nconst AlwaysOnSampler_1 = __webpack_require__(/*! ./AlwaysOnSampler */ \"./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js\");\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nclass ParentBasedSampler {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            global_error_handler_1.globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler_1.AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler_1.AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler_1.AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler_1.AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler_1.AlwaysOffSampler();\n    }\n    shouldSample(context, traceId, spanName, spanKind, attributes, links) {\n        const parentContext = api_1.getSpanContext(context);\n        if (!parentContext) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & api_1.TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & api_1.TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    }\n    toString() {\n        return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n    }\n}\nexports.ParentBasedSampler = ParentBasedSampler;\n//# sourceMappingURL=ParentBasedSampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9QYXJlbnRCYXNlZFNhbXBsZXIuanM/NmUyOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQywrQkFBK0IsbUJBQU8sQ0FBQyxzSEFBbUM7QUFDMUUsMkJBQTJCLG1CQUFPLENBQUMsMEdBQW9CO0FBQ3ZELDBCQUEwQixtQkFBTyxDQUFDLHdHQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLE9BQU8sc0JBQXNCLHdCQUF3QixxQ0FBcUMsMkJBQTJCLHdDQUF3Qyx1QkFBdUIsb0NBQW9DLDBCQUEwQix3Q0FBd0M7QUFDdFQ7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9QYXJlbnRCYXNlZFNhbXBsZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBhcmVudEJhc2VkU2FtcGxlciA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGdsb2JhbF9lcnJvcl9oYW5kbGVyXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uL2dsb2JhbC1lcnJvci1oYW5kbGVyXCIpO1xuY29uc3QgQWx3YXlzT2ZmU2FtcGxlcl8xID0gcmVxdWlyZShcIi4vQWx3YXlzT2ZmU2FtcGxlclwiKTtcbmNvbnN0IEFsd2F5c09uU2FtcGxlcl8xID0gcmVxdWlyZShcIi4vQWx3YXlzT25TYW1wbGVyXCIpO1xuLyoqXG4gKiBBIGNvbXBvc2l0ZSBzYW1wbGVyIHRoYXQgZWl0aGVyIHJlc3BlY3RzIHRoZSBwYXJlbnQgc3BhbidzIHNhbXBsaW5nIGRlY2lzaW9uXG4gKiBvciBkZWxlZ2F0ZXMgdG8gYGRlbGVnYXRlU2FtcGxlcmAgZm9yIHJvb3Qgc3BhbnMuXG4gKi9cbmNsYXNzIFBhcmVudEJhc2VkU2FtcGxlciB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICAgICAgdGhpcy5fcm9vdCA9IGNvbmZpZy5yb290O1xuICAgICAgICBpZiAoIXRoaXMuX3Jvb3QpIHtcbiAgICAgICAgICAgIGdsb2JhbF9lcnJvcl9oYW5kbGVyXzEuZ2xvYmFsRXJyb3JIYW5kbGVyKG5ldyBFcnJvcignUGFyZW50QmFzZWRTYW1wbGVyIG11c3QgaGF2ZSBhIHJvb3Qgc2FtcGxlciBjb25maWd1cmVkJykpO1xuICAgICAgICAgICAgdGhpcy5fcm9vdCA9IG5ldyBBbHdheXNPblNhbXBsZXJfMS5BbHdheXNPblNhbXBsZXIoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9yZW1vdGVQYXJlbnRTYW1wbGVkID1cbiAgICAgICAgICAgIChfYSA9IGNvbmZpZy5yZW1vdGVQYXJlbnRTYW1wbGVkKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXcgQWx3YXlzT25TYW1wbGVyXzEuQWx3YXlzT25TYW1wbGVyKCk7XG4gICAgICAgIHRoaXMuX3JlbW90ZVBhcmVudE5vdFNhbXBsZWQgPVxuICAgICAgICAgICAgKF9iID0gY29uZmlnLnJlbW90ZVBhcmVudE5vdFNhbXBsZWQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IG5ldyBBbHdheXNPZmZTYW1wbGVyXzEuQWx3YXlzT2ZmU2FtcGxlcigpO1xuICAgICAgICB0aGlzLl9sb2NhbFBhcmVudFNhbXBsZWQgPVxuICAgICAgICAgICAgKF9jID0gY29uZmlnLmxvY2FsUGFyZW50U2FtcGxlZCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogbmV3IEFsd2F5c09uU2FtcGxlcl8xLkFsd2F5c09uU2FtcGxlcigpO1xuICAgICAgICB0aGlzLl9sb2NhbFBhcmVudE5vdFNhbXBsZWQgPVxuICAgICAgICAgICAgKF9kID0gY29uZmlnLmxvY2FsUGFyZW50Tm90U2FtcGxlZCkgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogbmV3IEFsd2F5c09mZlNhbXBsZXJfMS5BbHdheXNPZmZTYW1wbGVyKCk7XG4gICAgfVxuICAgIHNob3VsZFNhbXBsZShjb250ZXh0LCB0cmFjZUlkLCBzcGFuTmFtZSwgc3BhbktpbmQsIGF0dHJpYnV0ZXMsIGxpbmtzKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudENvbnRleHQgPSBhcGlfMS5nZXRTcGFuQ29udGV4dChjb250ZXh0KTtcbiAgICAgICAgaWYgKCFwYXJlbnRDb250ZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcm9vdC5zaG91bGRTYW1wbGUoY29udGV4dCwgdHJhY2VJZCwgc3Bhbk5hbWUsIHNwYW5LaW5kLCBhdHRyaWJ1dGVzLCBsaW5rcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhcmVudENvbnRleHQuaXNSZW1vdGUpIHtcbiAgICAgICAgICAgIGlmIChwYXJlbnRDb250ZXh0LnRyYWNlRmxhZ3MgJiBhcGlfMS5UcmFjZUZsYWdzLlNBTVBMRUQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fcmVtb3RlUGFyZW50U2FtcGxlZC5zaG91bGRTYW1wbGUoY29udGV4dCwgdHJhY2VJZCwgc3Bhbk5hbWUsIHNwYW5LaW5kLCBhdHRyaWJ1dGVzLCBsaW5rcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcmVtb3RlUGFyZW50Tm90U2FtcGxlZC5zaG91bGRTYW1wbGUoY29udGV4dCwgdHJhY2VJZCwgc3Bhbk5hbWUsIHNwYW5LaW5kLCBhdHRyaWJ1dGVzLCBsaW5rcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhcmVudENvbnRleHQudHJhY2VGbGFncyAmIGFwaV8xLlRyYWNlRmxhZ3MuU0FNUExFRCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xvY2FsUGFyZW50U2FtcGxlZC5zaG91bGRTYW1wbGUoY29udGV4dCwgdHJhY2VJZCwgc3Bhbk5hbWUsIHNwYW5LaW5kLCBhdHRyaWJ1dGVzLCBsaW5rcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2xvY2FsUGFyZW50Tm90U2FtcGxlZC5zaG91bGRTYW1wbGUoY29udGV4dCwgdHJhY2VJZCwgc3Bhbk5hbWUsIHNwYW5LaW5kLCBhdHRyaWJ1dGVzLCBsaW5rcyk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYFBhcmVudEJhc2Vke3Jvb3Q9JHt0aGlzLl9yb290LnRvU3RyaW5nKCl9LCByZW1vdGVQYXJlbnRTYW1wbGVkPSR7dGhpcy5fcmVtb3RlUGFyZW50U2FtcGxlZC50b1N0cmluZygpfSwgcmVtb3RlUGFyZW50Tm90U2FtcGxlZD0ke3RoaXMuX3JlbW90ZVBhcmVudE5vdFNhbXBsZWQudG9TdHJpbmcoKX0sIGxvY2FsUGFyZW50U2FtcGxlZD0ke3RoaXMuX2xvY2FsUGFyZW50U2FtcGxlZC50b1N0cmluZygpfSwgbG9jYWxQYXJlbnROb3RTYW1wbGVkPSR7dGhpcy5fbG9jYWxQYXJlbnROb3RTYW1wbGVkLnRvU3RyaW5nKCl9fWA7XG4gICAgfVxufVxuZXhwb3J0cy5QYXJlbnRCYXNlZFNhbXBsZXIgPSBQYXJlbnRCYXNlZFNhbXBsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJlbnRCYXNlZFNhbXBsZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/sampler/ParentBasedSampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/trace/sampler/TraceIdRatioBasedSampler.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/trace/sampler/TraceIdRatioBasedSampler.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceIdRatioBasedSampler = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nclass TraceIdRatioBasedSampler {\n    constructor(_ratio = 0) {\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    shouldSample(context, traceId) {\n        return {\n            decision: api_1.isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? api_1.SamplingDecision.RECORD_AND_SAMPLED\n                : api_1.SamplingDecision.NOT_RECORD,\n        };\n    }\n    toString() {\n        return `TraceIdRatioBased{${this._ratio}}`;\n    }\n    _normalize(ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    }\n    _accumulate(traceId) {\n        let accumulation = 0;\n        for (let i = 0; i < traceId.length / 8; i++) {\n            const pos = i * 8;\n            const part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    }\n}\nexports.TraceIdRatioBasedSampler = TraceIdRatioBasedSampler;\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdHJhY2Uvc2FtcGxlci9UcmFjZUlkUmF0aW9CYXNlZFNhbXBsZXIuanM/MTFkZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsRUFBRSxhQUFhO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsd0JBQXdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy90cmFjZS9zYW1wbGVyL1RyYWNlSWRSYXRpb0Jhc2VkU2FtcGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhY2VJZFJhdGlvQmFzZWRTYW1wbGVyID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuLyoqIFNhbXBsZXIgdGhhdCBzYW1wbGVzIGEgZ2l2ZW4gZnJhY3Rpb24gb2YgdHJhY2VzIGJhc2VkIG9mIHRyYWNlIGlkIGRldGVybWluaXN0aWNhbGx5LiAqL1xuY2xhc3MgVHJhY2VJZFJhdGlvQmFzZWRTYW1wbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihfcmF0aW8gPSAwKSB7XG4gICAgICAgIHRoaXMuX3JhdGlvID0gX3JhdGlvO1xuICAgICAgICB0aGlzLl9yYXRpbyA9IHRoaXMuX25vcm1hbGl6ZShfcmF0aW8pO1xuICAgICAgICB0aGlzLl91cHBlckJvdW5kID0gTWF0aC5mbG9vcih0aGlzLl9yYXRpbyAqIDB4ZmZmZmZmZmYpO1xuICAgIH1cbiAgICBzaG91bGRTYW1wbGUoY29udGV4dCwgdHJhY2VJZCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGVjaXNpb246IGFwaV8xLmlzVmFsaWRUcmFjZUlkKHRyYWNlSWQpICYmIHRoaXMuX2FjY3VtdWxhdGUodHJhY2VJZCkgPCB0aGlzLl91cHBlckJvdW5kXG4gICAgICAgICAgICAgICAgPyBhcGlfMS5TYW1wbGluZ0RlY2lzaW9uLlJFQ09SRF9BTkRfU0FNUExFRFxuICAgICAgICAgICAgICAgIDogYXBpXzEuU2FtcGxpbmdEZWNpc2lvbi5OT1RfUkVDT1JELFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBUcmFjZUlkUmF0aW9CYXNlZHske3RoaXMuX3JhdGlvfX1gO1xuICAgIH1cbiAgICBfbm9ybWFsaXplKHJhdGlvKSB7XG4gICAgICAgIGlmICh0eXBlb2YgcmF0aW8gIT09ICdudW1iZXInIHx8IGlzTmFOKHJhdGlvKSlcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICByZXR1cm4gcmF0aW8gPj0gMSA/IDEgOiByYXRpbyA8PSAwID8gMCA6IHJhdGlvO1xuICAgIH1cbiAgICBfYWNjdW11bGF0ZSh0cmFjZUlkKSB7XG4gICAgICAgIGxldCBhY2N1bXVsYXRpb24gPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRyYWNlSWQubGVuZ3RoIC8gODsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBwb3MgPSBpICogODtcbiAgICAgICAgICAgIGNvbnN0IHBhcnQgPSBwYXJzZUludCh0cmFjZUlkLnNsaWNlKHBvcywgcG9zICsgOCksIDE2KTtcbiAgICAgICAgICAgIGFjY3VtdWxhdGlvbiA9IChhY2N1bXVsYXRpb24gXiBwYXJ0KSA+Pj4gMDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjdW11bGF0aW9uO1xuICAgIH1cbn1cbmV4cG9ydHMuVHJhY2VJZFJhdGlvQmFzZWRTYW1wbGVyID0gVHJhY2VJZFJhdGlvQmFzZWRTYW1wbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhY2VJZFJhdGlvQmFzZWRTYW1wbGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/trace/sampler/TraceIdRatioBasedSampler.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/utils/environment.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/utils/environment.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEnvironment = exports.DEFAULT_ENVIRONMENT = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst sampling_1 = __webpack_require__(/*! ./sampling */ \"./node_modules/@opentelemetry/core/build/src/utils/sampling.js\");\nconst DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nconst ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nconst ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\n/**\n * Default environment variables\n */\nexports.DEFAULT_ENVIRONMENT = {\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: api_1.DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: 128,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_SAMPLER: sampling_1.TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min = -Infinity, max = Infinity) {\n    if (typeof values[name] !== 'undefined') {\n        const value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator = DEFAULT_LIST_SEPARATOR) {\n    const givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(v => v.trim());\n    }\n}\n// The support string -> DiagLogLevel mappings\nconst logLevelMap = {\n    ALL: api_1.DiagLogLevel.ALL,\n    VERBOSE: api_1.DiagLogLevel.VERBOSE,\n    DEBUG: api_1.DiagLogLevel.DEBUG,\n    INFO: api_1.DiagLogLevel.INFO,\n    WARN: api_1.DiagLogLevel.WARN,\n    ERROR: api_1.DiagLogLevel.ERROR,\n    NONE: api_1.DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    const value = values[key];\n    if (typeof value === 'string') {\n        const theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nfunction parseEnvironment(values) {\n    const environment = {};\n    for (const env in exports.DEFAULT_ENVIRONMENT) {\n        const key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    const value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\nexports.parseEnvironment = parseEnvironment;\n//# sourceMappingURL=environment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdXRpbHMvZW52aXJvbm1lbnQuanM/MDA4NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQyxtQkFBbUIsbUJBQU8sQ0FBQyxrRkFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy91dGlscy9lbnZpcm9ubWVudC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VFbnZpcm9ubWVudCA9IGV4cG9ydHMuREVGQVVMVF9FTlZJUk9OTUVOVCA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IHNhbXBsaW5nXzEgPSByZXF1aXJlKFwiLi9zYW1wbGluZ1wiKTtcbmNvbnN0IERFRkFVTFRfTElTVF9TRVBBUkFUT1IgPSAnLCc7XG4vKipcbiAqIEVudmlyb25tZW50IGludGVyZmFjZSB0byBkZWZpbmUgYWxsIG5hbWVzXG4gKi9cbmNvbnN0IEVOVklST05NRU5UX05VTUJFUlNfS0VZUyA9IFtcbiAgICAnT1RFTF9CU1BfRVhQT1JUX1RJTUVPVVQnLFxuICAgICdPVEVMX0JTUF9NQVhfRVhQT1JUX0JBVENIX1NJWkUnLFxuICAgICdPVEVMX0JTUF9NQVhfUVVFVUVfU0laRScsXG4gICAgJ09URUxfQlNQX1NDSEVEVUxFX0RFTEFZJyxcbiAgICAnT1RFTF9TUEFOX0FUVFJJQlVURV9DT1VOVF9MSU1JVCcsXG4gICAgJ09URUxfU1BBTl9FVkVOVF9DT1VOVF9MSU1JVCcsXG4gICAgJ09URUxfU1BBTl9MSU5LX0NPVU5UX0xJTUlUJyxcbl07XG5mdW5jdGlvbiBpc0VudlZhckFOdW1iZXIoa2V5KSB7XG4gICAgcmV0dXJuIChFTlZJUk9OTUVOVF9OVU1CRVJTX0tFWVMuaW5kZXhPZihrZXkpID4gLTEpO1xufVxuY29uc3QgRU5WSVJPTk1FTlRfTElTVFNfS0VZUyA9IFtcbiAgICAnT1RFTF9OT19QQVRDSF9NT0RVTEVTJyxcbiAgICAnT1RFTF9QUk9QQUdBVE9SUycsXG5dO1xuZnVuY3Rpb24gaXNFbnZWYXJBTGlzdChrZXkpIHtcbiAgICByZXR1cm4gRU5WSVJPTk1FTlRfTElTVFNfS0VZUy5pbmRleE9mKGtleSkgPiAtMTtcbn1cbi8qKlxuICogRGVmYXVsdCBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbiAqL1xuZXhwb3J0cy5ERUZBVUxUX0VOVklST05NRU5UID0ge1xuICAgIENPTlRBSU5FUl9OQU1FOiAnJyxcbiAgICBFQ1NfQ09OVEFJTkVSX01FVEFEQVRBX1VSSV9WNDogJycsXG4gICAgRUNTX0NPTlRBSU5FUl9NRVRBREFUQV9VUkk6ICcnLFxuICAgIEhPU1ROQU1FOiAnJyxcbiAgICBLVUJFUk5FVEVTX1NFUlZJQ0VfSE9TVDogJycsXG4gICAgTkFNRVNQQUNFOiAnJyxcbiAgICBPVEVMX0JTUF9FWFBPUlRfVElNRU9VVDogMzAwMDAsXG4gICAgT1RFTF9CU1BfTUFYX0VYUE9SVF9CQVRDSF9TSVpFOiA1MTIsXG4gICAgT1RFTF9CU1BfTUFYX1FVRVVFX1NJWkU6IDIwNDgsXG4gICAgT1RFTF9CU1BfU0NIRURVTEVfREVMQVk6IDUwMDAsXG4gICAgT1RFTF9FWFBPUlRFUl9KQUVHRVJfQUdFTlRfSE9TVDogJycsXG4gICAgT1RFTF9FWFBPUlRFUl9KQUVHRVJfRU5EUE9JTlQ6ICcnLFxuICAgIE9URUxfRVhQT1JURVJfSkFFR0VSX1BBU1NXT1JEOiAnJyxcbiAgICBPVEVMX0VYUE9SVEVSX0pBRUdFUl9VU0VSOiAnJyxcbiAgICBPVEVMX0VYUE9SVEVSX1pJUEtJTl9FTkRQT0lOVDogJ2h0dHA6Ly9sb2NhbGhvc3Q6OTQxMS9hcGkvdjIvc3BhbnMnLFxuICAgIE9URUxfTE9HX0xFVkVMOiBhcGlfMS5EaWFnTG9nTGV2ZWwuSU5GTyxcbiAgICBPVEVMX05PX1BBVENIX01PRFVMRVM6IFtdLFxuICAgIE9URUxfUFJPUEFHQVRPUlM6IFsndHJhY2Vjb250ZXh0JywgJ2JhZ2dhZ2UnXSxcbiAgICBPVEVMX1JFU09VUkNFX0FUVFJJQlVURVM6ICcnLFxuICAgIE9URUxfU1BBTl9BVFRSSUJVVEVfQ09VTlRfTElNSVQ6IDEyOCxcbiAgICBPVEVMX1NQQU5fRVZFTlRfQ09VTlRfTElNSVQ6IDEyOCxcbiAgICBPVEVMX1NQQU5fTElOS19DT1VOVF9MSU1JVDogMTI4LFxuICAgIE9URUxfVFJBQ0VTX1NBTVBMRVI6IHNhbXBsaW5nXzEuVHJhY2VzU2FtcGxlclZhbHVlcy5QYXJlbnRCYXNlZEFsd2F5c09uLFxuICAgIE9URUxfVFJBQ0VTX1NBTVBMRVJfQVJHOiAnJyxcbn07XG4vKipcbiAqIFBhcnNlcyBhIHZhcmlhYmxlIGFzIG51bWJlciB3aXRoIG51bWJlciB2YWxpZGF0aW9uXG4gKiBAcGFyYW0gbmFtZVxuICogQHBhcmFtIGVudmlyb25tZW50XG4gKiBAcGFyYW0gdmFsdWVzXG4gKiBAcGFyYW0gbWluXG4gKiBAcGFyYW0gbWF4XG4gKi9cbmZ1bmN0aW9uIHBhcnNlTnVtYmVyKG5hbWUsIGVudmlyb25tZW50LCB2YWx1ZXMsIG1pbiA9IC1JbmZpbml0eSwgbWF4ID0gSW5maW5pdHkpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlc1tuYW1lXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBOdW1iZXIodmFsdWVzW25hbWVdKTtcbiAgICAgICAgaWYgKCFpc05hTih2YWx1ZSkpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA8IG1pbikge1xuICAgICAgICAgICAgICAgIGVudmlyb25tZW50W25hbWVdID0gbWluO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodmFsdWUgPiBtYXgpIHtcbiAgICAgICAgICAgICAgICBlbnZpcm9ubWVudFtuYW1lXSA9IG1heDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGVudmlyb25tZW50W25hbWVdID0gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4vKipcbiAqIFBhcnNlcyBsaXN0LWxpa2Ugc3RyaW5ncyBmcm9tIGlucHV0IGludG8gb3V0cHV0LlxuICogQHBhcmFtIG5hbWVcbiAqIEBwYXJhbSBlbnZpcm9ubWVudFxuICogQHBhcmFtIHZhbHVlc1xuICogQHBhcmFtIHNlcGFyYXRvclxuICovXG5mdW5jdGlvbiBwYXJzZVN0cmluZ0xpc3QobmFtZSwgb3V0cHV0LCBpbnB1dCwgc2VwYXJhdG9yID0gREVGQVVMVF9MSVNUX1NFUEFSQVRPUikge1xuICAgIGNvbnN0IGdpdmVuVmFsdWUgPSBpbnB1dFtuYW1lXTtcbiAgICBpZiAodHlwZW9mIGdpdmVuVmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG91dHB1dFtuYW1lXSA9IGdpdmVuVmFsdWUuc3BsaXQoc2VwYXJhdG9yKS5tYXAodiA9PiB2LnRyaW0oKSk7XG4gICAgfVxufVxuLy8gVGhlIHN1cHBvcnQgc3RyaW5nIC0+IERpYWdMb2dMZXZlbCBtYXBwaW5nc1xuY29uc3QgbG9nTGV2ZWxNYXAgPSB7XG4gICAgQUxMOiBhcGlfMS5EaWFnTG9nTGV2ZWwuQUxMLFxuICAgIFZFUkJPU0U6IGFwaV8xLkRpYWdMb2dMZXZlbC5WRVJCT1NFLFxuICAgIERFQlVHOiBhcGlfMS5EaWFnTG9nTGV2ZWwuREVCVUcsXG4gICAgSU5GTzogYXBpXzEuRGlhZ0xvZ0xldmVsLklORk8sXG4gICAgV0FSTjogYXBpXzEuRGlhZ0xvZ0xldmVsLldBUk4sXG4gICAgRVJST1I6IGFwaV8xLkRpYWdMb2dMZXZlbC5FUlJPUixcbiAgICBOT05FOiBhcGlfMS5EaWFnTG9nTGV2ZWwuTk9ORSxcbn07XG4vKipcbiAqIEVudmlyb25tZW50YWxseSBzZXRzIGxvZyBsZXZlbCBpZiB2YWxpZCBsb2cgbGV2ZWwgc3RyaW5nIGlzIHByb3ZpZGVkXG4gKiBAcGFyYW0ga2V5XG4gKiBAcGFyYW0gZW52aXJvbm1lbnRcbiAqIEBwYXJhbSB2YWx1ZXNcbiAqL1xuZnVuY3Rpb24gc2V0TG9nTGV2ZWxGcm9tRW52KGtleSwgZW52aXJvbm1lbnQsIHZhbHVlcykge1xuICAgIGNvbnN0IHZhbHVlID0gdmFsdWVzW2tleV07XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29uc3QgdGhlTGV2ZWwgPSBsb2dMZXZlbE1hcFt2YWx1ZS50b1VwcGVyQ2FzZSgpXTtcbiAgICAgICAgaWYgKHRoZUxldmVsICE9IG51bGwpIHtcbiAgICAgICAgICAgIGVudmlyb25tZW50W2tleV0gPSB0aGVMZXZlbDtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogUGFyc2VzIGVudmlyb25tZW50IHZhbHVlc1xuICogQHBhcmFtIHZhbHVlc1xuICovXG5mdW5jdGlvbiBwYXJzZUVudmlyb25tZW50KHZhbHVlcykge1xuICAgIGNvbnN0IGVudmlyb25tZW50ID0ge307XG4gICAgZm9yIChjb25zdCBlbnYgaW4gZXhwb3J0cy5ERUZBVUxUX0VOVklST05NRU5UKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IGVudjtcbiAgICAgICAgc3dpdGNoIChrZXkpIHtcbiAgICAgICAgICAgIGNhc2UgJ09URUxfTE9HX0xFVkVMJzpcbiAgICAgICAgICAgICAgICBzZXRMb2dMZXZlbEZyb21FbnYoa2V5LCBlbnZpcm9ubWVudCwgdmFsdWVzKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgaWYgKGlzRW52VmFyQU51bWJlcihrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlTnVtYmVyKGtleSwgZW52aXJvbm1lbnQsIHZhbHVlcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGlzRW52VmFyQUxpc3Qoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJzZVN0cmluZ0xpc3Qoa2V5LCBlbnZpcm9ubWVudCwgdmFsdWVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdmFsdWVzW2tleV07XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnICYmIHZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbnZpcm9ubWVudFtrZXldID0gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZW52aXJvbm1lbnQ7XG59XG5leHBvcnRzLnBhcnNlRW52aXJvbm1lbnQgPSBwYXJzZUVudmlyb25tZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52aXJvbm1lbnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/utils/environment.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/utils/sampling.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/utils/sampling.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TracesSamplerValues = void 0;\nvar TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues = exports.TracesSamplerValues || (exports.TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdXRpbHMvc2FtcGxpbmcuanM/ZDU4OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0ZBQXdGO0FBQ3pGIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2NvcmUvYnVpbGQvc3JjL3V0aWxzL3NhbXBsaW5nLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFjZXNTYW1wbGVyVmFsdWVzID0gdm9pZCAwO1xudmFyIFRyYWNlc1NhbXBsZXJWYWx1ZXM7XG4oZnVuY3Rpb24gKFRyYWNlc1NhbXBsZXJWYWx1ZXMpIHtcbiAgICBUcmFjZXNTYW1wbGVyVmFsdWVzW1wiQWx3YXlzT2ZmXCJdID0gXCJhbHdheXNfb2ZmXCI7XG4gICAgVHJhY2VzU2FtcGxlclZhbHVlc1tcIkFsd2F5c09uXCJdID0gXCJhbHdheXNfb25cIjtcbiAgICBUcmFjZXNTYW1wbGVyVmFsdWVzW1wiUGFyZW50QmFzZWRBbHdheXNPZmZcIl0gPSBcInBhcmVudGJhc2VkX2Fsd2F5c19vZmZcIjtcbiAgICBUcmFjZXNTYW1wbGVyVmFsdWVzW1wiUGFyZW50QmFzZWRBbHdheXNPblwiXSA9IFwicGFyZW50YmFzZWRfYWx3YXlzX29uXCI7XG4gICAgVHJhY2VzU2FtcGxlclZhbHVlc1tcIlBhcmVudEJhc2VkVHJhY2VJZFJhdGlvXCJdID0gXCJwYXJlbnRiYXNlZF90cmFjZWlkcmF0aW9cIjtcbiAgICBUcmFjZXNTYW1wbGVyVmFsdWVzW1wiVHJhY2VJZFJhdGlvXCJdID0gXCJ0cmFjZWlkcmF0aW9cIjtcbn0pKFRyYWNlc1NhbXBsZXJWYWx1ZXMgPSBleHBvcnRzLlRyYWNlc1NhbXBsZXJWYWx1ZXMgfHwgKGV4cG9ydHMuVHJhY2VzU2FtcGxlclZhbHVlcyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zYW1wbGluZy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/utils/sampling.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/utils/url.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/utils/url.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isUrlIgnored = exports.urlMatches = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction urlMatches(url, urlToMatch) {\n    if (typeof urlToMatch === 'string') {\n        return url === urlToMatch;\n    }\n    else {\n        return !!url.match(urlToMatch);\n    }\n}\nexports.urlMatches = urlMatches;\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nfunction isUrlIgnored(url, ignoredUrls) {\n    if (!ignoredUrls) {\n        return false;\n    }\n    for (const ignoreUrl of ignoredUrls) {\n        if (urlMatches(url, ignoreUrl)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isUrlIgnored = isUrlIgnored;\n//# sourceMappingURL=url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdXRpbHMvdXJsLmpzPzQzNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxXQUFXLDJDQUEyQztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9jb3JlL2J1aWxkL3NyYy91dGlscy91cmwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNVcmxJZ25vcmVkID0gZXhwb3J0cy51cmxNYXRjaGVzID0gdm9pZCAwO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmZ1bmN0aW9uIHVybE1hdGNoZXModXJsLCB1cmxUb01hdGNoKSB7XG4gICAgaWYgKHR5cGVvZiB1cmxUb01hdGNoID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdXJsID09PSB1cmxUb01hdGNoO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuICEhdXJsLm1hdGNoKHVybFRvTWF0Y2gpO1xuICAgIH1cbn1cbmV4cG9ydHMudXJsTWF0Y2hlcyA9IHVybE1hdGNoZXM7XG4vKipcbiAqIENoZWNrIGlmIHtAcGFyYW0gdXJsfSBzaG91bGQgYmUgaWdub3JlZCB3aGVuIGNvbXBhcmluZyBhZ2FpbnN0IHtAcGFyYW0gaWdub3JlZFVybHN9XG4gKiBAcGFyYW0gdXJsXG4gKiBAcGFyYW0gaWdub3JlZFVybHNcbiAqL1xuZnVuY3Rpb24gaXNVcmxJZ25vcmVkKHVybCwgaWdub3JlZFVybHMpIHtcbiAgICBpZiAoIWlnbm9yZWRVcmxzKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBpZ25vcmVVcmwgb2YgaWdub3JlZFVybHMpIHtcbiAgICAgICAgaWYgKHVybE1hdGNoZXModXJsLCBpZ25vcmVVcmwpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnRzLmlzVXJsSWdub3JlZCA9IGlzVXJsSWdub3JlZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/utils/url.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/utils/wrap.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/utils/wrap.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWrapped = void 0;\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nfunction isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\nexports.isWrapped = isWrapped;\n//# sourceMappingURL=wrap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdXRpbHMvd3JhcC5qcz9kM2VlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdXRpbHMvd3JhcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNXcmFwcGVkID0gdm9pZCAwO1xuLyoqXG4gKiBDaGVja3MgaWYgY2VydGFpbiBmdW5jdGlvbiBoYXMgYmVlbiBhbHJlYWR5IHdyYXBwZWRcbiAqIEBwYXJhbSBmdW5jXG4gKi9cbmZ1bmN0aW9uIGlzV3JhcHBlZChmdW5jKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgZnVuYyA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgICB0eXBlb2YgZnVuYy5fX29yaWdpbmFsID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgIHR5cGVvZiBmdW5jLl9fdW53cmFwID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgIGZ1bmMuX193cmFwcGVkID09PSB0cnVlKTtcbn1cbmV4cG9ydHMuaXNXcmFwcGVkID0gaXNXcmFwcGVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/utils/wrap.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/core/build/src/version.js":
/*!***************************************************************!*\
  !*** ./node_modules/@opentelemetry/core/build/src/version.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.VERSION = '0.19.0';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdmVyc2lvbi5qcz9lZDIyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvY29yZS9idWlsZC9zcmMvdmVyc2lvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVkVSU0lPTiA9IHZvaWQgMDtcbi8vIHRoaXMgaXMgYXV0b2dlbmVyYXRlZCBmaWxlLCBzZWUgc2NyaXB0cy92ZXJzaW9uLXVwZGF0ZS5qc1xuZXhwb3J0cy5WRVJTSU9OID0gJzAuMTkuMCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/core/build/src/version.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorExporterBase = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Collector Exporter abstract base class\n */\nclass CollectorExporterBase {\n    /**\n     * @param config\n     */\n    constructor(config = {}) {\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        this._sendingPromises = [];\n        this.serviceName = this.getDefaultServiceName(config);\n        this.url = this.getDefaultUrl(config);\n        if (typeof config.hostname === 'string') {\n            this.hostname = config.hostname;\n        }\n        this.attributes = config.attributes;\n        this.shutdown = this.shutdown.bind(this);\n        this._concurrencyLimit =\n            typeof config.concurrencyLimit === 'number'\n                ? config.concurrencyLimit\n                : Infinity;\n        // platform dependent\n        this.onInit(config);\n    }\n    /**\n     * Export items.\n     * @param items\n     * @param resultCallback\n     */\n    export(items, resultCallback) {\n        if (this._isShutdown) {\n            resultCallback({\n                code: core_1.ExportResultCode.FAILED,\n                error: new Error('Exporter has been shutdown'),\n            });\n            return;\n        }\n        if (this._sendingPromises.length >= this._concurrencyLimit) {\n            resultCallback({\n                code: core_1.ExportResultCode.FAILED,\n                error: new Error('Concurrent export limit reached'),\n            });\n            return;\n        }\n        this._export(items)\n            .then(() => {\n            resultCallback({ code: core_1.ExportResultCode.SUCCESS });\n        })\n            .catch((error) => {\n            resultCallback({ code: core_1.ExportResultCode.FAILED, error });\n        });\n    }\n    _export(items) {\n        return new Promise((resolve, reject) => {\n            try {\n                api_1.diag.debug('items to be sent', items);\n                this.send(items, resolve, reject);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    /**\n     * Shutdown the exporter.\n     */\n    shutdown() {\n        if (this._isShutdown) {\n            api_1.diag.debug('shutdown already started');\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        api_1.diag.debug('shutdown started');\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this.onShutdown();\n            })\n                .then(() => {\n                return Promise.all(this._sendingPromises);\n            })\n                .then(() => {\n                resolve();\n            })\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n}\nexports.CollectorExporterBase = CollectorExporterBase;\n//# sourceMappingURL=CollectorExporterBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9Db2xsZWN0b3JFeHBvcnRlckJhc2UuanM/NTQwMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQyxlQUFlLG1CQUFPLENBQUMsa0ZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsd0NBQXdDO0FBQ3BFLFNBQVM7QUFDVDtBQUNBLDRCQUE0Qiw4Q0FBOEM7QUFDMUUsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9leHBvcnRlci1jb2xsZWN0b3IvYnVpbGQvc3JjL0NvbGxlY3RvckV4cG9ydGVyQmFzZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29sbGVjdG9yRXhwb3J0ZXJCYXNlID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG4vKipcbiAqIENvbGxlY3RvciBFeHBvcnRlciBhYnN0cmFjdCBiYXNlIGNsYXNzXG4gKi9cbmNsYXNzIENvbGxlY3RvckV4cG9ydGVyQmFzZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGNvbmZpZ1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIHRoaXMuX2lzU2h1dGRvd24gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fc2h1dHRpbmdEb3duUHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgICB0aGlzLl9zZW5kaW5nUHJvbWlzZXMgPSBbXTtcbiAgICAgICAgdGhpcy5zZXJ2aWNlTmFtZSA9IHRoaXMuZ2V0RGVmYXVsdFNlcnZpY2VOYW1lKGNvbmZpZyk7XG4gICAgICAgIHRoaXMudXJsID0gdGhpcy5nZXREZWZhdWx0VXJsKGNvbmZpZyk7XG4gICAgICAgIGlmICh0eXBlb2YgY29uZmlnLmhvc3RuYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhpcy5ob3N0bmFtZSA9IGNvbmZpZy5ob3N0bmFtZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMgPSBjb25maWcuYXR0cmlidXRlcztcbiAgICAgICAgdGhpcy5zaHV0ZG93biA9IHRoaXMuc2h1dGRvd24uYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5fY29uY3VycmVuY3lMaW1pdCA9XG4gICAgICAgICAgICB0eXBlb2YgY29uZmlnLmNvbmN1cnJlbmN5TGltaXQgPT09ICdudW1iZXInXG4gICAgICAgICAgICAgICAgPyBjb25maWcuY29uY3VycmVuY3lMaW1pdFxuICAgICAgICAgICAgICAgIDogSW5maW5pdHk7XG4gICAgICAgIC8vIHBsYXRmb3JtIGRlcGVuZGVudFxuICAgICAgICB0aGlzLm9uSW5pdChjb25maWcpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFeHBvcnQgaXRlbXMuXG4gICAgICogQHBhcmFtIGl0ZW1zXG4gICAgICogQHBhcmFtIHJlc3VsdENhbGxiYWNrXG4gICAgICovXG4gICAgZXhwb3J0KGl0ZW1zLCByZXN1bHRDYWxsYmFjaykge1xuICAgICAgICBpZiAodGhpcy5faXNTaHV0ZG93bikge1xuICAgICAgICAgICAgcmVzdWx0Q2FsbGJhY2soe1xuICAgICAgICAgICAgICAgIGNvZGU6IGNvcmVfMS5FeHBvcnRSZXN1bHRDb2RlLkZBSUxFRCxcbiAgICAgICAgICAgICAgICBlcnJvcjogbmV3IEVycm9yKCdFeHBvcnRlciBoYXMgYmVlbiBzaHV0ZG93bicpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX3NlbmRpbmdQcm9taXNlcy5sZW5ndGggPj0gdGhpcy5fY29uY3VycmVuY3lMaW1pdCkge1xuICAgICAgICAgICAgcmVzdWx0Q2FsbGJhY2soe1xuICAgICAgICAgICAgICAgIGNvZGU6IGNvcmVfMS5FeHBvcnRSZXN1bHRDb2RlLkZBSUxFRCxcbiAgICAgICAgICAgICAgICBlcnJvcjogbmV3IEVycm9yKCdDb25jdXJyZW50IGV4cG9ydCBsaW1pdCByZWFjaGVkJyksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9leHBvcnQoaXRlbXMpXG4gICAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICByZXN1bHRDYWxsYmFjayh7IGNvZGU6IGNvcmVfMS5FeHBvcnRSZXN1bHRDb2RlLlNVQ0NFU1MgfSk7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICByZXN1bHRDYWxsYmFjayh7IGNvZGU6IGNvcmVfMS5FeHBvcnRSZXN1bHRDb2RlLkZBSUxFRCwgZXJyb3IgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfZXhwb3J0KGl0ZW1zKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGFwaV8xLmRpYWcuZGVidWcoJ2l0ZW1zIHRvIGJlIHNlbnQnLCBpdGVtcyk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZW5kKGl0ZW1zLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaHV0ZG93biB0aGUgZXhwb3J0ZXIuXG4gICAgICovXG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIGlmICh0aGlzLl9pc1NodXRkb3duKSB7XG4gICAgICAgICAgICBhcGlfMS5kaWFnLmRlYnVnKCdzaHV0ZG93biBhbHJlYWR5IHN0YXJ0ZWQnKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zaHV0dGluZ0Rvd25Qcm9taXNlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2lzU2h1dGRvd24gPSB0cnVlO1xuICAgICAgICBhcGlfMS5kaWFnLmRlYnVnKCdzaHV0ZG93biBzdGFydGVkJyk7XG4gICAgICAgIHRoaXMuX3NodXR0aW5nRG93blByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBQcm9taXNlLnJlc29sdmUoKVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5vblNodXRkb3duKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwodGhpcy5fc2VuZGluZ1Byb21pc2VzKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGUgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NodXR0aW5nRG93blByb21pc2U7XG4gICAgfVxufVxuZXhwb3J0cy5Db2xsZWN0b3JFeHBvcnRlckJhc2UgPSBDb2xsZWN0b3JFeHBvcnRlckJhc2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db2xsZWN0b3JFeHBvcnRlckJhc2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCollectorExportMetricServiceRequest = exports.toCollectorExportTraceServiceRequest = exports.collectorTypes = void 0;\n__exportStar(__webpack_require__(/*! ./CollectorExporterBase */ \"./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/index.js\"), exports);\nexports.collectorTypes = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/exporter-collector/build/src/types.js\");\nvar transform_1 = __webpack_require__(/*! ./transform */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transform.js\");\nObject.defineProperty(exports, \"toCollectorExportTraceServiceRequest\", { enumerable: true, get: function () { return transform_1.toCollectorExportTraceServiceRequest; } });\nvar transformMetrics_1 = __webpack_require__(/*! ./transformMetrics */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js\");\nObject.defineProperty(exports, \"toCollectorExportMetricServiceRequest\", { enumerable: true, get: function () { return transformMetrics_1.toCollectorExportMetricServiceRequest; } });\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9pbmRleC5qcz9jM2U4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxhQUFhLG1CQUFPLENBQUMsb0hBQXlCO0FBQzlDLGFBQWEsbUJBQU8sQ0FBQyx3R0FBWTtBQUNqQyx5QkFBeUIsbUJBQU8sQ0FBQyxvRkFBUztBQUMxQyxrQkFBa0IsbUJBQU8sQ0FBQyw0RkFBYTtBQUN2Qyx3RUFBd0UscUNBQXFDLHlEQUF5RCxFQUFFLEVBQUU7QUFDMUsseUJBQXlCLG1CQUFPLENBQUMsMEdBQW9CO0FBQ3JELHlFQUF5RSxxQ0FBcUMsaUVBQWlFLEVBQUUsRUFBRTtBQUNuTCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9leHBvcnRlci1jb2xsZWN0b3IvYnVpbGQvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvQ29sbGVjdG9yRXhwb3J0TWV0cmljU2VydmljZVJlcXVlc3QgPSBleHBvcnRzLnRvQ29sbGVjdG9yRXhwb3J0VHJhY2VTZXJ2aWNlUmVxdWVzdCA9IGV4cG9ydHMuY29sbGVjdG9yVHlwZXMgPSB2b2lkIDA7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ29sbGVjdG9yRXhwb3J0ZXJCYXNlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wbGF0Zm9ybVwiKSwgZXhwb3J0cyk7XG5leHBvcnRzLmNvbGxlY3RvclR5cGVzID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG52YXIgdHJhbnNmb3JtXzEgPSByZXF1aXJlKFwiLi90cmFuc2Zvcm1cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b0NvbGxlY3RvckV4cG9ydFRyYWNlU2VydmljZVJlcXVlc3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRyYW5zZm9ybV8xLnRvQ29sbGVjdG9yRXhwb3J0VHJhY2VTZXJ2aWNlUmVxdWVzdDsgfSB9KTtcbnZhciB0cmFuc2Zvcm1NZXRyaWNzXzEgPSByZXF1aXJlKFwiLi90cmFuc2Zvcm1NZXRyaWNzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidG9Db2xsZWN0b3JFeHBvcnRNZXRyaWNTZXJ2aWNlUmVxdWVzdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHJhbnNmb3JtTWV0cmljc18xLnRvQ29sbGVjdG9yRXhwb3J0TWV0cmljU2VydmljZVJlcXVlc3Q7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorExporterBrowserBase = void 0;\nconst CollectorExporterBase_1 = __webpack_require__(/*! ../../CollectorExporterBase */ \"./node_modules/@opentelemetry/exporter-collector/build/src/CollectorExporterBase.js\");\nconst util_1 = __webpack_require__(/*! ../../util */ \"./node_modules/@opentelemetry/exporter-collector/build/src/util.js\");\nconst util_2 = __webpack_require__(/*! ./util */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/util.js\");\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/**\n * Collector Metric Exporter abstract base class\n */\nclass CollectorExporterBrowserBase extends CollectorExporterBase_1.CollectorExporterBase {\n    /**\n     * @param config\n     */\n    constructor(config = {}) {\n        super(config);\n        this._useXHR = false;\n        this._useXHR =\n            !!config.headers || typeof navigator.sendBeacon !== 'function';\n        if (this._useXHR) {\n            this._headers = util_1.parseHeaders(config.headers);\n        }\n        else {\n            this._headers = {};\n        }\n    }\n    onInit() {\n        window.addEventListener('unload', this.shutdown);\n    }\n    onShutdown() {\n        window.removeEventListener('unload', this.shutdown);\n    }\n    send(items, onSuccess, onError) {\n        if (this._isShutdown) {\n            api_1.diag.debug('Shutdown already started. Cannot send objects');\n            return;\n        }\n        const serviceRequest = this.convert(items);\n        const body = JSON.stringify(serviceRequest);\n        const promise = new Promise(resolve => {\n            const _onSuccess = () => {\n                onSuccess();\n                _onFinish();\n            };\n            const _onError = (error) => {\n                onError(error);\n                _onFinish();\n            };\n            const _onFinish = () => {\n                resolve();\n                const index = this._sendingPromises.indexOf(promise);\n                this._sendingPromises.splice(index, 1);\n            };\n            if (this._useXHR) {\n                util_2.sendWithXhr(body, this.url, this._headers, _onSuccess, _onError);\n            }\n            else {\n                util_2.sendWithBeacon(body, this.url, _onSuccess, _onError);\n            }\n        });\n        this._sendingPromises.push(promise);\n    }\n}\nexports.CollectorExporterBrowserBase = CollectorExporterBrowserBase;\n//# sourceMappingURL=CollectorExporterBrowserBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2UuanM/ZDAzZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsZ0NBQWdDLG1CQUFPLENBQUMsd0hBQTZCO0FBQ3JFLGVBQWUsbUJBQU8sQ0FBQyxzRkFBWTtBQUNuQyxlQUFlLG1CQUFPLENBQUMsbUdBQVE7QUFDL0IsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2UgPSB2b2lkIDA7XG5jb25zdCBDb2xsZWN0b3JFeHBvcnRlckJhc2VfMSA9IHJlcXVpcmUoXCIuLi8uLi9Db2xsZWN0b3JFeHBvcnRlckJhc2VcIik7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbFwiKTtcbmNvbnN0IHV0aWxfMiA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG4vKipcbiAqIENvbGxlY3RvciBNZXRyaWMgRXhwb3J0ZXIgYWJzdHJhY3QgYmFzZSBjbGFzc1xuICovXG5jbGFzcyBDb2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlIGV4dGVuZHMgQ29sbGVjdG9yRXhwb3J0ZXJCYXNlXzEuQ29sbGVjdG9yRXhwb3J0ZXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY29uZmlnXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICAgICAgc3VwZXIoY29uZmlnKTtcbiAgICAgICAgdGhpcy5fdXNlWEhSID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3VzZVhIUiA9XG4gICAgICAgICAgICAhIWNvbmZpZy5oZWFkZXJzIHx8IHR5cGVvZiBuYXZpZ2F0b3Iuc2VuZEJlYWNvbiAhPT0gJ2Z1bmN0aW9uJztcbiAgICAgICAgaWYgKHRoaXMuX3VzZVhIUikge1xuICAgICAgICAgICAgdGhpcy5faGVhZGVycyA9IHV0aWxfMS5wYXJzZUhlYWRlcnMoY29uZmlnLmhlYWRlcnMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5faGVhZGVycyA9IHt9O1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uSW5pdCgpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3VubG9hZCcsIHRoaXMuc2h1dGRvd24pO1xuICAgIH1cbiAgICBvblNodXRkb3duKCkge1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndW5sb2FkJywgdGhpcy5zaHV0ZG93bik7XG4gICAgfVxuICAgIHNlbmQoaXRlbXMsIG9uU3VjY2Vzcywgb25FcnJvcikge1xuICAgICAgICBpZiAodGhpcy5faXNTaHV0ZG93bikge1xuICAgICAgICAgICAgYXBpXzEuZGlhZy5kZWJ1ZygnU2h1dGRvd24gYWxyZWFkeSBzdGFydGVkLiBDYW5ub3Qgc2VuZCBvYmplY3RzJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2VydmljZVJlcXVlc3QgPSB0aGlzLmNvbnZlcnQoaXRlbXMpO1xuICAgICAgICBjb25zdCBib2R5ID0gSlNPTi5zdHJpbmdpZnkoc2VydmljZVJlcXVlc3QpO1xuICAgICAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgICBjb25zdCBfb25TdWNjZXNzID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIG9uU3VjY2VzcygpO1xuICAgICAgICAgICAgICAgIF9vbkZpbmlzaCgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IF9vbkVycm9yID0gKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgb25FcnJvcihlcnJvcik7XG4gICAgICAgICAgICAgICAgX29uRmluaXNoKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgX29uRmluaXNoID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX3NlbmRpbmdQcm9taXNlcy5pbmRleE9mKHByb21pc2UpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3NlbmRpbmdQcm9taXNlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmICh0aGlzLl91c2VYSFIpIHtcbiAgICAgICAgICAgICAgICB1dGlsXzIuc2VuZFdpdGhYaHIoYm9keSwgdGhpcy51cmwsIHRoaXMuX2hlYWRlcnMsIF9vblN1Y2Nlc3MsIF9vbkVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHV0aWxfMi5zZW5kV2l0aEJlYWNvbihib2R5LCB0aGlzLnVybCwgX29uU3VjY2VzcywgX29uRXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fc2VuZGluZ1Byb21pc2VzLnB1c2gocHJvbWlzZSk7XG4gICAgfVxufVxuZXhwb3J0cy5Db2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlID0gQ29sbGVjdG9yRXhwb3J0ZXJCcm93c2VyQmFzZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorMetricExporter.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorMetricExporter.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorMetricExporter = void 0;\nconst CollectorExporterBrowserBase_1 = __webpack_require__(/*! ./CollectorExporterBrowserBase */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js\");\nconst transformMetrics_1 = __webpack_require__(/*! ../../transformMetrics */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js\");\nconst DEFAULT_COLLECTOR_URL = 'http://localhost:55681/v1/metrics';\nconst DEFAULT_SERVICE_NAME = 'collector-metric-exporter';\n/**\n * Collector Metric Exporter for Web\n */\nclass CollectorMetricExporter extends CollectorExporterBrowserBase_1.CollectorExporterBrowserBase {\n    constructor() {\n        super(...arguments);\n        // Converts time to nanoseconds\n        this._startTime = new Date().getTime() * 1000000;\n    }\n    convert(metrics) {\n        return transformMetrics_1.toCollectorExportMetricServiceRequest(metrics, this._startTime, this);\n    }\n    getDefaultUrl(config) {\n        return config.url || DEFAULT_COLLECTOR_URL;\n    }\n    getDefaultServiceName(config) {\n        return config.serviceName || DEFAULT_SERVICE_NAME;\n    }\n}\nexports.CollectorMetricExporter = CollectorMetricExporter;\n//# sourceMappingURL=CollectorMetricExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3Rvck1ldHJpY0V4cG9ydGVyLmpzPzU5MmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLHVDQUF1QyxtQkFBTyxDQUFDLG1KQUFnQztBQUMvRSwyQkFBMkIsbUJBQU8sQ0FBQyw4R0FBd0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9leHBvcnRlci1jb2xsZWN0b3IvYnVpbGQvc3JjL3BsYXRmb3JtL2Jyb3dzZXIvQ29sbGVjdG9yTWV0cmljRXhwb3J0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbGxlY3Rvck1ldHJpY0V4cG9ydGVyID0gdm9pZCAwO1xuY29uc3QgQ29sbGVjdG9yRXhwb3J0ZXJCcm93c2VyQmFzZV8xID0gcmVxdWlyZShcIi4vQ29sbGVjdG9yRXhwb3J0ZXJCcm93c2VyQmFzZVwiKTtcbmNvbnN0IHRyYW5zZm9ybU1ldHJpY3NfMSA9IHJlcXVpcmUoXCIuLi8uLi90cmFuc2Zvcm1NZXRyaWNzXCIpO1xuY29uc3QgREVGQVVMVF9DT0xMRUNUT1JfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTU2ODEvdjEvbWV0cmljcyc7XG5jb25zdCBERUZBVUxUX1NFUlZJQ0VfTkFNRSA9ICdjb2xsZWN0b3ItbWV0cmljLWV4cG9ydGVyJztcbi8qKlxuICogQ29sbGVjdG9yIE1ldHJpYyBFeHBvcnRlciBmb3IgV2ViXG4gKi9cbmNsYXNzIENvbGxlY3Rvck1ldHJpY0V4cG9ydGVyIGV4dGVuZHMgQ29sbGVjdG9yRXhwb3J0ZXJCcm93c2VyQmFzZV8xLkNvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICAvLyBDb252ZXJ0cyB0aW1lIHRvIG5hbm9zZWNvbmRzXG4gICAgICAgIHRoaXMuX3N0YXJ0VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpICogMTAwMDAwMDtcbiAgICB9XG4gICAgY29udmVydChtZXRyaWNzKSB7XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm1NZXRyaWNzXzEudG9Db2xsZWN0b3JFeHBvcnRNZXRyaWNTZXJ2aWNlUmVxdWVzdChtZXRyaWNzLCB0aGlzLl9zdGFydFRpbWUsIHRoaXMpO1xuICAgIH1cbiAgICBnZXREZWZhdWx0VXJsKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gY29uZmlnLnVybCB8fCBERUZBVUxUX0NPTExFQ1RPUl9VUkw7XG4gICAgfVxuICAgIGdldERlZmF1bHRTZXJ2aWNlTmFtZShjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIGNvbmZpZy5zZXJ2aWNlTmFtZSB8fCBERUZBVUxUX1NFUlZJQ0VfTkFNRTtcbiAgICB9XG59XG5leHBvcnRzLkNvbGxlY3Rvck1ldHJpY0V4cG9ydGVyID0gQ29sbGVjdG9yTWV0cmljRXhwb3J0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db2xsZWN0b3JNZXRyaWNFeHBvcnRlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorMetricExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorTraceExporter.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorTraceExporter.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectorTraceExporter = void 0;\nconst CollectorExporterBrowserBase_1 = __webpack_require__(/*! ./CollectorExporterBrowserBase */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorExporterBrowserBase.js\");\nconst transform_1 = __webpack_require__(/*! ../../transform */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transform.js\");\nconst DEFAULT_SERVICE_NAME = 'collector-trace-exporter';\nconst DEFAULT_COLLECTOR_URL = 'http://localhost:55681/v1/trace';\n/**\n * Collector Trace Exporter for Web\n */\nclass CollectorTraceExporter extends CollectorExporterBrowserBase_1.CollectorExporterBrowserBase {\n    convert(spans) {\n        return transform_1.toCollectorExportTraceServiceRequest(spans, this, true);\n    }\n    getDefaultUrl(config) {\n        return config.url || DEFAULT_COLLECTOR_URL;\n    }\n    getDefaultServiceName(config) {\n        return config.serviceName || DEFAULT_SERVICE_NAME;\n    }\n}\nexports.CollectorTraceExporter = CollectorTraceExporter;\n//# sourceMappingURL=CollectorTraceExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3RvclRyYWNlRXhwb3J0ZXIuanM/MDY3MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsdUNBQXVDLG1CQUFPLENBQUMsbUpBQWdDO0FBQy9FLG9CQUFvQixtQkFBTyxDQUFDLGdHQUFpQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL0NvbGxlY3RvclRyYWNlRXhwb3J0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbGxlY3RvclRyYWNlRXhwb3J0ZXIgPSB2b2lkIDA7XG5jb25zdCBDb2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlXzEgPSByZXF1aXJlKFwiLi9Db2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlXCIpO1xuY29uc3QgdHJhbnNmb3JtXzEgPSByZXF1aXJlKFwiLi4vLi4vdHJhbnNmb3JtXCIpO1xuY29uc3QgREVGQVVMVF9TRVJWSUNFX05BTUUgPSAnY29sbGVjdG9yLXRyYWNlLWV4cG9ydGVyJztcbmNvbnN0IERFRkFVTFRfQ09MTEVDVE9SX1VSTCA9ICdodHRwOi8vbG9jYWxob3N0OjU1NjgxL3YxL3RyYWNlJztcbi8qKlxuICogQ29sbGVjdG9yIFRyYWNlIEV4cG9ydGVyIGZvciBXZWJcbiAqL1xuY2xhc3MgQ29sbGVjdG9yVHJhY2VFeHBvcnRlciBleHRlbmRzIENvbGxlY3RvckV4cG9ydGVyQnJvd3NlckJhc2VfMS5Db2xsZWN0b3JFeHBvcnRlckJyb3dzZXJCYXNlIHtcbiAgICBjb252ZXJ0KHNwYW5zKSB7XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm1fMS50b0NvbGxlY3RvckV4cG9ydFRyYWNlU2VydmljZVJlcXVlc3Qoc3BhbnMsIHRoaXMsIHRydWUpO1xuICAgIH1cbiAgICBnZXREZWZhdWx0VXJsKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gY29uZmlnLnVybCB8fCBERUZBVUxUX0NPTExFQ1RPUl9VUkw7XG4gICAgfVxuICAgIGdldERlZmF1bHRTZXJ2aWNlTmFtZShjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIGNvbmZpZy5zZXJ2aWNlTmFtZSB8fCBERUZBVUxUX1NFUlZJQ0VfTkFNRTtcbiAgICB9XG59XG5leHBvcnRzLkNvbGxlY3RvclRyYWNlRXhwb3J0ZXIgPSBDb2xsZWN0b3JUcmFjZUV4cG9ydGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29sbGVjdG9yVHJhY2VFeHBvcnRlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorTraceExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/index.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./CollectorTraceExporter */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorTraceExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CollectorMetricExporter */ \"./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/CollectorMetricExporter.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzP2ZiNDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxhQUFhLG1CQUFPLENBQUMsdUlBQTBCO0FBQy9DLGFBQWEsbUJBQU8sQ0FBQyx5SUFBMkI7QUFDaEQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ29sbGVjdG9yVHJhY2VFeHBvcnRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ29sbGVjdG9yTWV0cmljRXhwb3J0ZXJcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/util.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/util.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendWithXhr = exports.sendWithBeacon = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst collectorTypes = __webpack_require__(/*! ../../types */ \"./node_modules/@opentelemetry/exporter-collector/build/src/types.js\");\n/**\n * Send metrics/spans using browser navigator.sendBeacon\n * @param body\n * @param onSuccess\n * @param onError\n */\nfunction sendWithBeacon(body, url, onSuccess, onError) {\n    if (navigator.sendBeacon(url, body)) {\n        api_1.diag.debug('sendBeacon - can send', body);\n        onSuccess();\n    }\n    else {\n        const error = new collectorTypes.CollectorExporterError(`sendBeacon - cannot send ${body}`);\n        onError(error);\n    }\n}\nexports.sendWithBeacon = sendWithBeacon;\n/**\n * function to send metrics/spans using browser XMLHttpRequest\n *     used when navigator.sendBeacon is not available\n * @param body\n * @param onSuccess\n * @param onError\n */\nfunction sendWithXhr(body, url, headers, onSuccess, onError) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n    xhr.setRequestHeader('Accept', 'application/json');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    Object.entries(headers).forEach(([k, v]) => {\n        xhr.setRequestHeader(k, v);\n    });\n    xhr.send(body);\n    xhr.onreadystatechange = () => {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                api_1.diag.debug('xhr success', body);\n                onSuccess();\n            }\n            else {\n                const error = new collectorTypes.CollectorExporterError(`Failed to export with XHR (status: ${xhr.status})`, xhr.status);\n                onError(error);\n            }\n        }\n    };\n}\nexports.sendWithXhr = sendWithXhr;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL3V0aWwuanM/N2M3NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQyx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBYTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RkFBNEYsS0FBSztBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhHQUE4RyxXQUFXO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2V4cG9ydGVyLWNvbGxlY3Rvci9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci91dGlsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNlbmRXaXRoWGhyID0gZXhwb3J0cy5zZW5kV2l0aEJlYWNvbiA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBjb2xsZWN0b3JUeXBlcyA9IHJlcXVpcmUoXCIuLi8uLi90eXBlc1wiKTtcbi8qKlxuICogU2VuZCBtZXRyaWNzL3NwYW5zIHVzaW5nIGJyb3dzZXIgbmF2aWdhdG9yLnNlbmRCZWFjb25cbiAqIEBwYXJhbSBib2R5XG4gKiBAcGFyYW0gb25TdWNjZXNzXG4gKiBAcGFyYW0gb25FcnJvclxuICovXG5mdW5jdGlvbiBzZW5kV2l0aEJlYWNvbihib2R5LCB1cmwsIG9uU3VjY2Vzcywgb25FcnJvcikge1xuICAgIGlmIChuYXZpZ2F0b3Iuc2VuZEJlYWNvbih1cmwsIGJvZHkpKSB7XG4gICAgICAgIGFwaV8xLmRpYWcuZGVidWcoJ3NlbmRCZWFjb24gLSBjYW4gc2VuZCcsIGJvZHkpO1xuICAgICAgICBvblN1Y2Nlc3MoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IGNvbGxlY3RvclR5cGVzLkNvbGxlY3RvckV4cG9ydGVyRXJyb3IoYHNlbmRCZWFjb24gLSBjYW5ub3Qgc2VuZCAke2JvZHl9YCk7XG4gICAgICAgIG9uRXJyb3IoZXJyb3IpO1xuICAgIH1cbn1cbmV4cG9ydHMuc2VuZFdpdGhCZWFjb24gPSBzZW5kV2l0aEJlYWNvbjtcbi8qKlxuICogZnVuY3Rpb24gdG8gc2VuZCBtZXRyaWNzL3NwYW5zIHVzaW5nIGJyb3dzZXIgWE1MSHR0cFJlcXVlc3RcbiAqICAgICB1c2VkIHdoZW4gbmF2aWdhdG9yLnNlbmRCZWFjb24gaXMgbm90IGF2YWlsYWJsZVxuICogQHBhcmFtIGJvZHlcbiAqIEBwYXJhbSBvblN1Y2Nlc3NcbiAqIEBwYXJhbSBvbkVycm9yXG4gKi9cbmZ1bmN0aW9uIHNlbmRXaXRoWGhyKGJvZHksIHVybCwgaGVhZGVycywgb25TdWNjZXNzLCBvbkVycm9yKSB7XG4gICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgeGhyLm9wZW4oJ1BPU1QnLCB1cmwpO1xuICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdBY2NlcHQnLCAnYXBwbGljYXRpb24vanNvbicpO1xuICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpO1xuICAgIE9iamVjdC5lbnRyaWVzKGhlYWRlcnMpLmZvckVhY2goKFtrLCB2XSkgPT4ge1xuICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihrLCB2KTtcbiAgICB9KTtcbiAgICB4aHIuc2VuZChib2R5KTtcbiAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gKCkgPT4ge1xuICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IFhNTEh0dHBSZXF1ZXN0LkRPTkUpIHtcbiAgICAgICAgICAgIGlmICh4aHIuc3RhdHVzID49IDIwMCAmJiB4aHIuc3RhdHVzIDw9IDI5OSkge1xuICAgICAgICAgICAgICAgIGFwaV8xLmRpYWcuZGVidWcoJ3hociBzdWNjZXNzJywgYm9keSk7XG4gICAgICAgICAgICAgICAgb25TdWNjZXNzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBjb2xsZWN0b3JUeXBlcy5Db2xsZWN0b3JFeHBvcnRlckVycm9yKGBGYWlsZWQgdG8gZXhwb3J0IHdpdGggWEhSIChzdGF0dXM6ICR7eGhyLnN0YXR1c30pYCwgeGhyLnN0YXR1cyk7XG4gICAgICAgICAgICAgICAgb25FcnJvcihlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xufVxuZXhwb3J0cy5zZW5kV2l0aFhociA9IHNlbmRXaXRoWGhyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/platform/browser/util.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/transform.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/transform.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.groupSpansByResourceAndLibrary = exports.toCollectorExportTraceServiceRequest = exports.toCollectorTraceState = exports.toCollectorKind = exports.toCollectorResource = exports.toCollectorStatus = exports.toCollectorSpan = exports.toCollectorEvents = exports.toCollectorAnyValue = exports.toCollectorAttributeKeyValue = exports.toCollectorKeyValueList = exports.toCollectorArrayValue = exports.toCollectorAttributes = void 0;\nconst core = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/exporter-collector/build/src/types.js\");\nconst MAX_INTEGER_VALUE = 2147483647;\nconst MIN_INTEGER_VALUE = -2147483648;\n/**\n * Converts attributes to KeyValue array\n * @param attributes\n */\nfunction toCollectorAttributes(attributes) {\n    return Object.keys(attributes).map(key => {\n        return toCollectorAttributeKeyValue(key, attributes[key]);\n    });\n}\nexports.toCollectorAttributes = toCollectorAttributes;\n/**\n * Converts array of unknown value to ArrayValue\n * @param values\n */\nfunction toCollectorArrayValue(values) {\n    return {\n        values: values.map(value => toCollectorAnyValue(value)),\n    };\n}\nexports.toCollectorArrayValue = toCollectorArrayValue;\n/**\n * Converts attributes to KeyValueList\n * @param attributes\n */\nfunction toCollectorKeyValueList(attributes) {\n    return {\n        values: toCollectorAttributes(attributes),\n    };\n}\nexports.toCollectorKeyValueList = toCollectorKeyValueList;\n/**\n * Converts key and unknown value to KeyValue\n * @param value event value\n */\nfunction toCollectorAttributeKeyValue(key, value) {\n    const anyValue = toCollectorAnyValue(value);\n    return {\n        key,\n        value: anyValue,\n    };\n}\nexports.toCollectorAttributeKeyValue = toCollectorAttributeKeyValue;\n/**\n * Converts unknown value to AnyValue\n * @param value\n */\nfunction toCollectorAnyValue(value) {\n    const anyValue = {};\n    if (typeof value === 'string') {\n        anyValue.stringValue = value;\n    }\n    else if (typeof value === 'boolean') {\n        anyValue.boolValue = value;\n    }\n    else if (typeof value === 'number' &&\n        value <= MAX_INTEGER_VALUE &&\n        value >= MIN_INTEGER_VALUE &&\n        Number.isInteger(value)) {\n        anyValue.intValue = value;\n    }\n    else if (typeof value === 'number') {\n        anyValue.doubleValue = value;\n    }\n    else if (Array.isArray(value)) {\n        anyValue.arrayValue = toCollectorArrayValue(value);\n    }\n    else if (value) {\n        anyValue.kvlistValue = toCollectorKeyValueList(value);\n    }\n    return anyValue;\n}\nexports.toCollectorAnyValue = toCollectorAnyValue;\n/**\n *\n * Converts events\n * @param events array of events\n */\nfunction toCollectorEvents(timedEvents) {\n    return timedEvents.map(timedEvent => {\n        const timeUnixNano = core.hrTimeToNanoseconds(timedEvent.time);\n        const name = timedEvent.name;\n        const attributes = toCollectorAttributes(timedEvent.attributes || {});\n        const droppedAttributesCount = 0;\n        const protoEvent = {\n            timeUnixNano,\n            name,\n            attributes,\n            droppedAttributesCount,\n        };\n        return protoEvent;\n    });\n}\nexports.toCollectorEvents = toCollectorEvents;\n/**\n * Converts links\n * @param span\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorLinks(span, useHex) {\n    return span.links.map((link) => {\n        const protoLink = {\n            traceId: useHex\n                ? link.context.traceId\n                : core.hexToBase64(link.context.traceId),\n            spanId: useHex\n                ? link.context.spanId\n                : core.hexToBase64(link.context.spanId),\n            attributes: toCollectorAttributes(link.attributes || {}),\n            droppedAttributesCount: 0,\n        };\n        return protoLink;\n    });\n}\n/**\n * Converts span\n * @param span\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorSpan(span, useHex) {\n    return {\n        traceId: useHex\n            ? span.spanContext.traceId\n            : core.hexToBase64(span.spanContext.traceId),\n        spanId: useHex\n            ? span.spanContext.spanId\n            : core.hexToBase64(span.spanContext.spanId),\n        parentSpanId: span.parentSpanId\n            ? useHex\n                ? span.parentSpanId\n                : core.hexToBase64(span.parentSpanId)\n            : undefined,\n        traceState: toCollectorTraceState(span.spanContext.traceState),\n        name: span.name,\n        kind: toCollectorKind(span.kind),\n        startTimeUnixNano: core.hrTimeToNanoseconds(span.startTime),\n        endTimeUnixNano: core.hrTimeToNanoseconds(span.endTime),\n        attributes: toCollectorAttributes(span.attributes),\n        droppedAttributesCount: 0,\n        events: toCollectorEvents(span.events),\n        droppedEventsCount: 0,\n        status: toCollectorStatus(span.status),\n        links: toCollectorLinks(span, useHex),\n        droppedLinksCount: 0,\n    };\n}\nexports.toCollectorSpan = toCollectorSpan;\n/**\n * Converts status\n * @param status\n */\nfunction toCollectorStatus(status) {\n    const spanStatus = {\n        code: status.code,\n    };\n    if (typeof status.message !== 'undefined') {\n        spanStatus.message = status.message;\n    }\n    return spanStatus;\n}\nexports.toCollectorStatus = toCollectorStatus;\n/**\n * Converts resource\n * @param resource\n * @param additionalAttributes\n */\nfunction toCollectorResource(resource, additionalAttributes = {}) {\n    const attr = Object.assign({}, additionalAttributes, resource ? resource.attributes : {});\n    const resourceProto = {\n        attributes: toCollectorAttributes(attr),\n        droppedAttributesCount: 0,\n    };\n    return resourceProto;\n}\nexports.toCollectorResource = toCollectorResource;\n/**\n * Converts span kind\n * @param kind\n */\nfunction toCollectorKind(kind) {\n    const collectorKind = types_1.COLLECTOR_SPAN_KIND_MAPPING[kind];\n    return typeof collectorKind === 'number'\n        ? collectorKind\n        : types_1.opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_UNSPECIFIED;\n}\nexports.toCollectorKind = toCollectorKind;\n/**\n * Converts traceState\n * @param traceState\n */\nfunction toCollectorTraceState(traceState) {\n    if (!traceState)\n        return undefined;\n    return traceState.serialize();\n}\nexports.toCollectorTraceState = toCollectorTraceState;\n/**\n * Prepares trace service request to be sent to collector\n * @param spans spans\n * @param collectorExporterBase\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorExportTraceServiceRequest(spans, collectorTraceExporterBase, useHex) {\n    const groupedSpans = groupSpansByResourceAndLibrary(spans);\n    const additionalAttributes = Object.assign({}, collectorTraceExporterBase.attributes, {\n        'service.name': collectorTraceExporterBase.serviceName,\n    });\n    return {\n        resourceSpans: toCollectorResourceSpans(groupedSpans, additionalAttributes, useHex),\n    };\n}\nexports.toCollectorExportTraceServiceRequest = toCollectorExportTraceServiceRequest;\n/**\n * Takes an array of spans and groups them by resource and instrumentation\n * library\n * @param spans spans\n */\nfunction groupSpansByResourceAndLibrary(spans) {\n    return spans.reduce((spanMap, span) => {\n        //group by resource\n        let resourceSpans = spanMap.get(span.resource);\n        if (!resourceSpans) {\n            resourceSpans = new Map();\n            spanMap.set(span.resource, resourceSpans);\n        }\n        //group by instrumentation library\n        let libSpans = resourceSpans.get(span.instrumentationLibrary);\n        if (!libSpans) {\n            libSpans = new Array();\n            resourceSpans.set(span.instrumentationLibrary, libSpans);\n        }\n        libSpans.push(span);\n        return spanMap;\n    }, new Map());\n}\nexports.groupSpansByResourceAndLibrary = groupSpansByResourceAndLibrary;\n/**\n * Convert to InstrumentationLibrarySpans\n * @param instrumentationLibrary\n * @param spans\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorInstrumentationLibrarySpans(instrumentationLibrary, spans, useHex) {\n    return {\n        spans: spans.map(span => toCollectorSpan(span, useHex)),\n        instrumentationLibrary,\n    };\n}\n/**\n * Returns a list of resource spans which will be exported to the collector\n * @param groupedSpans\n * @param baseAttributes\n * @param useHex - if ids should be kept as hex without converting to base64\n */\nfunction toCollectorResourceSpans(groupedSpans, baseAttributes, useHex) {\n    return Array.from(groupedSpans, ([resource, libSpans]) => {\n        return {\n            resource: toCollectorResource(resource, baseAttributes),\n            instrumentationLibrarySpans: Array.from(libSpans, ([instrumentationLibrary, spans]) => toCollectorInstrumentationLibrarySpans(instrumentationLibrary, spans, useHex)),\n        };\n    });\n}\n//# sourceMappingURL=transform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/transform.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.groupMetricsByResourceAndLibrary = exports.toCollectorExportMetricServiceRequest = exports.toCollectorMetric = exports.toHistogramPoint = exports.toDataPoint = exports.toAggregationTemporality = exports.toCollectorLabels = void 0;\nconst api_metrics_1 = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst core = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst metrics_1 = __webpack_require__(/*! @opentelemetry/metrics */ \"./node_modules/@opentelemetry/metrics/build/src/index.js\");\nconst transform_1 = __webpack_require__(/*! ./transform */ \"./node_modules/@opentelemetry/exporter-collector/build/src/transform.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/exporter-collector/build/src/types.js\");\n/**\n * Converts labels\n * @param labels\n */\nfunction toCollectorLabels(labels) {\n    return Object.entries(labels).map(([key, value]) => {\n        return { key, value: String(value) };\n    });\n}\nexports.toCollectorLabels = toCollectorLabels;\n/**\n * Given a MetricDescriptor, return its temporality in a compatible format with the collector\n * @param descriptor\n */\nfunction toAggregationTemporality(metric) {\n    if (metric.descriptor.metricKind === metrics_1.MetricKind.COUNTER ||\n        metric.descriptor.metricKind === metrics_1.MetricKind.UP_DOWN_COUNTER) {\n        return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n            .AGGREGATION_TEMPORALITY_DELTA;\n    }\n    if (metric.descriptor.metricKind === metrics_1.MetricKind.SUM_OBSERVER ||\n        metric.descriptor.metricKind === metrics_1.MetricKind.UP_DOWN_SUM_OBSERVER) {\n        return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n            .AGGREGATION_TEMPORALITY_CUMULATIVE;\n    }\n    if (metric.descriptor.metricKind === metrics_1.MetricKind.VALUE_OBSERVER) {\n        return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n            .AGGREGATION_TEMPORALITY_UNSPECIFIED;\n    }\n    // until spec is resolved keep it as unspecified\n    if (metric.descriptor.metricKind === metrics_1.MetricKind.VALUE_RECORDER) {\n        return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n            .AGGREGATION_TEMPORALITY_CUMULATIVE;\n    }\n    return types_1.opentelemetryProto.metrics.v1.AggregationTemporality\n        .AGGREGATION_TEMPORALITY_UNSPECIFIED;\n}\nexports.toAggregationTemporality = toAggregationTemporality;\n/**\n * Returns an DataPoint which can have integers or doublle values\n * @param metric\n * @param startTime\n */\nfunction toDataPoint(metric, startTime) {\n    return {\n        labels: toCollectorLabels(metric.labels),\n        value: metric.aggregator.toPoint().value,\n        startTimeUnixNano: startTime,\n        timeUnixNano: core.hrTimeToNanoseconds(metric.aggregator.toPoint().timestamp),\n    };\n}\nexports.toDataPoint = toDataPoint;\n/**\n * Returns a HistogramPoint to the collector\n * @param metric\n * @param startTime\n */\nfunction toHistogramPoint(metric, startTime) {\n    const { value, timestamp } = metric.aggregator.toPoint();\n    return {\n        labels: toCollectorLabels(metric.labels),\n        sum: value.sum,\n        count: value.count,\n        startTimeUnixNano: startTime,\n        timeUnixNano: core.hrTimeToNanoseconds(timestamp),\n        bucketCounts: value.buckets.counts,\n        explicitBounds: value.buckets.boundaries,\n    };\n}\nexports.toHistogramPoint = toHistogramPoint;\n/**\n * Converts a metric to be compatible with the collector\n * @param metric\n * @param startTime start time in nanoseconds\n */\nfunction toCollectorMetric(metric, startTime) {\n    const metricCollector = {\n        name: metric.descriptor.name,\n        description: metric.descriptor.description,\n        unit: metric.descriptor.unit,\n    };\n    if (metric.aggregator.kind === metrics_1.AggregatorKind.SUM ||\n        metric.descriptor.metricKind === metrics_1.MetricKind.SUM_OBSERVER ||\n        metric.descriptor.metricKind === metrics_1.MetricKind.UP_DOWN_SUM_OBSERVER) {\n        const result = {\n            dataPoints: [toDataPoint(metric, startTime)],\n            isMonotonic: metric.descriptor.metricKind === metrics_1.MetricKind.COUNTER ||\n                metric.descriptor.metricKind === metrics_1.MetricKind.SUM_OBSERVER,\n            aggregationTemporality: toAggregationTemporality(metric),\n        };\n        if (metric.descriptor.valueType === api_metrics_1.ValueType.INT) {\n            metricCollector.intSum = result;\n        }\n        else {\n            metricCollector.doubleSum = result;\n        }\n    }\n    else if (metric.aggregator.kind === metrics_1.AggregatorKind.LAST_VALUE) {\n        const result = {\n            dataPoints: [toDataPoint(metric, startTime)],\n        };\n        if (metric.descriptor.valueType === api_metrics_1.ValueType.INT) {\n            metricCollector.intGauge = result;\n        }\n        else {\n            metricCollector.doubleGauge = result;\n        }\n    }\n    else if (metric.aggregator.kind === metrics_1.AggregatorKind.HISTOGRAM) {\n        const result = {\n            dataPoints: [toHistogramPoint(metric, startTime)],\n            aggregationTemporality: toAggregationTemporality(metric),\n        };\n        if (metric.descriptor.valueType === api_metrics_1.ValueType.INT) {\n            metricCollector.intHistogram = result;\n        }\n        else {\n            metricCollector.doubleHistogram = result;\n        }\n    }\n    return metricCollector;\n}\nexports.toCollectorMetric = toCollectorMetric;\n/**\n * Prepares metric service request to be sent to collector\n * @param metrics metrics\n * @param startTime start time of the metric in nanoseconds\n * @param collectorMetricExporterBase\n */\nfunction toCollectorExportMetricServiceRequest(metrics, startTime, collectorExporterBase) {\n    const groupedMetrics = groupMetricsByResourceAndLibrary(metrics);\n    const additionalAttributes = Object.assign({}, collectorExporterBase.attributes, {\n        'service.name': collectorExporterBase.serviceName,\n    });\n    return {\n        resourceMetrics: toCollectorResourceMetrics(groupedMetrics, additionalAttributes, startTime),\n    };\n}\nexports.toCollectorExportMetricServiceRequest = toCollectorExportMetricServiceRequest;\n/**\n * Takes an array of metrics and groups them by resource and instrumentation\n * library\n * @param metrics metrics\n */\nfunction groupMetricsByResourceAndLibrary(metrics) {\n    return metrics.reduce((metricMap, metric) => {\n        //group by resource\n        let resourceMetrics = metricMap.get(metric.resource);\n        if (!resourceMetrics) {\n            resourceMetrics = new Map();\n            metricMap.set(metric.resource, resourceMetrics);\n        }\n        //group by instrumentation library\n        let libMetrics = resourceMetrics.get(metric.instrumentationLibrary);\n        if (!libMetrics) {\n            libMetrics = new Array();\n            resourceMetrics.set(metric.instrumentationLibrary, libMetrics);\n        }\n        libMetrics.push(metric);\n        return metricMap;\n    }, new Map());\n}\nexports.groupMetricsByResourceAndLibrary = groupMetricsByResourceAndLibrary;\n/**\n * Convert to InstrumentationLibraryMetrics\n * @param instrumentationLibrary\n * @param metrics\n * @param startTime\n */\nfunction toCollectorInstrumentationLibraryMetrics(instrumentationLibrary, metrics, startTime) {\n    return {\n        metrics: metrics.map(metric => toCollectorMetric(metric, startTime)),\n        instrumentationLibrary,\n    };\n}\n/**\n * Returns a list of resource metrics which will be exported to the collector\n * @param groupedSpans\n * @param baseAttributes\n */\nfunction toCollectorResourceMetrics(groupedMetrics, baseAttributes, startTime) {\n    return Array.from(groupedMetrics, ([resource, libMetrics]) => {\n        return {\n            resource: transform_1.toCollectorResource(resource, baseAttributes),\n            instrumentationLibraryMetrics: Array.from(libMetrics, ([instrumentationLibrary, metrics]) => toCollectorInstrumentationLibraryMetrics(instrumentationLibrary, metrics, startTime)),\n        };\n    });\n}\n//# sourceMappingURL=transformMetrics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/transformMetrics.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/types.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/types.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.COLLECTOR_SPAN_KIND_MAPPING = exports.CollectorExporterError = exports.opentelemetryProto = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nvar opentelemetryProto;\n(function (opentelemetryProto) {\n    let metrics;\n    (function (metrics) {\n        let v1;\n        (function (v1) {\n            let AggregationTemporality;\n            (function (AggregationTemporality) {\n                // UNSPECIFIED is the default AggregationTemporality, it MUST not be used.\n                AggregationTemporality[AggregationTemporality[\"AGGREGATION_TEMPORALITY_UNSPECIFIED\"] = 0] = \"AGGREGATION_TEMPORALITY_UNSPECIFIED\";\n                // DELTA is an AggregationTemporality for a metric aggregator which reports\n                // changes since last report time. Successive metrics contain aggregation of\n                // values from continuous and non-overlapping intervals.\n                //\n                // The values for a DELTA metric are based only on the time interval\n                // associated with one measurement cycle. There is no dependency on\n                // previous measurements like is the case for CUMULATIVE metrics.\n                //\n                // For example, consider a system measuring the number of requests that\n                // it receives and reports the sum of these requests every second as a\n                // DELTA metric:\n                //\n                //   1. The system starts receiving at time=t_0.\n                //   2. A request is received, the system measures 1 request.\n                //   3. A request is received, the system measures 1 request.\n                //   4. A request is received, the system measures 1 request.\n                //   5. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_0 to\n                //      t_0+1 with a value of 3.\n                //   6. A request is received, the system measures 1 request.\n                //   7. A request is received, the system measures 1 request.\n                //   8. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_0+1 to\n                //      t_0+2 with a value of 2.\n                AggregationTemporality[AggregationTemporality[\"AGGREGATION_TEMPORALITY_DELTA\"] = 1] = \"AGGREGATION_TEMPORALITY_DELTA\";\n                // CUMULATIVE is an AggregationTemporality for a metric aggregator which\n                // reports changes since a fixed start time. This means that current values\n                // of a CUMULATIVE metric depend on all previous measurements since the\n                // start time. Because of this, the sender is required to retain this state\n                // in some form. If this state is lost or invalidated, the CUMULATIVE metric\n                // values MUST be reset and a new fixed start time following the last\n                // reported measurement time sent MUST be used.\n                //\n                // For example, consider a system measuring the number of requests that\n                // it receives and reports the sum of these requests every second as a\n                // CUMULATIVE metric:\n                //\n                //   1. The system starts receiving at time=t_0.\n                //   2. A request is received, the system measures 1 request.\n                //   3. A request is received, the system measures 1 request.\n                //   4. A request is received, the system measures 1 request.\n                //   5. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_0 to\n                //      t_0+1 with a value of 3.\n                //   6. A request is received, the system measures 1 request.\n                //   7. A request is received, the system measures 1 request.\n                //   8. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_0 to\n                //      t_0+2 with a value of 5.\n                //   9. The system experiences a fault and loses state.\n                //   10. The system recovers and resumes receiving at time=t_1.\n                //   11. A request is received, the system measures 1 request.\n                //   12. The 1 second collection cycle ends. A metric is exported for the\n                //      number of requests received over the interval of time t_1 to\n                //      t_0+1 with a value of 1.\n                //\n                // Note: Even though, when reporting changes since last report time, using\n                // CUMULATIVE is valid, it is not recommended. This may cause problems for\n                // systems that do not use start_time to determine when the aggregation\n                // value was reset (e.g. Prometheus).\n                AggregationTemporality[AggregationTemporality[\"AGGREGATION_TEMPORALITY_CUMULATIVE\"] = 2] = \"AGGREGATION_TEMPORALITY_CUMULATIVE\";\n            })(AggregationTemporality = v1.AggregationTemporality || (v1.AggregationTemporality = {}));\n        })(v1 = metrics.v1 || (metrics.v1 = {}));\n    })(metrics = opentelemetryProto.metrics || (opentelemetryProto.metrics = {}));\n    let trace;\n    (function (trace) {\n        let v1;\n        (function (v1) {\n            let ConstantSampler;\n            (function (ConstantSampler) {\n                let ConstantDecision;\n                (function (ConstantDecision) {\n                    ConstantDecision[ConstantDecision[\"ALWAYS_OFF\"] = 0] = \"ALWAYS_OFF\";\n                    ConstantDecision[ConstantDecision[\"ALWAYS_ON\"] = 1] = \"ALWAYS_ON\";\n                    ConstantDecision[ConstantDecision[\"ALWAYS_PARENT\"] = 2] = \"ALWAYS_PARENT\";\n                })(ConstantDecision = ConstantSampler.ConstantDecision || (ConstantSampler.ConstantDecision = {}));\n            })(ConstantSampler = v1.ConstantSampler || (v1.ConstantSampler = {}));\n            let Span;\n            (function (Span) {\n                let SpanKind;\n                (function (SpanKind) {\n                    SpanKind[SpanKind[\"SPAN_KIND_UNSPECIFIED\"] = 0] = \"SPAN_KIND_UNSPECIFIED\";\n                    SpanKind[SpanKind[\"SPAN_KIND_INTERNAL\"] = 1] = \"SPAN_KIND_INTERNAL\";\n                    SpanKind[SpanKind[\"SPAN_KIND_SERVER\"] = 2] = \"SPAN_KIND_SERVER\";\n                    SpanKind[SpanKind[\"SPAN_KIND_CLIENT\"] = 3] = \"SPAN_KIND_CLIENT\";\n                    SpanKind[SpanKind[\"SPAN_KIND_PRODUCER\"] = 4] = \"SPAN_KIND_PRODUCER\";\n                    SpanKind[SpanKind[\"SPAN_KIND_CONSUMER\"] = 5] = \"SPAN_KIND_CONSUMER\";\n                })(SpanKind = Span.SpanKind || (Span.SpanKind = {}));\n            })(Span = v1.Span || (v1.Span = {}));\n        })(v1 = trace.v1 || (trace.v1 = {}));\n    })(trace = opentelemetryProto.trace || (opentelemetryProto.trace = {}));\n    let common;\n    (function (common) {\n        let v1;\n        (function (v1) {\n            let ValueType;\n            (function (ValueType) {\n                ValueType[ValueType[\"STRING\"] = 0] = \"STRING\";\n                ValueType[ValueType[\"INT\"] = 1] = \"INT\";\n                ValueType[ValueType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n                ValueType[ValueType[\"BOOL\"] = 3] = \"BOOL\";\n            })(ValueType = v1.ValueType || (v1.ValueType = {}));\n        })(v1 = common.v1 || (common.v1 = {}));\n    })(common = opentelemetryProto.common || (opentelemetryProto.common = {}));\n})(opentelemetryProto = exports.opentelemetryProto || (exports.opentelemetryProto = {}));\n/**\n * Interface for handling error\n */\nclass CollectorExporterError extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.name = 'CollectorExporterError';\n        this.data = data;\n        this.code = code;\n    }\n}\nexports.CollectorExporterError = CollectorExporterError;\n/**\n * Mapping between api SpanKind and proto SpanKind\n */\nexports.COLLECTOR_SPAN_KIND_MAPPING = {\n    [api_1.SpanKind.INTERNAL]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_INTERNAL,\n    [api_1.SpanKind.SERVER]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_SERVER,\n    [api_1.SpanKind.CLIENT]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_CLIENT,\n    [api_1.SpanKind.PRODUCER]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_PRODUCER,\n    [api_1.SpanKind.CONSUMER]: opentelemetryProto.trace.v1.Span.SpanKind.SPAN_KIND_CONSUMER,\n};\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/exporter-collector/build/src/util.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/exporter-collector/build/src/util.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseHeaders = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/**\n * Parses headers from config leaving only those that have defined values\n * @param partialHeaders\n */\nfunction parseHeaders(partialHeaders = {}) {\n    const headers = {};\n    Object.entries(partialHeaders).forEach(([key, value]) => {\n        if (typeof value !== 'undefined') {\n            headers[key] = String(value);\n        }\n        else {\n            api_1.diag.warn(`Header \"${key}\" has wrong value and will be ignored`);\n        }\n    });\n    return headers;\n}\nexports.parseHeaders = parseHeaders;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy91dGlsLmpzPzA3MWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxnRkFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLElBQUk7QUFDM0M7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvZXhwb3J0ZXItY29sbGVjdG9yL2J1aWxkL3NyYy91dGlsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZUhlYWRlcnMgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG4vKipcbiAqIFBhcnNlcyBoZWFkZXJzIGZyb20gY29uZmlnIGxlYXZpbmcgb25seSB0aG9zZSB0aGF0IGhhdmUgZGVmaW5lZCB2YWx1ZXNcbiAqIEBwYXJhbSBwYXJ0aWFsSGVhZGVyc1xuICovXG5mdW5jdGlvbiBwYXJzZUhlYWRlcnMocGFydGlhbEhlYWRlcnMgPSB7fSkge1xuICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICBPYmplY3QuZW50cmllcyhwYXJ0aWFsSGVhZGVycykuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2tleV0gPSBTdHJpbmcodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYXBpXzEuZGlhZy53YXJuKGBIZWFkZXIgXCIke2tleX1cIiBoYXMgd3JvbmcgdmFsdWUgYW5kIHdpbGwgYmUgaWdub3JlZGApO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGhlYWRlcnM7XG59XG5leHBvcnRzLnBhcnNlSGVhZGVycyA9IHBhcnNlSGVhZGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWwuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/exporter-collector/build/src/util.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-fetch/build/src/enums/AttributeNames.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-fetch/build/src/enums/AttributeNames.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AttributeNames = void 0;\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nvar AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"COMPONENT\"] = \"component\";\n    AttributeNames[\"HTTP_ERROR_NAME\"] = \"http.error_name\";\n    AttributeNames[\"HTTP_STATUS_TEXT\"] = \"http.status_text\";\n})(AttributeNames = exports.AttributeNames || (exports.AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZldGNoL2J1aWxkL3NyYy9lbnVtcy9BdHRyaWJ1dGVOYW1lcy5qcz8xZTEyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx5RUFBeUU7QUFDMUUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZldGNoL2J1aWxkL3NyYy9lbnVtcy9BdHRyaWJ1dGVOYW1lcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXR0cmlidXRlTmFtZXMgPSB2b2lkIDA7XG4vKipcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuLXRlbGVtZXRyeS9vcGVudGVsZW1ldHJ5LXNwZWNpZmljYXRpb24vYmxvYi9tYXN0ZXIvc3BlY2lmaWNhdGlvbi90cmFjZS9zZW1hbnRpY19jb252ZW50aW9ucy9odHRwLm1kXG4gKi9cbnZhciBBdHRyaWJ1dGVOYW1lcztcbihmdW5jdGlvbiAoQXR0cmlidXRlTmFtZXMpIHtcbiAgICBBdHRyaWJ1dGVOYW1lc1tcIkNPTVBPTkVOVFwiXSA9IFwiY29tcG9uZW50XCI7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJIVFRQX0VSUk9SX05BTUVcIl0gPSBcImh0dHAuZXJyb3JfbmFtZVwiO1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiSFRUUF9TVEFUVVNfVEVYVFwiXSA9IFwiaHR0cC5zdGF0dXNfdGV4dFwiO1xufSkoQXR0cmlidXRlTmFtZXMgPSBleHBvcnRzLkF0dHJpYnV0ZU5hbWVzIHx8IChleHBvcnRzLkF0dHJpYnV0ZU5hbWVzID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF0dHJpYnV0ZU5hbWVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-fetch/build/src/enums/AttributeNames.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-fetch/build/src/fetch.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-fetch/build/src/fetch.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FetchInstrumentation = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"./node_modules/@opentelemetry/instrumentation/build/src/index.js\");\nconst core = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst web = __webpack_require__(/*! @opentelemetry/web */ \"./node_modules/@opentelemetry/web/build/src/index.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./enums/AttributeNames */ \"./node_modules/@opentelemetry/instrumentation-fetch/build/src/enums/AttributeNames.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/index.js\");\nconst version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@opentelemetry/instrumentation-fetch/build/src/version.js\");\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\n// Used to normalize relative URLs\nlet a;\nconst getUrlNormalizingAnchor = () => {\n    if (!a) {\n        a = document.createElement('a');\n    }\n    return a;\n};\n/**\n * This class represents a fetch plugin for auto instrumentation\n */\nclass FetchInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super('@opentelemetry/instrumentation-fetch', version_1.VERSION, Object.assign({}, config));\n        this.component = 'fetch';\n        this.version = version_1.VERSION;\n        this.moduleName = this.component;\n        this._usedResources = new WeakSet();\n        this._tasksCount = 0;\n    }\n    init() { }\n    _getConfig() {\n        return this._config;\n    }\n    /**\n     * Add cors pre flight child span\n     * @param span\n     * @param corsPreFlightRequest\n     */\n    _addChildSpan(span, corsPreFlightRequest) {\n        const childSpan = this.tracer.startSpan('CORS Preflight', {\n            startTime: corsPreFlightRequest[web.PerformanceTimingNames.FETCH_START],\n        }, api.setSpan(api.context.active(), span));\n        web.addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n        childSpan.end(corsPreFlightRequest[web.PerformanceTimingNames.RESPONSE_END]);\n    }\n    /**\n     * Adds more attributes to span just before ending it\n     * @param span\n     * @param response\n     */\n    _addFinalSpanAttributes(span, response) {\n        const parsedUrl = web.parseUrl(response.url);\n        span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_STATUS_CODE, response.status);\n        if (response.statusText != null) {\n            span.setAttribute(AttributeNames_1.AttributeNames.HTTP_STATUS_TEXT, response.statusText);\n        }\n        span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_HOST, parsedUrl.host);\n        span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n        span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n    }\n    /**\n     * Add headers\n     * @param options\n     * @param spanUrl\n     */\n    _addHeaders(options, spanUrl) {\n        if (!web.shouldPropagateTraceHeaders(spanUrl, this._getConfig().propagateTraceHeaderCorsUrls)) {\n            const headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            if (Object.keys(headers).length > 0) {\n                api.diag.debug('headers inject skipped due to CORS policy');\n            }\n            return;\n        }\n        if (options instanceof Request) {\n            api.propagation.inject(api.context.active(), options.headers, {\n                set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n            });\n        }\n        else {\n            const headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            options.headers = Object.assign({}, headers, options.headers || {});\n        }\n    }\n    /**\n     * Clears the resource timings and all resources assigned with spans\n     *     when {@link FetchPluginConfig.clearTimingResources} is\n     *     set to true (default false)\n     * @private\n     */\n    _clearResources() {\n        if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n            performance.clearResourceTimings();\n            this._usedResources = new WeakSet();\n        }\n    }\n    /**\n     * Creates a new span\n     * @param url\n     * @param options\n     */\n    _createSpan(url, options = {}) {\n        if (core.isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n            api.diag.debug('ignoring span as url matches ignored url');\n            return;\n        }\n        const method = (options.method || 'GET').toUpperCase();\n        const spanName = `HTTP ${method}`;\n        return this.tracer.startSpan(spanName, {\n            kind: api.SpanKind.CLIENT,\n            attributes: {\n                [AttributeNames_1.AttributeNames.COMPONENT]: this.moduleName,\n                [semantic_conventions_1.SemanticAttributes.HTTP_METHOD]: method,\n                [semantic_conventions_1.SemanticAttributes.HTTP_URL]: url,\n            },\n        });\n    }\n    /**\n     * Finds appropriate resource and add network events to the span\n     * @param span\n     * @param resourcesObserver\n     * @param endTime\n     */\n    _findResourceAndAddNetworkEvents(span, resourcesObserver, endTime) {\n        let resources = resourcesObserver.entries;\n        if (!resources.length) {\n            if (!performance.getEntriesByType) {\n                return;\n            }\n            // fallback - either Observer is not available or it took longer\n            // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n            // information\n            resources = performance.getEntriesByType('resource');\n        }\n        const resource = web.getResource(resourcesObserver.spanUrl, resourcesObserver.startTime, endTime, resources, this._usedResources, 'fetch');\n        if (resource.mainRequest) {\n            const mainRequest = resource.mainRequest;\n            this._markResourceAsUsed(mainRequest);\n            const corsPreFlightRequest = resource.corsPreFlightRequest;\n            if (corsPreFlightRequest) {\n                this._addChildSpan(span, corsPreFlightRequest);\n                this._markResourceAsUsed(corsPreFlightRequest);\n            }\n            web.addSpanNetworkEvents(span, mainRequest);\n        }\n    }\n    /**\n     * Marks certain [resource]{@link PerformanceResourceTiming} when information\n     * from this is used to add events to span.\n     * This is done to avoid reusing the same resource again for next span\n     * @param resource\n     */\n    _markResourceAsUsed(resource) {\n        this._usedResources.add(resource);\n    }\n    /**\n     * Finish span, add attributes, network events etc.\n     * @param span\n     * @param spanData\n     * @param response\n     */\n    _endSpan(span, spanData, response) {\n        const endTime = core.hrTime();\n        this._addFinalSpanAttributes(span, response);\n        setTimeout(() => {\n            var _a;\n            (_a = spanData.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n            this._findResourceAndAddNetworkEvents(span, spanData, endTime);\n            this._tasksCount--;\n            this._clearResources();\n            span.end(endTime);\n        }, OBSERVER_WAIT_TIME_MS);\n    }\n    /**\n     * Patches the constructor of fetch\n     */\n    _patchConstructor() {\n        return (original) => {\n            const plugin = this;\n            return function patchConstructor(input, init) {\n                const url = input instanceof Request ? input.url : input;\n                const options = input instanceof Request ? input : init || {};\n                const createdSpan = plugin._createSpan(url, options);\n                if (!createdSpan) {\n                    return original.apply(this, [url, options]);\n                }\n                const spanData = plugin._prepareSpanData(url);\n                function onSuccess(span, resolve, response) {\n                    try {\n                        plugin._applyAttributesAfterFetch(span, options, response);\n                        if (response.status >= 200 && response.status < 400) {\n                            plugin._endSpan(span, spanData, response);\n                        }\n                        else {\n                            plugin._endSpan(span, spanData, {\n                                status: response.status,\n                                statusText: response.statusText,\n                                url,\n                            });\n                        }\n                    }\n                    finally {\n                        resolve(response);\n                    }\n                }\n                function onError(span, reject, error) {\n                    try {\n                        plugin._applyAttributesAfterFetch(span, options, error);\n                        plugin._endSpan(span, spanData, {\n                            status: error.status || 0,\n                            statusText: error.message,\n                            url,\n                        });\n                    }\n                    finally {\n                        reject(error);\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    return api.context.with(api.setSpan(api.context.active(), createdSpan), () => {\n                        plugin._addHeaders(options, url);\n                        plugin._tasksCount++;\n                        return original\n                            .apply(this, [url, options])\n                            .then(onSuccess.bind(this, createdSpan, resolve), onError.bind(this, createdSpan, reject));\n                    });\n                });\n            };\n        };\n    }\n    _applyAttributesAfterFetch(span, request, result) {\n        const applyCustomAttributesOnSpan = this._getConfig()\n            .applyCustomAttributesOnSpan;\n        if (applyCustomAttributesOnSpan) {\n            instrumentation_1.safeExecuteInTheMiddle(() => applyCustomAttributesOnSpan(span, request, result), error => {\n                if (!error) {\n                    return;\n                }\n                api.diag.error('applyCustomAttributesOnSpan', error);\n            }, true);\n        }\n    }\n    /**\n     * Prepares a span data - needed later for matching appropriate network\n     *     resources\n     * @param spanUrl\n     */\n    _prepareSpanData(spanUrl) {\n        const startTime = core.hrTime();\n        const entries = [];\n        if (typeof window.PerformanceObserver === 'undefined') {\n            return { entries, startTime, spanUrl };\n        }\n        const observer = new PerformanceObserver(list => {\n            const perfObsEntries = list.getEntries();\n            const urlNormalizingAnchor = getUrlNormalizingAnchor();\n            urlNormalizingAnchor.href = spanUrl;\n            perfObsEntries.forEach(entry => {\n                if (entry.initiatorType === 'fetch' &&\n                    entry.name === urlNormalizingAnchor.href) {\n                    entries.push(entry);\n                }\n            });\n        });\n        observer.observe({\n            entryTypes: ['resource'],\n        });\n        return { entries, observer, startTime, spanUrl };\n    }\n    /**\n     * implements enable function\n     */\n    enable() {\n        if (instrumentation_1.isWrapped(window.fetch)) {\n            this._unwrap(window, 'fetch');\n            api.diag.debug('removing previous patch for constructor');\n        }\n        this._wrap(window, 'fetch', this._patchConstructor());\n    }\n    /**\n     * implements unpatch function\n     */\n    disable() {\n        this._unwrap(window, 'fetch');\n        this._usedResources = new WeakSet();\n    }\n}\nexports.FetchInstrumentation = FetchInstrumentation;\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-fetch/build/src/fetch.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-fetch/build/src/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-fetch/build/src/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./fetch */ \"./node_modules/@opentelemetry/instrumentation-fetch/build/src/fetch.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZldGNoL2J1aWxkL3NyYy9pbmRleC5qcz85OTJkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLHVGQUFTO0FBQzlCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1mZXRjaC9idWlsZC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9mZXRjaFwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-fetch/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation-fetch/build/src/version.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation-fetch/build/src/version.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.VERSION = '0.19.0';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWZldGNoL2J1aWxkL3NyYy92ZXJzaW9uLmpzPzJkZmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZmV0Y2gvYnVpbGQvc3JjL3ZlcnNpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuVkVSU0lPTiA9ICcwLjE5LjAnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation-fetch/build/src/version.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/autoLoader.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/autoLoader.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerInstrumentations = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst api_metrics_1 = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst autoLoaderUtils_1 = __webpack_require__(/*! ./autoLoaderUtils */ \"./node_modules/@opentelemetry/instrumentation/build/src/autoLoaderUtils.js\");\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nfunction registerInstrumentations(options) {\n    const { instrumentations } = autoLoaderUtils_1.parseInstrumentationOptions(options.instrumentations);\n    const tracerProvider = options.tracerProvider || api_1.trace.getTracerProvider();\n    const meterProvider = options.meterProvider || api_metrics_1.metrics.getMeterProvider();\n    autoLoaderUtils_1.enableInstrumentations(instrumentations, tracerProvider, meterProvider);\n    return () => {\n        autoLoaderUtils_1.disableInstrumentations(instrumentations);\n    };\n}\nexports.registerInstrumentations = registerInstrumentations;\n//# sourceMappingURL=autoLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9hdXRvTG9hZGVyLmpzPzkxMDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxnRkFBb0I7QUFDMUMsc0JBQXNCLG1CQUFPLENBQUMsZ0dBQTRCO0FBQzFELDBCQUEwQixtQkFBTyxDQUFDLHFHQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsbUJBQW1CO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvc3JjL2F1dG9Mb2FkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJlZ2lzdGVySW5zdHJ1bWVudGF0aW9ucyA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGFwaV9tZXRyaWNzXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3NcIik7XG5jb25zdCBhdXRvTG9hZGVyVXRpbHNfMSA9IHJlcXVpcmUoXCIuL2F1dG9Mb2FkZXJVdGlsc1wiKTtcbi8qKlxuICogSXQgd2lsbCByZWdpc3RlciBpbnN0cnVtZW50YXRpb25zIGFuZCBwbHVnaW5zXG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHJldHVybiByZXR1cm5zIGZ1bmN0aW9uIHRvIHVubG9hZCBpbnN0cnVtZW50YXRpb24gYW5kIHBsdWdpbnMgdGhhdCB3ZXJlXG4gKiAgIHJlZ2lzdGVyZWRcbiAqL1xuZnVuY3Rpb24gcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25zKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGluc3RydW1lbnRhdGlvbnMgfSA9IGF1dG9Mb2FkZXJVdGlsc18xLnBhcnNlSW5zdHJ1bWVudGF0aW9uT3B0aW9ucyhvcHRpb25zLmluc3RydW1lbnRhdGlvbnMpO1xuICAgIGNvbnN0IHRyYWNlclByb3ZpZGVyID0gb3B0aW9ucy50cmFjZXJQcm92aWRlciB8fCBhcGlfMS50cmFjZS5nZXRUcmFjZXJQcm92aWRlcigpO1xuICAgIGNvbnN0IG1ldGVyUHJvdmlkZXIgPSBvcHRpb25zLm1ldGVyUHJvdmlkZXIgfHwgYXBpX21ldHJpY3NfMS5tZXRyaWNzLmdldE1ldGVyUHJvdmlkZXIoKTtcbiAgICBhdXRvTG9hZGVyVXRpbHNfMS5lbmFibGVJbnN0cnVtZW50YXRpb25zKGluc3RydW1lbnRhdGlvbnMsIHRyYWNlclByb3ZpZGVyLCBtZXRlclByb3ZpZGVyKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBhdXRvTG9hZGVyVXRpbHNfMS5kaXNhYmxlSW5zdHJ1bWVudGF0aW9ucyhpbnN0cnVtZW50YXRpb25zKTtcbiAgICB9O1xufVxuZXhwb3J0cy5yZWdpc3Rlckluc3RydW1lbnRhdGlvbnMgPSByZWdpc3Rlckluc3RydW1lbnRhdGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRvTG9hZGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/autoLoader.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/autoLoaderUtils.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/autoLoaderUtils.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.disableInstrumentations = exports.enableInstrumentations = exports.parseInstrumentationOptions = void 0;\n/**\n * Parses the options and returns instrumentations, node plugins and\n *   web plugins\n * @param options\n */\nfunction parseInstrumentationOptions(options = []) {\n    let instrumentations = [];\n    for (let i = 0, j = options.length; i < j; i++) {\n        const option = options[i];\n        if (Array.isArray(option)) {\n            const results = parseInstrumentationOptions(option);\n            instrumentations = instrumentations.concat(results.instrumentations);\n        }\n        else if (typeof option === 'function') {\n            instrumentations.push(new option());\n        }\n        else if (option.instrumentationName) {\n            instrumentations.push(option);\n        }\n    }\n    return { instrumentations };\n}\nexports.parseInstrumentationOptions = parseInstrumentationOptions;\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nfunction enableInstrumentations(instrumentations, tracerProvider, meterProvider) {\n    for (let i = 0, j = instrumentations.length; i < j; i++) {\n        const instrumentation = instrumentations[i];\n        if (tracerProvider) {\n            instrumentation.setTracerProvider(tracerProvider);\n        }\n        if (meterProvider) {\n            instrumentation.setMeterProvider(meterProvider);\n        }\n        instrumentation.enable();\n    }\n}\nexports.enableInstrumentations = enableInstrumentations;\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nfunction disableInstrumentations(instrumentations) {\n    instrumentations.forEach(instrumentation => instrumentation.disable());\n}\nexports.disableInstrumentations = disableInstrumentations;\n//# sourceMappingURL=autoLoaderUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9hdXRvTG9hZGVyVXRpbHMuanM/NjFmZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsT0FBTztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELE9BQU87QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvc3JjL2F1dG9Mb2FkZXJVdGlscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGlzYWJsZUluc3RydW1lbnRhdGlvbnMgPSBleHBvcnRzLmVuYWJsZUluc3RydW1lbnRhdGlvbnMgPSBleHBvcnRzLnBhcnNlSW5zdHJ1bWVudGF0aW9uT3B0aW9ucyA9IHZvaWQgMDtcbi8qKlxuICogUGFyc2VzIHRoZSBvcHRpb25zIGFuZCByZXR1cm5zIGluc3RydW1lbnRhdGlvbnMsIG5vZGUgcGx1Z2lucyBhbmRcbiAqICAgd2ViIHBsdWdpbnNcbiAqIEBwYXJhbSBvcHRpb25zXG4gKi9cbmZ1bmN0aW9uIHBhcnNlSW5zdHJ1bWVudGF0aW9uT3B0aW9ucyhvcHRpb25zID0gW10pIHtcbiAgICBsZXQgaW5zdHJ1bWVudGF0aW9ucyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwLCBqID0gb3B0aW9ucy5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgY29uc3Qgb3B0aW9uID0gb3B0aW9uc1tpXTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkob3B0aW9uKSkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IHBhcnNlSW5zdHJ1bWVudGF0aW9uT3B0aW9ucyhvcHRpb24pO1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9ucyA9IGluc3RydW1lbnRhdGlvbnMuY29uY2F0KHJlc3VsdHMuaW5zdHJ1bWVudGF0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9ucy5wdXNoKG5ldyBvcHRpb24oKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAob3B0aW9uLmluc3RydW1lbnRhdGlvbk5hbWUpIHtcbiAgICAgICAgICAgIGluc3RydW1lbnRhdGlvbnMucHVzaChvcHRpb24pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IGluc3RydW1lbnRhdGlvbnMgfTtcbn1cbmV4cG9ydHMucGFyc2VJbnN0cnVtZW50YXRpb25PcHRpb25zID0gcGFyc2VJbnN0cnVtZW50YXRpb25PcHRpb25zO1xuLyoqXG4gKiBFbmFibGUgaW5zdHJ1bWVudGF0aW9uc1xuICogQHBhcmFtIGluc3RydW1lbnRhdGlvbnNcbiAqIEBwYXJhbSB0cmFjZXJQcm92aWRlclxuICogQHBhcmFtIG1ldGVyUHJvdmlkZXJcbiAqL1xuZnVuY3Rpb24gZW5hYmxlSW5zdHJ1bWVudGF0aW9ucyhpbnN0cnVtZW50YXRpb25zLCB0cmFjZXJQcm92aWRlciwgbWV0ZXJQcm92aWRlcikge1xuICAgIGZvciAobGV0IGkgPSAwLCBqID0gaW5zdHJ1bWVudGF0aW9ucy5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgY29uc3QgaW5zdHJ1bWVudGF0aW9uID0gaW5zdHJ1bWVudGF0aW9uc1tpXTtcbiAgICAgICAgaWYgKHRyYWNlclByb3ZpZGVyKSB7XG4gICAgICAgICAgICBpbnN0cnVtZW50YXRpb24uc2V0VHJhY2VyUHJvdmlkZXIodHJhY2VyUHJvdmlkZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtZXRlclByb3ZpZGVyKSB7XG4gICAgICAgICAgICBpbnN0cnVtZW50YXRpb24uc2V0TWV0ZXJQcm92aWRlcihtZXRlclByb3ZpZGVyKTtcbiAgICAgICAgfVxuICAgICAgICBpbnN0cnVtZW50YXRpb24uZW5hYmxlKCk7XG4gICAgfVxufVxuZXhwb3J0cy5lbmFibGVJbnN0cnVtZW50YXRpb25zID0gZW5hYmxlSW5zdHJ1bWVudGF0aW9ucztcbi8qKlxuICogRGlzYWJsZSBpbnN0cnVtZW50YXRpb25zXG4gKiBAcGFyYW0gaW5zdHJ1bWVudGF0aW9uc1xuICovXG5mdW5jdGlvbiBkaXNhYmxlSW5zdHJ1bWVudGF0aW9ucyhpbnN0cnVtZW50YXRpb25zKSB7XG4gICAgaW5zdHJ1bWVudGF0aW9ucy5mb3JFYWNoKGluc3RydW1lbnRhdGlvbiA9PiBpbnN0cnVtZW50YXRpb24uZGlzYWJsZSgpKTtcbn1cbmV4cG9ydHMuZGlzYWJsZUluc3RydW1lbnRhdGlvbnMgPSBkaXNhYmxlSW5zdHJ1bWVudGF0aW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dG9Mb2FkZXJVdGlscy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/autoLoaderUtils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/index.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./autoLoader */ \"./node_modules/@opentelemetry/instrumentation/build/src/autoLoader.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform/index */ \"./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/instrumentation/build/src/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types_internal */ \"./node_modules/@opentelemetry/instrumentation/build/src/types_internal.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/@opentelemetry/instrumentation/build/src/utils.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9pbmRleC5qcz9jZDVkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLDJGQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQywyR0FBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLGlGQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyxtR0FBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLGlGQUFTO0FBQzlCIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hdXRvTG9hZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wbGF0Zm9ybS9pbmRleFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzX2ludGVybmFsXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/instrumentation.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/instrumentation.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstrumentationAbstract = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst api_metrics_1 = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst shimmer = __webpack_require__(/*! shimmer */ \"./node_modules/shimmer/index.js\");\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nclass InstrumentationAbstract {\n    constructor(instrumentationName, instrumentationVersion, config = {}) {\n        this.instrumentationName = instrumentationName;\n        this.instrumentationVersion = instrumentationVersion;\n        /* Api to wrap instrumented method */\n        this._wrap = shimmer.wrap;\n        /* Api to unwrap instrumented methods */\n        this._unwrap = shimmer.unwrap;\n        /* Api to mass wrap instrumented method */\n        this._massWrap = shimmer.massWrap;\n        /* Api to mass unwrap instrumented methods */\n        this._massUnwrap = shimmer.massUnwrap;\n        this._config = Object.assign({ enabled: true }, config);\n        this._tracer = api_1.trace.getTracer(instrumentationName, instrumentationVersion);\n        this._meter = api_metrics_1.metrics.getMeter(instrumentationName, instrumentationVersion);\n    }\n    /* Returns meter */\n    get meter() {\n        return this._meter;\n    }\n    /**\n     * Sets MeterProvider to this plugin\n     * @param meterProvider\n     */\n    setMeterProvider(meterProvider) {\n        this._meter = meterProvider.getMeter(this.instrumentationName, this.instrumentationVersion);\n    }\n    /**\n     * Sets TraceProvider to this plugin\n     * @param tracerProvider\n     */\n    setTracerProvider(tracerProvider) {\n        this._tracer = tracerProvider.getTracer(this.instrumentationName, this.instrumentationVersion);\n    }\n    /* Returns tracer */\n    get tracer() {\n        return this._tracer;\n    }\n}\nexports.InstrumentationAbstract = InstrumentationAbstract;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9pbnN0cnVtZW50YXRpb24uanM/MTQ1ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQyxzQkFBc0IsbUJBQU8sQ0FBQyxnR0FBNEI7QUFDMUQsZ0JBQWdCLG1CQUFPLENBQUMsZ0RBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsZ0JBQWdCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9zcmMvaW5zdHJ1bWVudGF0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnN0cnVtZW50YXRpb25BYnN0cmFjdCA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGFwaV9tZXRyaWNzXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3NcIik7XG5jb25zdCBzaGltbWVyID0gcmVxdWlyZShcInNoaW1tZXJcIik7XG4vKipcbiAqIEJhc2UgYWJzdHJhY3QgaW50ZXJuYWwgY2xhc3MgZm9yIGluc3RydW1lbnRpbmcgbm9kZSBhbmQgd2ViIHBsdWdpbnNcbiAqL1xuY2xhc3MgSW5zdHJ1bWVudGF0aW9uQWJzdHJhY3Qge1xuICAgIGNvbnN0cnVjdG9yKGluc3RydW1lbnRhdGlvbk5hbWUsIGluc3RydW1lbnRhdGlvblZlcnNpb24sIGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIHRoaXMuaW5zdHJ1bWVudGF0aW9uTmFtZSA9IGluc3RydW1lbnRhdGlvbk5hbWU7XG4gICAgICAgIHRoaXMuaW5zdHJ1bWVudGF0aW9uVmVyc2lvbiA9IGluc3RydW1lbnRhdGlvblZlcnNpb247XG4gICAgICAgIC8qIEFwaSB0byB3cmFwIGluc3RydW1lbnRlZCBtZXRob2QgKi9cbiAgICAgICAgdGhpcy5fd3JhcCA9IHNoaW1tZXIud3JhcDtcbiAgICAgICAgLyogQXBpIHRvIHVud3JhcCBpbnN0cnVtZW50ZWQgbWV0aG9kcyAqL1xuICAgICAgICB0aGlzLl91bndyYXAgPSBzaGltbWVyLnVud3JhcDtcbiAgICAgICAgLyogQXBpIHRvIG1hc3Mgd3JhcCBpbnN0cnVtZW50ZWQgbWV0aG9kICovXG4gICAgICAgIHRoaXMuX21hc3NXcmFwID0gc2hpbW1lci5tYXNzV3JhcDtcbiAgICAgICAgLyogQXBpIHRvIG1hc3MgdW53cmFwIGluc3RydW1lbnRlZCBtZXRob2RzICovXG4gICAgICAgIHRoaXMuX21hc3NVbndyYXAgPSBzaGltbWVyLm1hc3NVbndyYXA7XG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IE9iamVjdC5hc3NpZ24oeyBlbmFibGVkOiB0cnVlIH0sIGNvbmZpZyk7XG4gICAgICAgIHRoaXMuX3RyYWNlciA9IGFwaV8xLnRyYWNlLmdldFRyYWNlcihpbnN0cnVtZW50YXRpb25OYW1lLCBpbnN0cnVtZW50YXRpb25WZXJzaW9uKTtcbiAgICAgICAgdGhpcy5fbWV0ZXIgPSBhcGlfbWV0cmljc18xLm1ldHJpY3MuZ2V0TWV0ZXIoaW5zdHJ1bWVudGF0aW9uTmFtZSwgaW5zdHJ1bWVudGF0aW9uVmVyc2lvbik7XG4gICAgfVxuICAgIC8qIFJldHVybnMgbWV0ZXIgKi9cbiAgICBnZXQgbWV0ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tZXRlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyBNZXRlclByb3ZpZGVyIHRvIHRoaXMgcGx1Z2luXG4gICAgICogQHBhcmFtIG1ldGVyUHJvdmlkZXJcbiAgICAgKi9cbiAgICBzZXRNZXRlclByb3ZpZGVyKG1ldGVyUHJvdmlkZXIpIHtcbiAgICAgICAgdGhpcy5fbWV0ZXIgPSBtZXRlclByb3ZpZGVyLmdldE1ldGVyKHRoaXMuaW5zdHJ1bWVudGF0aW9uTmFtZSwgdGhpcy5pbnN0cnVtZW50YXRpb25WZXJzaW9uKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyBUcmFjZVByb3ZpZGVyIHRvIHRoaXMgcGx1Z2luXG4gICAgICogQHBhcmFtIHRyYWNlclByb3ZpZGVyXG4gICAgICovXG4gICAgc2V0VHJhY2VyUHJvdmlkZXIodHJhY2VyUHJvdmlkZXIpIHtcbiAgICAgICAgdGhpcy5fdHJhY2VyID0gdHJhY2VyUHJvdmlkZXIuZ2V0VHJhY2VyKHRoaXMuaW5zdHJ1bWVudGF0aW9uTmFtZSwgdGhpcy5pbnN0cnVtZW50YXRpb25WZXJzaW9uKTtcbiAgICB9XG4gICAgLyogUmV0dXJucyB0cmFjZXIgKi9cbiAgICBnZXQgdHJhY2VyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdHJhY2VyO1xuICAgIH1cbn1cbmV4cG9ydHMuSW5zdHJ1bWVudGF0aW9uQWJzdHJhY3QgPSBJbnN0cnVtZW50YXRpb25BYnN0cmFjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydW1lbnRhdGlvbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/instrumentation.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/index.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./instrumentation */ \"./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/instrumentation.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzPzVkYTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxhQUFhLG1CQUFPLENBQUMsc0hBQW1CO0FBQ3hDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2luc3RydW1lbnRhdGlvblwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/instrumentation.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/instrumentation.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstrumentationBase = void 0;\nconst instrumentation_1 = __webpack_require__(/*! ../../instrumentation */ \"./node_modules/@opentelemetry/instrumentation/build/src/instrumentation.js\");\n/**\n * Base abstract class for instrumenting web plugins\n */\nclass InstrumentationBase extends instrumentation_1.InstrumentationAbstract {\n    constructor(instrumentationName, instrumentationVersion, config = {}) {\n        super(instrumentationName, instrumentationVersion, config);\n        this.instrumentationName = instrumentationName;\n        this.instrumentationVersion = instrumentationVersion;\n        if (this._config.enabled) {\n            this.enable();\n        }\n    }\n}\nexports.InstrumentationBase = InstrumentationBase;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luc3RydW1lbnRhdGlvbi5qcz9iYjYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyx5R0FBdUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luc3RydW1lbnRhdGlvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW5zdHJ1bWVudGF0aW9uQmFzZSA9IHZvaWQgMDtcbmNvbnN0IGluc3RydW1lbnRhdGlvbl8xID0gcmVxdWlyZShcIi4uLy4uL2luc3RydW1lbnRhdGlvblwiKTtcbi8qKlxuICogQmFzZSBhYnN0cmFjdCBjbGFzcyBmb3IgaW5zdHJ1bWVudGluZyB3ZWIgcGx1Z2luc1xuICovXG5jbGFzcyBJbnN0cnVtZW50YXRpb25CYXNlIGV4dGVuZHMgaW5zdHJ1bWVudGF0aW9uXzEuSW5zdHJ1bWVudGF0aW9uQWJzdHJhY3Qge1xuICAgIGNvbnN0cnVjdG9yKGluc3RydW1lbnRhdGlvbk5hbWUsIGluc3RydW1lbnRhdGlvblZlcnNpb24sIGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIHN1cGVyKGluc3RydW1lbnRhdGlvbk5hbWUsIGluc3RydW1lbnRhdGlvblZlcnNpb24sIGNvbmZpZyk7XG4gICAgICAgIHRoaXMuaW5zdHJ1bWVudGF0aW9uTmFtZSA9IGluc3RydW1lbnRhdGlvbk5hbWU7XG4gICAgICAgIHRoaXMuaW5zdHJ1bWVudGF0aW9uVmVyc2lvbiA9IGluc3RydW1lbnRhdGlvblZlcnNpb247XG4gICAgICAgIGlmICh0aGlzLl9jb25maWcuZW5hYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5lbmFibGUoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuSW5zdHJ1bWVudGF0aW9uQmFzZSA9IEluc3RydW1lbnRhdGlvbkJhc2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0cnVtZW50YXRpb24uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/platform/browser/instrumentation.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/types.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/types.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy90eXBlcy5qcz9lMzIwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy90eXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/types_internal.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/types_internal.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types_internal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy90eXBlc19pbnRlcm5hbC5qcz9iN2Q0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy90eXBlc19pbnRlcm5hbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzX2ludGVybmFsLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/types_internal.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/instrumentation/build/src/utils.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/instrumentation/build/src/utils.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWrapped = exports.safeExecuteInTheMiddleAsync = exports.safeExecuteInTheMiddle = void 0;\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nfunction safeExecuteInTheMiddle(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\nexports.safeExecuteInTheMiddle = safeExecuteInTheMiddle;\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nasync function safeExecuteInTheMiddleAsync(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = await execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\nexports.safeExecuteInTheMiddleAsync = safeExecuteInTheMiddleAsync;\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nfunction isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\nexports.isWrapped = isWrapped;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uL2J1aWxkL3NyYy91dGlscy5qcz80YWFhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi9idWlsZC9zcmMvdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzV3JhcHBlZCA9IGV4cG9ydHMuc2FmZUV4ZWN1dGVJblRoZU1pZGRsZUFzeW5jID0gZXhwb3J0cy5zYWZlRXhlY3V0ZUluVGhlTWlkZGxlID0gdm9pZCAwO1xuLyoqXG4gKiBmdW5jdGlvbiB0byBleGVjdXRlIHBhdGNoZWQgZnVuY3Rpb24gYW5kIGJlaW5nIGFibGUgdG8gY2F0Y2ggZXJyb3JzXG4gKiBAcGFyYW0gZXhlY3V0ZSAtIGZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkXG4gKiBAcGFyYW0gb25GaW5pc2ggLSBjYWxsYmFjayB0byBydW4gd2hlbiBleGVjdXRlIGZpbmlzaGVzXG4gKi9cbmZ1bmN0aW9uIHNhZmVFeGVjdXRlSW5UaGVNaWRkbGUoZXhlY3V0ZSwgb25GaW5pc2gsIHByZXZlbnRUaHJvd2luZ0Vycm9yKSB7XG4gICAgbGV0IGVycm9yO1xuICAgIGxldCByZXN1bHQ7XG4gICAgdHJ5IHtcbiAgICAgICAgcmVzdWx0ID0gZXhlY3V0ZSgpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBlcnJvciA9IGU7XG4gICAgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICBvbkZpbmlzaChlcnJvciwgcmVzdWx0KTtcbiAgICAgICAgaWYgKGVycm9yICYmICFwcmV2ZW50VGhyb3dpbmdFcnJvcikge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuc2FmZS1maW5hbGx5XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5zYWZlLWZpbmFsbHlcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5leHBvcnRzLnNhZmVFeGVjdXRlSW5UaGVNaWRkbGUgPSBzYWZlRXhlY3V0ZUluVGhlTWlkZGxlO1xuLyoqXG4gKiBBc3luYyBmdW5jdGlvbiB0byBleGVjdXRlIHBhdGNoZWQgZnVuY3Rpb24gYW5kIGJlaW5nIGFibGUgdG8gY2F0Y2ggZXJyb3JzXG4gKiBAcGFyYW0gZXhlY3V0ZSAtIGZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkXG4gKiBAcGFyYW0gb25GaW5pc2ggLSBjYWxsYmFjayB0byBydW4gd2hlbiBleGVjdXRlIGZpbmlzaGVzXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHNhZmVFeGVjdXRlSW5UaGVNaWRkbGVBc3luYyhleGVjdXRlLCBvbkZpbmlzaCwgcHJldmVudFRocm93aW5nRXJyb3IpIHtcbiAgICBsZXQgZXJyb3I7XG4gICAgbGV0IHJlc3VsdDtcbiAgICB0cnkge1xuICAgICAgICByZXN1bHQgPSBhd2FpdCBleGVjdXRlKCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGVycm9yID0gZTtcbiAgICB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIG9uRmluaXNoKGVycm9yLCByZXN1bHQpO1xuICAgICAgICBpZiAoZXJyb3IgJiYgIXByZXZlbnRUaHJvd2luZ0Vycm9yKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5zYWZlLWZpbmFsbHlcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnNhZmUtZmluYWxseVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cbmV4cG9ydHMuc2FmZUV4ZWN1dGVJblRoZU1pZGRsZUFzeW5jID0gc2FmZUV4ZWN1dGVJblRoZU1pZGRsZUFzeW5jO1xuLyoqXG4gKiBDaGVja3MgaWYgY2VydGFpbiBmdW5jdGlvbiBoYXMgYmVlbiBhbHJlYWR5IHdyYXBwZWRcbiAqIEBwYXJhbSBmdW5jXG4gKi9cbmZ1bmN0aW9uIGlzV3JhcHBlZChmdW5jKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgZnVuYyA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgICB0eXBlb2YgZnVuYy5fX29yaWdpbmFsID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgIHR5cGVvZiBmdW5jLl9fdW53cmFwID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgIGZ1bmMuX193cmFwcGVkID09PSB0cnVlKTtcbn1cbmV4cG9ydHMuaXNXcmFwcGVkID0gaXNXcmFwcGVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/instrumentation/build/src/utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseObserverMetric = void 0;\nconst BoundInstrument_1 = __webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\");\nconst Metric_1 = __webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\");\nconst ObserverResult_1 = __webpack_require__(/*! ./ObserverResult */ \"./node_modules/@opentelemetry/metrics/build/src/ObserverResult.js\");\nconst NOOP_CALLBACK = () => { };\n/**\n * This is a SDK implementation of Base Observer Metric.\n * All observers should extend this class\n */\nclass BaseObserverMetric extends Metric_1.Metric {\n    constructor(name, options, _processor, resource, metricKind, instrumentationLibrary, callback) {\n        super(name, options, metricKind, resource, instrumentationLibrary);\n        this._processor = _processor;\n        this._callback = callback || NOOP_CALLBACK;\n    }\n    _makeInstrument(labels) {\n        return new BoundInstrument_1.BoundObserver(labels, this._disabled, this._valueType, this._processor.aggregatorFor(this._descriptor));\n    }\n    async getMetricRecord() {\n        const observerResult = new ObserverResult_1.ObserverResult();\n        await this._callback(observerResult);\n        this._processResults(observerResult);\n        return super.getMetricRecord();\n    }\n    _processResults(observerResult) {\n        observerResult.values.forEach((value, labels) => {\n            const instrument = this.bind(labels);\n            instrument.update(value);\n        });\n    }\n    observation(value) {\n        return {\n            value,\n            observer: this,\n        };\n    }\n}\nexports.BaseObserverMetric = BaseObserverMetric;\n//# sourceMappingURL=BaseObserverMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQmFzZU9ic2VydmVyTWV0cmljLmpzPzQzMGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLDBCQUEwQixtQkFBTyxDQUFDLDZGQUFtQjtBQUNyRCxpQkFBaUIsbUJBQU8sQ0FBQywyRUFBVTtBQUNuQyx5QkFBeUIsbUJBQU8sQ0FBQywyRkFBa0I7QUFDbkQsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQmFzZU9ic2VydmVyTWV0cmljLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJhc2VPYnNlcnZlck1ldHJpYyA9IHZvaWQgMDtcbmNvbnN0IEJvdW5kSW5zdHJ1bWVudF8xID0gcmVxdWlyZShcIi4vQm91bmRJbnN0cnVtZW50XCIpO1xuY29uc3QgTWV0cmljXzEgPSByZXF1aXJlKFwiLi9NZXRyaWNcIik7XG5jb25zdCBPYnNlcnZlclJlc3VsdF8xID0gcmVxdWlyZShcIi4vT2JzZXJ2ZXJSZXN1bHRcIik7XG5jb25zdCBOT09QX0NBTExCQUNLID0gKCkgPT4geyB9O1xuLyoqXG4gKiBUaGlzIGlzIGEgU0RLIGltcGxlbWVudGF0aW9uIG9mIEJhc2UgT2JzZXJ2ZXIgTWV0cmljLlxuICogQWxsIG9ic2VydmVycyBzaG91bGQgZXh0ZW5kIHRoaXMgY2xhc3NcbiAqL1xuY2xhc3MgQmFzZU9ic2VydmVyTWV0cmljIGV4dGVuZHMgTWV0cmljXzEuTWV0cmljIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBvcHRpb25zLCBfcHJvY2Vzc29yLCByZXNvdXJjZSwgbWV0cmljS2luZCwgaW5zdHJ1bWVudGF0aW9uTGlicmFyeSwgY2FsbGJhY2spIHtcbiAgICAgICAgc3VwZXIobmFtZSwgb3B0aW9ucywgbWV0cmljS2luZCwgcmVzb3VyY2UsIGluc3RydW1lbnRhdGlvbkxpYnJhcnkpO1xuICAgICAgICB0aGlzLl9wcm9jZXNzb3IgPSBfcHJvY2Vzc29yO1xuICAgICAgICB0aGlzLl9jYWxsYmFjayA9IGNhbGxiYWNrIHx8IE5PT1BfQ0FMTEJBQ0s7XG4gICAgfVxuICAgIF9tYWtlSW5zdHJ1bWVudChsYWJlbHMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBCb3VuZEluc3RydW1lbnRfMS5Cb3VuZE9ic2VydmVyKGxhYmVscywgdGhpcy5fZGlzYWJsZWQsIHRoaXMuX3ZhbHVlVHlwZSwgdGhpcy5fcHJvY2Vzc29yLmFnZ3JlZ2F0b3JGb3IodGhpcy5fZGVzY3JpcHRvcikpO1xuICAgIH1cbiAgICBhc3luYyBnZXRNZXRyaWNSZWNvcmQoKSB7XG4gICAgICAgIGNvbnN0IG9ic2VydmVyUmVzdWx0ID0gbmV3IE9ic2VydmVyUmVzdWx0XzEuT2JzZXJ2ZXJSZXN1bHQoKTtcbiAgICAgICAgYXdhaXQgdGhpcy5fY2FsbGJhY2sob2JzZXJ2ZXJSZXN1bHQpO1xuICAgICAgICB0aGlzLl9wcm9jZXNzUmVzdWx0cyhvYnNlcnZlclJlc3VsdCk7XG4gICAgICAgIHJldHVybiBzdXBlci5nZXRNZXRyaWNSZWNvcmQoKTtcbiAgICB9XG4gICAgX3Byb2Nlc3NSZXN1bHRzKG9ic2VydmVyUmVzdWx0KSB7XG4gICAgICAgIG9ic2VydmVyUmVzdWx0LnZhbHVlcy5mb3JFYWNoKCh2YWx1ZSwgbGFiZWxzKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpbnN0cnVtZW50ID0gdGhpcy5iaW5kKGxhYmVscyk7XG4gICAgICAgICAgICBpbnN0cnVtZW50LnVwZGF0ZSh2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBvYnNlcnZhdGlvbih2YWx1ZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICBvYnNlcnZlcjogdGhpcyxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLkJhc2VPYnNlcnZlck1ldHJpYyA9IEJhc2VPYnNlcnZlck1ldHJpYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2VPYnNlcnZlck1ldHJpYy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/BatchObserver.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/BatchObserver.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchObserver = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst BatchObserverResult_1 = __webpack_require__(/*! ./BatchObserverResult */ \"./node_modules/@opentelemetry/metrics/build/src/BatchObserverResult.js\");\nconst NOOP_CALLBACK = () => { };\nconst MAX_TIMEOUT_UPDATE_MS = 500;\n/** This is a SDK implementation of Batch Observer. */\nclass BatchObserver {\n    constructor(options, callback) {\n        var _a;\n        this._maxTimeoutUpdateMS =\n            (_a = options.maxTimeoutUpdateMS) !== null && _a !== void 0 ? _a : MAX_TIMEOUT_UPDATE_MS;\n        this._callback = callback || NOOP_CALLBACK;\n    }\n    collect() {\n        api_1.diag.debug('getMetricRecord - start');\n        return new Promise(resolve => {\n            const observerResult = new BatchObserverResult_1.BatchObserverResult();\n            // cancels after MAX_TIMEOUT_MS - no more waiting for results\n            const timer = setTimeout(() => {\n                observerResult.cancelled = true;\n                // remove callback to prevent user from updating the values later if\n                // for any reason the observerBatchResult will be referenced\n                observerResult.onObserveCalled();\n                resolve();\n                api_1.diag.debug('getMetricRecord - timeout');\n            }, this._maxTimeoutUpdateMS);\n            // sets callback for each \"observe\" method\n            observerResult.onObserveCalled(() => {\n                clearTimeout(timer);\n                resolve();\n                api_1.diag.debug('getMetricRecord - end');\n            });\n            // calls the BatchObserverResult callback\n            this._callback(observerResult);\n        });\n    }\n}\nexports.BatchObserver = BatchObserver;\n//# sourceMappingURL=BatchObserver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQmF0Y2hPYnNlcnZlci5qcz82ZmY2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0ZBQW9CO0FBQzFDLDhCQUE4QixtQkFBTyxDQUFDLHFHQUF1QjtBQUM3RCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9CYXRjaE9ic2VydmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXRjaE9ic2VydmVyID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuY29uc3QgQmF0Y2hPYnNlcnZlclJlc3VsdF8xID0gcmVxdWlyZShcIi4vQmF0Y2hPYnNlcnZlclJlc3VsdFwiKTtcbmNvbnN0IE5PT1BfQ0FMTEJBQ0sgPSAoKSA9PiB7IH07XG5jb25zdCBNQVhfVElNRU9VVF9VUERBVEVfTVMgPSA1MDA7XG4vKiogVGhpcyBpcyBhIFNESyBpbXBsZW1lbnRhdGlvbiBvZiBCYXRjaCBPYnNlcnZlci4gKi9cbmNsYXNzIEJhdGNoT2JzZXJ2ZXIge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdGhpcy5fbWF4VGltZW91dFVwZGF0ZU1TID1cbiAgICAgICAgICAgIChfYSA9IG9wdGlvbnMubWF4VGltZW91dFVwZGF0ZU1TKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBNQVhfVElNRU9VVF9VUERBVEVfTVM7XG4gICAgICAgIHRoaXMuX2NhbGxiYWNrID0gY2FsbGJhY2sgfHwgTk9PUF9DQUxMQkFDSztcbiAgICB9XG4gICAgY29sbGVjdCgpIHtcbiAgICAgICAgYXBpXzEuZGlhZy5kZWJ1ZygnZ2V0TWV0cmljUmVjb3JkIC0gc3RhcnQnKTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgICAgY29uc3Qgb2JzZXJ2ZXJSZXN1bHQgPSBuZXcgQmF0Y2hPYnNlcnZlclJlc3VsdF8xLkJhdGNoT2JzZXJ2ZXJSZXN1bHQoKTtcbiAgICAgICAgICAgIC8vIGNhbmNlbHMgYWZ0ZXIgTUFYX1RJTUVPVVRfTVMgLSBubyBtb3JlIHdhaXRpbmcgZm9yIHJlc3VsdHNcbiAgICAgICAgICAgIGNvbnN0IHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXJSZXN1bHQuY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgY2FsbGJhY2sgdG8gcHJldmVudCB1c2VyIGZyb20gdXBkYXRpbmcgdGhlIHZhbHVlcyBsYXRlciBpZlxuICAgICAgICAgICAgICAgIC8vIGZvciBhbnkgcmVhc29uIHRoZSBvYnNlcnZlckJhdGNoUmVzdWx0IHdpbGwgYmUgcmVmZXJlbmNlZFxuICAgICAgICAgICAgICAgIG9ic2VydmVyUmVzdWx0Lm9uT2JzZXJ2ZUNhbGxlZCgpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICBhcGlfMS5kaWFnLmRlYnVnKCdnZXRNZXRyaWNSZWNvcmQgLSB0aW1lb3V0Jyk7XG4gICAgICAgICAgICB9LCB0aGlzLl9tYXhUaW1lb3V0VXBkYXRlTVMpO1xuICAgICAgICAgICAgLy8gc2V0cyBjYWxsYmFjayBmb3IgZWFjaCBcIm9ic2VydmVcIiBtZXRob2RcbiAgICAgICAgICAgIG9ic2VydmVyUmVzdWx0Lm9uT2JzZXJ2ZUNhbGxlZCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgYXBpXzEuZGlhZy5kZWJ1ZygnZ2V0TWV0cmljUmVjb3JkIC0gZW5kJyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIGNhbGxzIHRoZSBCYXRjaE9ic2VydmVyUmVzdWx0IGNhbGxiYWNrXG4gICAgICAgICAgICB0aGlzLl9jYWxsYmFjayhvYnNlcnZlclJlc3VsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuQmF0Y2hPYnNlcnZlciA9IEJhdGNoT2JzZXJ2ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CYXRjaE9ic2VydmVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/BatchObserver.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/BatchObserverResult.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/BatchObserverResult.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchObserverResult = void 0;\n/**\n * Implementation of api BatchObserverResult\n */\nclass BatchObserverResult {\n    constructor() {\n        /**\n         * Cancels the further updates.\n         * This is used to prevent updating the value of result that took too\n         * long to update. For example to avoid update after timeout.\n         * See {@link BatchObserver.collect}\n         */\n        this.cancelled = false;\n    }\n    /**\n     * used to save a callback that will be called after the observations are\n     *     updated\n     * @param [callback]\n     */\n    onObserveCalled(callback) {\n        this._callback = callback;\n    }\n    observe(labels, observations) {\n        if (this.cancelled || !this._callback) {\n            return;\n        }\n        observations.forEach(observation => {\n            observation.observer.bind(labels).update(observation.value);\n        });\n        if (!this._immediate) {\n            this._immediate = setImmediate(() => {\n                if (typeof this._callback === 'function') {\n                    this._callback();\n                    // prevent user from updating the values later if for any reason\n                    // the observerBatchResult will be referenced and then try to use\n                    this._callback = undefined;\n                }\n            });\n        }\n    }\n}\nexports.BatchObserverResult = BatchObserverResult;\n//# sourceMappingURL=BatchObserverResult.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQmF0Y2hPYnNlcnZlclJlc3VsdC5qcz8xYThhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9EQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0MiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQmF0Y2hPYnNlcnZlclJlc3VsdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmF0Y2hPYnNlcnZlclJlc3VsdCA9IHZvaWQgMDtcbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgYXBpIEJhdGNoT2JzZXJ2ZXJSZXN1bHRcbiAqL1xuY2xhc3MgQmF0Y2hPYnNlcnZlclJlc3VsdCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDYW5jZWxzIHRoZSBmdXJ0aGVyIHVwZGF0ZXMuXG4gICAgICAgICAqIFRoaXMgaXMgdXNlZCB0byBwcmV2ZW50IHVwZGF0aW5nIHRoZSB2YWx1ZSBvZiByZXN1bHQgdGhhdCB0b29rIHRvb1xuICAgICAgICAgKiBsb25nIHRvIHVwZGF0ZS4gRm9yIGV4YW1wbGUgdG8gYXZvaWQgdXBkYXRlIGFmdGVyIHRpbWVvdXQuXG4gICAgICAgICAqIFNlZSB7QGxpbmsgQmF0Y2hPYnNlcnZlci5jb2xsZWN0fVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jYW5jZWxsZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogdXNlZCB0byBzYXZlIGEgY2FsbGJhY2sgdGhhdCB3aWxsIGJlIGNhbGxlZCBhZnRlciB0aGUgb2JzZXJ2YXRpb25zIGFyZVxuICAgICAqICAgICB1cGRhdGVkXG4gICAgICogQHBhcmFtIFtjYWxsYmFja11cbiAgICAgKi9cbiAgICBvbk9ic2VydmVDYWxsZWQoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB9XG4gICAgb2JzZXJ2ZShsYWJlbHMsIG9ic2VydmF0aW9ucykge1xuICAgICAgICBpZiAodGhpcy5jYW5jZWxsZWQgfHwgIXRoaXMuX2NhbGxiYWNrKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgb2JzZXJ2YXRpb25zLmZvckVhY2gob2JzZXJ2YXRpb24gPT4ge1xuICAgICAgICAgICAgb2JzZXJ2YXRpb24ub2JzZXJ2ZXIuYmluZChsYWJlbHMpLnVwZGF0ZShvYnNlcnZhdGlvbi52YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXRoaXMuX2ltbWVkaWF0ZSkge1xuICAgICAgICAgICAgdGhpcy5faW1tZWRpYXRlID0gc2V0SW1tZWRpYXRlKCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuX2NhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIHByZXZlbnQgdXNlciBmcm9tIHVwZGF0aW5nIHRoZSB2YWx1ZXMgbGF0ZXIgaWYgZm9yIGFueSByZWFzb25cbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlIG9ic2VydmVyQmF0Y2hSZXN1bHQgd2lsbCBiZSByZWZlcmVuY2VkIGFuZCB0aGVuIHRyeSB0byB1c2VcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FsbGJhY2sgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkJhdGNoT2JzZXJ2ZXJSZXN1bHQgPSBCYXRjaE9ic2VydmVyUmVzdWx0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmF0Y2hPYnNlcnZlclJlc3VsdC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/BatchObserverResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoundObserver = exports.BoundValueRecorder = exports.BoundUpDownCounter = exports.BoundCounter = exports.BaseBoundInstrument = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst api = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\n/**\n * This class represent the base to BoundInstrument, which is responsible for generating\n * the TimeSeries.\n */\nclass BaseBoundInstrument {\n    constructor(labels, _disabled, _valueType, _aggregator) {\n        this._disabled = _disabled;\n        this._valueType = _valueType;\n        this._aggregator = _aggregator;\n        this._labels = labels;\n    }\n    update(value) {\n        if (this._disabled)\n            return;\n        if (typeof value !== 'number') {\n            api_1.diag.error(`Metric cannot accept a non-number value for ${Object.values(this._labels)}.`);\n            return;\n        }\n        if (this._valueType === api.ValueType.INT && !Number.isInteger(value)) {\n            api_1.diag.warn(`INT value type cannot accept a floating-point value for ${Object.values(this._labels)}, ignoring the fractional digits.`);\n            value = Math.trunc(value);\n        }\n        this._aggregator.update(value);\n    }\n    getLabels() {\n        return this._labels;\n    }\n    getAggregator() {\n        return this._aggregator;\n    }\n}\nexports.BaseBoundInstrument = BaseBoundInstrument;\n/**\n * BoundCounter allows the SDK to observe/record a single metric event. The\n * value of single instrument in the `Counter` associated with specified Labels.\n */\nclass BoundCounter extends BaseBoundInstrument {\n    constructor(labels, disabled, valueType, aggregator) {\n        super(labels, disabled, valueType, aggregator);\n    }\n    add(value) {\n        if (value < 0) {\n            api_1.diag.error(`Counter cannot descend for ${Object.values(this._labels)}`);\n            return;\n        }\n        this.update(value);\n    }\n}\nexports.BoundCounter = BoundCounter;\n/**\n * BoundUpDownCounter allows the SDK to observe/record a single metric event.\n * The value of single instrument in the `UpDownCounter` associated with\n * specified Labels.\n */\nclass BoundUpDownCounter extends BaseBoundInstrument {\n    constructor(labels, disabled, valueType, aggregator) {\n        super(labels, disabled, valueType, aggregator);\n    }\n    add(value) {\n        this.update(value);\n    }\n}\nexports.BoundUpDownCounter = BoundUpDownCounter;\n/**\n * BoundMeasure is an implementation of the {@link BoundMeasure} interface.\n */\nclass BoundValueRecorder extends BaseBoundInstrument {\n    constructor(labels, disabled, valueType, aggregator) {\n        super(labels, disabled, valueType, aggregator);\n    }\n    record(value) {\n        this.update(value);\n    }\n}\nexports.BoundValueRecorder = BoundValueRecorder;\n/**\n * BoundObserver is an implementation of the {@link BoundObserver} interface.\n */\nclass BoundObserver extends BaseBoundInstrument {\n    constructor(labels, disabled, valueType, aggregator) {\n        super(labels, disabled, valueType, aggregator);\n    }\n}\nexports.BoundObserver = BoundObserver;\n//# sourceMappingURL=BoundInstrument.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQm91bmRJbnN0cnVtZW50LmpzPzBhNGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxnRkFBb0I7QUFDMUMsWUFBWSxtQkFBTyxDQUFDLGdHQUE0QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUsNEJBQTRCO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBLHVGQUF1Riw0QkFBNEI7QUFDbkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsNEJBQTRCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxtQkFBbUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxvQkFBb0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9Cb3VuZEluc3RydW1lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJvdW5kT2JzZXJ2ZXIgPSBleHBvcnRzLkJvdW5kVmFsdWVSZWNvcmRlciA9IGV4cG9ydHMuQm91bmRVcERvd25Db3VudGVyID0gZXhwb3J0cy5Cb3VuZENvdW50ZXIgPSBleHBvcnRzLkJhc2VCb3VuZEluc3RydW1lbnQgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBhcGkgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3NcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcmVwcmVzZW50IHRoZSBiYXNlIHRvIEJvdW5kSW5zdHJ1bWVudCwgd2hpY2ggaXMgcmVzcG9uc2libGUgZm9yIGdlbmVyYXRpbmdcbiAqIHRoZSBUaW1lU2VyaWVzLlxuICovXG5jbGFzcyBCYXNlQm91bmRJbnN0cnVtZW50IHtcbiAgICBjb25zdHJ1Y3RvcihsYWJlbHMsIF9kaXNhYmxlZCwgX3ZhbHVlVHlwZSwgX2FnZ3JlZ2F0b3IpIHtcbiAgICAgICAgdGhpcy5fZGlzYWJsZWQgPSBfZGlzYWJsZWQ7XG4gICAgICAgIHRoaXMuX3ZhbHVlVHlwZSA9IF92YWx1ZVR5cGU7XG4gICAgICAgIHRoaXMuX2FnZ3JlZ2F0b3IgPSBfYWdncmVnYXRvcjtcbiAgICAgICAgdGhpcy5fbGFiZWxzID0gbGFiZWxzO1xuICAgIH1cbiAgICB1cGRhdGUodmFsdWUpIHtcbiAgICAgICAgaWYgKHRoaXMuX2Rpc2FibGVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgYXBpXzEuZGlhZy5lcnJvcihgTWV0cmljIGNhbm5vdCBhY2NlcHQgYSBub24tbnVtYmVyIHZhbHVlIGZvciAke09iamVjdC52YWx1ZXModGhpcy5fbGFiZWxzKX0uYCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX3ZhbHVlVHlwZSA9PT0gYXBpLlZhbHVlVHlwZS5JTlQgJiYgIU51bWJlci5pc0ludGVnZXIodmFsdWUpKSB7XG4gICAgICAgICAgICBhcGlfMS5kaWFnLndhcm4oYElOVCB2YWx1ZSB0eXBlIGNhbm5vdCBhY2NlcHQgYSBmbG9hdGluZy1wb2ludCB2YWx1ZSBmb3IgJHtPYmplY3QudmFsdWVzKHRoaXMuX2xhYmVscyl9LCBpZ25vcmluZyB0aGUgZnJhY3Rpb25hbCBkaWdpdHMuYCk7XG4gICAgICAgICAgICB2YWx1ZSA9IE1hdGgudHJ1bmModmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2FnZ3JlZ2F0b3IudXBkYXRlKHZhbHVlKTtcbiAgICB9XG4gICAgZ2V0TGFiZWxzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGFiZWxzO1xuICAgIH1cbiAgICBnZXRBZ2dyZWdhdG9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYWdncmVnYXRvcjtcbiAgICB9XG59XG5leHBvcnRzLkJhc2VCb3VuZEluc3RydW1lbnQgPSBCYXNlQm91bmRJbnN0cnVtZW50O1xuLyoqXG4gKiBCb3VuZENvdW50ZXIgYWxsb3dzIHRoZSBTREsgdG8gb2JzZXJ2ZS9yZWNvcmQgYSBzaW5nbGUgbWV0cmljIGV2ZW50LiBUaGVcbiAqIHZhbHVlIG9mIHNpbmdsZSBpbnN0cnVtZW50IGluIHRoZSBgQ291bnRlcmAgYXNzb2NpYXRlZCB3aXRoIHNwZWNpZmllZCBMYWJlbHMuXG4gKi9cbmNsYXNzIEJvdW5kQ291bnRlciBleHRlbmRzIEJhc2VCb3VuZEluc3RydW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxhYmVscywgZGlzYWJsZWQsIHZhbHVlVHlwZSwgYWdncmVnYXRvcikge1xuICAgICAgICBzdXBlcihsYWJlbHMsIGRpc2FibGVkLCB2YWx1ZVR5cGUsIGFnZ3JlZ2F0b3IpO1xuICAgIH1cbiAgICBhZGQodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlIDwgMCkge1xuICAgICAgICAgICAgYXBpXzEuZGlhZy5lcnJvcihgQ291bnRlciBjYW5ub3QgZGVzY2VuZCBmb3IgJHtPYmplY3QudmFsdWVzKHRoaXMuX2xhYmVscyl9YCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51cGRhdGUodmFsdWUpO1xuICAgIH1cbn1cbmV4cG9ydHMuQm91bmRDb3VudGVyID0gQm91bmRDb3VudGVyO1xuLyoqXG4gKiBCb3VuZFVwRG93bkNvdW50ZXIgYWxsb3dzIHRoZSBTREsgdG8gb2JzZXJ2ZS9yZWNvcmQgYSBzaW5nbGUgbWV0cmljIGV2ZW50LlxuICogVGhlIHZhbHVlIG9mIHNpbmdsZSBpbnN0cnVtZW50IGluIHRoZSBgVXBEb3duQ291bnRlcmAgYXNzb2NpYXRlZCB3aXRoXG4gKiBzcGVjaWZpZWQgTGFiZWxzLlxuICovXG5jbGFzcyBCb3VuZFVwRG93bkNvdW50ZXIgZXh0ZW5kcyBCYXNlQm91bmRJbnN0cnVtZW50IHtcbiAgICBjb25zdHJ1Y3RvcihsYWJlbHMsIGRpc2FibGVkLCB2YWx1ZVR5cGUsIGFnZ3JlZ2F0b3IpIHtcbiAgICAgICAgc3VwZXIobGFiZWxzLCBkaXNhYmxlZCwgdmFsdWVUeXBlLCBhZ2dyZWdhdG9yKTtcbiAgICB9XG4gICAgYWRkKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudXBkYXRlKHZhbHVlKTtcbiAgICB9XG59XG5leHBvcnRzLkJvdW5kVXBEb3duQ291bnRlciA9IEJvdW5kVXBEb3duQ291bnRlcjtcbi8qKlxuICogQm91bmRNZWFzdXJlIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIHRoZSB7QGxpbmsgQm91bmRNZWFzdXJlfSBpbnRlcmZhY2UuXG4gKi9cbmNsYXNzIEJvdW5kVmFsdWVSZWNvcmRlciBleHRlbmRzIEJhc2VCb3VuZEluc3RydW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKGxhYmVscywgZGlzYWJsZWQsIHZhbHVlVHlwZSwgYWdncmVnYXRvcikge1xuICAgICAgICBzdXBlcihsYWJlbHMsIGRpc2FibGVkLCB2YWx1ZVR5cGUsIGFnZ3JlZ2F0b3IpO1xuICAgIH1cbiAgICByZWNvcmQodmFsdWUpIHtcbiAgICAgICAgdGhpcy51cGRhdGUodmFsdWUpO1xuICAgIH1cbn1cbmV4cG9ydHMuQm91bmRWYWx1ZVJlY29yZGVyID0gQm91bmRWYWx1ZVJlY29yZGVyO1xuLyoqXG4gKiBCb3VuZE9ic2VydmVyIGlzIGFuIGltcGxlbWVudGF0aW9uIG9mIHRoZSB7QGxpbmsgQm91bmRPYnNlcnZlcn0gaW50ZXJmYWNlLlxuICovXG5jbGFzcyBCb3VuZE9ic2VydmVyIGV4dGVuZHMgQmFzZUJvdW5kSW5zdHJ1bWVudCB7XG4gICAgY29uc3RydWN0b3IobGFiZWxzLCBkaXNhYmxlZCwgdmFsdWVUeXBlLCBhZ2dyZWdhdG9yKSB7XG4gICAgICAgIHN1cGVyKGxhYmVscywgZGlzYWJsZWQsIHZhbHVlVHlwZSwgYWdncmVnYXRvcik7XG4gICAgfVxufVxuZXhwb3J0cy5Cb3VuZE9ic2VydmVyID0gQm91bmRPYnNlcnZlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJvdW5kSW5zdHJ1bWVudC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CounterMetric = void 0;\nconst BoundInstrument_1 = __webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst Metric_1 = __webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\");\n/** This is a SDK implementation of Counter Metric. */\nclass CounterMetric extends Metric_1.Metric {\n    constructor(name, options, _processor, resource, instrumentationLibrary) {\n        super(name, options, types_1.MetricKind.COUNTER, resource, instrumentationLibrary);\n        this._processor = _processor;\n    }\n    _makeInstrument(labels) {\n        return new BoundInstrument_1.BoundCounter(labels, this._disabled, this._valueType, this._processor.aggregatorFor(this._descriptor));\n    }\n    /**\n     * Adds the given value to the current value. Values cannot be negative.\n     * @param value the value to add.\n     * @param [labels = {}] key-values pairs that are associated with a specific metric\n     *     that you want to record.\n     */\n    add(value, labels = {}) {\n        this.bind(labels).add(value);\n    }\n}\nexports.CounterMetric = CounterMetric;\n//# sourceMappingURL=CounterMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQ291bnRlck1ldHJpYy5qcz9iYTIwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyw2RkFBbUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMsdUZBQWdCO0FBQ3hDLGlCQUFpQixtQkFBTyxDQUFDLDJFQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvQ291bnRlck1ldHJpYy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ291bnRlck1ldHJpYyA9IHZvaWQgMDtcbmNvbnN0IEJvdW5kSW5zdHJ1bWVudF8xID0gcmVxdWlyZShcIi4vQm91bmRJbnN0cnVtZW50XCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL2V4cG9ydC90eXBlc1wiKTtcbmNvbnN0IE1ldHJpY18xID0gcmVxdWlyZShcIi4vTWV0cmljXCIpO1xuLyoqIFRoaXMgaXMgYSBTREsgaW1wbGVtZW50YXRpb24gb2YgQ291bnRlciBNZXRyaWMuICovXG5jbGFzcyBDb3VudGVyTWV0cmljIGV4dGVuZHMgTWV0cmljXzEuTWV0cmljIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBvcHRpb25zLCBfcHJvY2Vzc29yLCByZXNvdXJjZSwgaW5zdHJ1bWVudGF0aW9uTGlicmFyeSkge1xuICAgICAgICBzdXBlcihuYW1lLCBvcHRpb25zLCB0eXBlc18xLk1ldHJpY0tpbmQuQ09VTlRFUiwgcmVzb3VyY2UsIGluc3RydW1lbnRhdGlvbkxpYnJhcnkpO1xuICAgICAgICB0aGlzLl9wcm9jZXNzb3IgPSBfcHJvY2Vzc29yO1xuICAgIH1cbiAgICBfbWFrZUluc3RydW1lbnQobGFiZWxzKSB7XG4gICAgICAgIHJldHVybiBuZXcgQm91bmRJbnN0cnVtZW50XzEuQm91bmRDb3VudGVyKGxhYmVscywgdGhpcy5fZGlzYWJsZWQsIHRoaXMuX3ZhbHVlVHlwZSwgdGhpcy5fcHJvY2Vzc29yLmFnZ3JlZ2F0b3JGb3IodGhpcy5fZGVzY3JpcHRvcikpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGRzIHRoZSBnaXZlbiB2YWx1ZSB0byB0aGUgY3VycmVudCB2YWx1ZS4gVmFsdWVzIGNhbm5vdCBiZSBuZWdhdGl2ZS5cbiAgICAgKiBAcGFyYW0gdmFsdWUgdGhlIHZhbHVlIHRvIGFkZC5cbiAgICAgKiBAcGFyYW0gW2xhYmVscyA9IHt9XSBrZXktdmFsdWVzIHBhaXJzIHRoYXQgYXJlIGFzc29jaWF0ZWQgd2l0aCBhIHNwZWNpZmljIG1ldHJpY1xuICAgICAqICAgICB0aGF0IHlvdSB3YW50IHRvIHJlY29yZC5cbiAgICAgKi9cbiAgICBhZGQodmFsdWUsIGxhYmVscyA9IHt9KSB7XG4gICAgICAgIHRoaXMuYmluZChsYWJlbHMpLmFkZCh2YWx1ZSk7XG4gICAgfVxufVxuZXhwb3J0cy5Db3VudGVyTWV0cmljID0gQ291bnRlck1ldHJpYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvdW50ZXJNZXRyaWMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/Meter.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/Meter.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Meter = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst api = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst resources_1 = __webpack_require__(/*! @opentelemetry/resources */ \"./node_modules/@opentelemetry/resources/build/src/index.js\");\nconst BatchObserver_1 = __webpack_require__(/*! ./BatchObserver */ \"./node_modules/@opentelemetry/metrics/build/src/BatchObserver.js\");\nconst CounterMetric_1 = __webpack_require__(/*! ./CounterMetric */ \"./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js\");\nconst Controller_1 = __webpack_require__(/*! ./export/Controller */ \"./node_modules/@opentelemetry/metrics/build/src/export/Controller.js\");\nconst NoopExporter_1 = __webpack_require__(/*! ./export/NoopExporter */ \"./node_modules/@opentelemetry/metrics/build/src/export/NoopExporter.js\");\nconst Processor_1 = __webpack_require__(/*! ./export/Processor */ \"./node_modules/@opentelemetry/metrics/build/src/export/Processor.js\");\nconst SumObserverMetric_1 = __webpack_require__(/*! ./SumObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/SumObserverMetric.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/metrics/build/src/types.js\");\nconst UpDownCounterMetric_1 = __webpack_require__(/*! ./UpDownCounterMetric */ \"./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js\");\nconst UpDownSumObserverMetric_1 = __webpack_require__(/*! ./UpDownSumObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/UpDownSumObserverMetric.js\");\nconst ValueObserverMetric_1 = __webpack_require__(/*! ./ValueObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js\");\nconst ValueRecorderMetric_1 = __webpack_require__(/*! ./ValueRecorderMetric */ \"./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js\");\nconst merge = __webpack_require__(/*! lodash.merge */ \"./node_modules/lodash.merge/index.js\");\n/**\n * Meter is an implementation of the {@link Meter} interface.\n */\nclass Meter {\n    /**\n     * Constructs a new Meter instance.\n     */\n    constructor(instrumentationLibrary, config = {}) {\n        var _a;\n        this._batchObservers = [];\n        this._metrics = new Map();\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        const mergedConfig = merge({}, types_1.DEFAULT_CONFIG, config);\n        this._processor = (_a = mergedConfig.processor) !== null && _a !== void 0 ? _a : new Processor_1.UngroupedProcessor();\n        this._resource =\n            mergedConfig.resource || resources_1.Resource.createTelemetrySDKResource();\n        this._instrumentationLibrary = instrumentationLibrary;\n        // start the push controller\n        const exporter = mergedConfig.exporter || new NoopExporter_1.NoopExporter();\n        const interval = mergedConfig.interval;\n        this._controller = new Controller_1.PushController(this, exporter, interval);\n    }\n    /**\n     * Creates and returns a new {@link ValueRecorder}.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    createValueRecorder(name, options) {\n        if (!this._isValidName(name)) {\n            api_1.diag.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_VALUE_RECORDER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({}, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const valueRecorder = new ValueRecorderMetric_1.ValueRecorderMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary);\n        this._registerMetric(name, valueRecorder);\n        return valueRecorder;\n    }\n    /**\n     * Creates a new counter metric. Generally, this kind of metric when the\n     * value is a quantity, the sum is of primary interest, and the event count\n     * and value distribution are not of primary interest.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    createCounter(name, options) {\n        if (!this._isValidName(name)) {\n            api_1.diag.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_COUNTER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({}, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const counter = new CounterMetric_1.CounterMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary);\n        this._registerMetric(name, counter);\n        return counter;\n    }\n    /**\n     * Creates a new `UpDownCounter` metric. UpDownCounter is a synchronous\n     * instrument and very similar to Counter except that Add(increment)\n     * supports negative increments. It is generally useful for capturing changes\n     * in an amount of resources used, or any quantity that rises and falls\n     * during a request.\n     *\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    createUpDownCounter(name, options) {\n        if (!this._isValidName(name)) {\n            api_1.diag.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_COUNTER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({}, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const upDownCounter = new UpDownCounterMetric_1.UpDownCounterMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary);\n        this._registerMetric(name, upDownCounter);\n        return upDownCounter;\n    }\n    /**\n     * Creates a new `ValueObserver` metric.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the value observer callback\n     */\n    createValueObserver(name, options = {}, callback) {\n        if (!this._isValidName(name)) {\n            api_1.diag.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_VALUE_OBSERVER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({}, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const valueObserver = new ValueObserverMetric_1.ValueObserverMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary, callback);\n        this._registerMetric(name, valueObserver);\n        return valueObserver;\n    }\n    createSumObserver(name, options = {}, callback) {\n        if (!this._isValidName(name)) {\n            api_1.diag.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_SUM_OBSERVER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({}, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const sumObserver = new SumObserverMetric_1.SumObserverMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary, callback);\n        this._registerMetric(name, sumObserver);\n        return sumObserver;\n    }\n    /**\n     * Creates a new `UpDownSumObserver` metric.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the value observer callback\n     */\n    createUpDownSumObserver(name, options = {}, callback) {\n        if (!this._isValidName(name)) {\n            api_1.diag.warn(`Invalid metric name ${name}. Defaulting to noop metric implementation.`);\n            return api.NOOP_UP_DOWN_SUM_OBSERVER_METRIC;\n        }\n        const opt = Object.assign(Object.assign({}, types_1.DEFAULT_METRIC_OPTIONS), options);\n        const upDownSumObserver = new UpDownSumObserverMetric_1.UpDownSumObserverMetric(name, opt, this._processor, this._resource, this._instrumentationLibrary, callback);\n        this._registerMetric(name, upDownSumObserver);\n        return upDownSumObserver;\n    }\n    /**\n     * Creates a new batch observer.\n     * @param callback the batch observer callback\n     * @param [options] the batch options.\n     */\n    createBatchObserver(callback, options = {}) {\n        const opt = Object.assign({}, options);\n        const batchObserver = new BatchObserver_1.BatchObserver(opt, callback);\n        this._batchObservers.push(batchObserver);\n        return batchObserver;\n    }\n    /**\n     * Collects all the metrics created with this `Meter` for export.\n     *\n     * Utilizes the processor to create checkpoints of the current values in\n     * each aggregator belonging to the metrics that were created with this\n     * meter instance.\n     */\n    async collect() {\n        // call batch observers first\n        const observations = this._batchObservers.map(observer => {\n            return observer.collect();\n        });\n        await Promise.all(observations);\n        // after this all remaining metrics can be run\n        const metricsRecords = Array.from(this._metrics.values()).map(metric => {\n            return metric.getMetricRecord();\n        });\n        await Promise.all(metricsRecords).then(records => {\n            records.forEach(metrics => {\n                metrics.forEach(metric => this._processor.process(metric));\n            });\n        });\n    }\n    getProcessor() {\n        return this._processor;\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this._controller.shutdown();\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n    /**\n     * Registers metric to register.\n     * @param name The name of the metric.\n     * @param metric The metric to register.\n     */\n    _registerMetric(name, metric) {\n        if (this._metrics.has(name)) {\n            api_1.diag.error(`A metric with the name ${name} has already been registered.`);\n            return;\n        }\n        this._metrics.set(name, metric);\n    }\n    /**\n     * Ensure a metric name conforms to the following rules:\n     *\n     * 1. They are non-empty strings\n     *\n     * 2. The first character must be non-numeric, non-space, non-punctuation\n     *\n     * 3. Subsequent characters must be belong to the alphanumeric characters,\n     *    '_', '.', and '-'.\n     *\n     * Names are case insensitive\n     *\n     * @param name Name of metric to be created\n     */\n    _isValidName(name) {\n        return Boolean(name.match(/^[a-z][a-z0-9_.-]*$/i));\n    }\n}\nexports.Meter = Meter;\n//# sourceMappingURL=Meter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/Meter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/MeterProvider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/MeterProvider.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeterProvider = void 0;\nconst resources_1 = __webpack_require__(/*! @opentelemetry/resources */ \"./node_modules/@opentelemetry/resources/build/src/index.js\");\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@opentelemetry/metrics/build/src/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/metrics/build/src/types.js\");\nconst merge = __webpack_require__(/*! lodash.merge */ \"./node_modules/lodash.merge/index.js\");\n/**\n * This class represents a meter provider which platform libraries can extend\n */\nclass MeterProvider {\n    constructor(config = {}) {\n        var _a;\n        this._meters = new Map();\n        this._shuttingDownPromise = Promise.resolve();\n        this._isShutdown = false;\n        const mergedConfig = merge({}, types_1.DEFAULT_CONFIG, config);\n        this.resource =\n            (_a = mergedConfig.resource) !== null && _a !== void 0 ? _a : resources_1.Resource.createTelemetrySDKResource();\n        this._config = Object.assign({}, mergedConfig, {\n            resource: this.resource,\n        });\n    }\n    /**\n     * Returns a Meter, creating one if one with the given name and version is not already created\n     *\n     * @returns Meter A Meter with the given name and version\n     */\n    getMeter(name, version, config) {\n        const key = `${name}@${version || ''}`;\n        if (!this._meters.has(key)) {\n            this._meters.set(key, new _1.Meter({ name, version }, config || this._config));\n        }\n        return this._meters.get(key);\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return Promise.all(Array.from(this._meters, ([_, meter]) => meter.shutdown()));\n            })\n                .then(() => {\n                if (this._config.exporter) {\n                    return this._config.exporter.shutdown();\n                }\n                return;\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n}\nexports.MeterProvider = MeterProvider;\n//# sourceMappingURL=MeterProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvTWV0ZXJQcm92aWRlci5qcz82MDMwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyw0RkFBMEI7QUFDdEQsV0FBVyxtQkFBTyxDQUFDLG1FQUFHO0FBQ3RCLGdCQUFnQixtQkFBTyxDQUFDLHlFQUFTO0FBQ2pDLGNBQWMsbUJBQU8sQ0FBQywwREFBYztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLEtBQUssR0FBRyxjQUFjO0FBQzdDO0FBQ0EsZ0RBQWdELGdCQUFnQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvTWV0ZXJQcm92aWRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWV0ZXJQcm92aWRlciA9IHZvaWQgMDtcbmNvbnN0IHJlc291cmNlc18xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L3Jlc291cmNlc1wiKTtcbmNvbnN0IF8xID0gcmVxdWlyZShcIi5cIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG5jb25zdCBtZXJnZSA9IHJlcXVpcmUoXCJsb2Rhc2gubWVyZ2VcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcmVwcmVzZW50cyBhIG1ldGVyIHByb3ZpZGVyIHdoaWNoIHBsYXRmb3JtIGxpYnJhcmllcyBjYW4gZXh0ZW5kXG4gKi9cbmNsYXNzIE1ldGVyUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdGhpcy5fbWV0ZXJzID0gbmV3IE1hcCgpO1xuICAgICAgICB0aGlzLl9zaHV0dGluZ0Rvd25Qcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICAgIHRoaXMuX2lzU2h1dGRvd24gPSBmYWxzZTtcbiAgICAgICAgY29uc3QgbWVyZ2VkQ29uZmlnID0gbWVyZ2Uoe30sIHR5cGVzXzEuREVGQVVMVF9DT05GSUcsIGNvbmZpZyk7XG4gICAgICAgIHRoaXMucmVzb3VyY2UgPVxuICAgICAgICAgICAgKF9hID0gbWVyZ2VkQ29uZmlnLnJlc291cmNlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiByZXNvdXJjZXNfMS5SZXNvdXJjZS5jcmVhdGVUZWxlbWV0cnlTREtSZXNvdXJjZSgpO1xuICAgICAgICB0aGlzLl9jb25maWcgPSBPYmplY3QuYXNzaWduKHt9LCBtZXJnZWRDb25maWcsIHtcbiAgICAgICAgICAgIHJlc291cmNlOiB0aGlzLnJlc291cmNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIE1ldGVyLCBjcmVhdGluZyBvbmUgaWYgb25lIHdpdGggdGhlIGdpdmVuIG5hbWUgYW5kIHZlcnNpb24gaXMgbm90IGFscmVhZHkgY3JlYXRlZFxuICAgICAqXG4gICAgICogQHJldHVybnMgTWV0ZXIgQSBNZXRlciB3aXRoIHRoZSBnaXZlbiBuYW1lIGFuZCB2ZXJzaW9uXG4gICAgICovXG4gICAgZ2V0TWV0ZXIobmFtZSwgdmVyc2lvbiwgY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IGAke25hbWV9QCR7dmVyc2lvbiB8fCAnJ31gO1xuICAgICAgICBpZiAoIXRoaXMuX21ldGVycy5oYXMoa2V5KSkge1xuICAgICAgICAgICAgdGhpcy5fbWV0ZXJzLnNldChrZXksIG5ldyBfMS5NZXRlcih7IG5hbWUsIHZlcnNpb24gfSwgY29uZmlnIHx8IHRoaXMuX2NvbmZpZykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9tZXRlcnMuZ2V0KGtleSk7XG4gICAgfVxuICAgIHNodXRkb3duKCkge1xuICAgICAgICBpZiAodGhpcy5faXNTaHV0ZG93bikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NodXR0aW5nRG93blByb21pc2U7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5faXNTaHV0ZG93biA9IHRydWU7XG4gICAgICAgIHRoaXMuX3NodXR0aW5nRG93blByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBQcm9taXNlLnJlc29sdmUoKVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoQXJyYXkuZnJvbSh0aGlzLl9tZXRlcnMsIChbXywgbWV0ZXJdKSA9PiBtZXRlci5zaHV0ZG93bigpKSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fY29uZmlnLmV4cG9ydGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuZXhwb3J0ZXIuc2h1dGRvd24oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAudGhlbihyZXNvbHZlKVxuICAgICAgICAgICAgICAgIC5jYXRjaChlID0+IHtcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzLl9zaHV0dGluZ0Rvd25Qcm9taXNlO1xuICAgIH1cbn1cbmV4cG9ydHMuTWV0ZXJQcm92aWRlciA9IE1ldGVyUHJvdmlkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZXRlclByb3ZpZGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/MeterProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/Metric.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/Metric.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Metric = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst api = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\nconst Utils_1 = __webpack_require__(/*! ./Utils */ \"./node_modules/@opentelemetry/metrics/build/src/Utils.js\");\n/** This is a SDK implementation of {@link Metric} interface. */\nclass Metric {\n    constructor(_name, _options, _kind, resource, instrumentationLibrary) {\n        this._name = _name;\n        this._options = _options;\n        this._kind = _kind;\n        this.resource = resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n        this._instruments = new Map();\n        this._disabled = !!_options.disabled;\n        this._valueType =\n            typeof _options.valueType === 'number'\n                ? _options.valueType\n                : api.ValueType.DOUBLE;\n        this._boundaries = _options.boundaries;\n        this._descriptor = this._getMetricDescriptor();\n    }\n    /**\n     * Returns an Instrument associated with specified Labels.\n     * It is recommended to keep a reference to the Instrument instead of always\n     * calling this method for each operation.\n     * @param labels key-values pairs that are associated with a specific metric\n     *     that you want to record.\n     */\n    bind(labels) {\n        const hash = Utils_1.hashLabels(labels);\n        if (this._instruments.has(hash))\n            return this._instruments.get(hash);\n        const instrument = this._makeInstrument(labels);\n        this._instruments.set(hash, instrument);\n        return instrument;\n    }\n    /**\n     * Removes the Instrument from the metric, if it is present.\n     * @param labels key-values pairs that are associated with a specific metric.\n     */\n    unbind(labels) {\n        this._instruments.delete(Utils_1.hashLabels(labels));\n    }\n    /**\n     * Clears all Instruments from the Metric.\n     */\n    clear() {\n        this._instruments.clear();\n    }\n    /**\n     * Returns kind of metric\n     */\n    getKind() {\n        return this._kind;\n    }\n    getMetricRecord() {\n        return new Promise(resolve => {\n            resolve(Array.from(this._instruments.values()).map(instrument => ({\n                descriptor: this._descriptor,\n                labels: instrument.getLabels(),\n                aggregator: instrument.getAggregator(),\n                resource: this.resource,\n                instrumentationLibrary: this.instrumentationLibrary,\n            })));\n        });\n    }\n    _getMetricDescriptor() {\n        return Object.assign({ name: this._name, description: this._options.description || '', unit: this._options.unit || '1', metricKind: this._kind, valueType: this._valueType }, (this._boundaries && { boundaries: this._boundaries }));\n    }\n}\nexports.Metric = Metric;\n//# sourceMappingURL=Metric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvTWV0cmljLmpzP2YwNzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUJBQU8sQ0FBQyxnR0FBNEI7QUFDaEQsZ0JBQWdCLG1CQUFPLENBQUMseUVBQVM7QUFDakMscUNBQXFDLGFBQWE7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSw4QkFBOEIsc0pBQXNKLHdCQUF3QiwrQkFBK0I7QUFDM087QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvTWV0cmljLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1ldHJpYyA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5jb25zdCBhcGkgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3NcIik7XG5jb25zdCBVdGlsc18xID0gcmVxdWlyZShcIi4vVXRpbHNcIik7XG4vKiogVGhpcyBpcyBhIFNESyBpbXBsZW1lbnRhdGlvbiBvZiB7QGxpbmsgTWV0cmljfSBpbnRlcmZhY2UuICovXG5jbGFzcyBNZXRyaWMge1xuICAgIGNvbnN0cnVjdG9yKF9uYW1lLCBfb3B0aW9ucywgX2tpbmQsIHJlc291cmNlLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5KSB7XG4gICAgICAgIHRoaXMuX25hbWUgPSBfbmFtZTtcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IF9vcHRpb25zO1xuICAgICAgICB0aGlzLl9raW5kID0gX2tpbmQ7XG4gICAgICAgIHRoaXMucmVzb3VyY2UgPSByZXNvdXJjZTtcbiAgICAgICAgdGhpcy5pbnN0cnVtZW50YXRpb25MaWJyYXJ5ID0gaW5zdHJ1bWVudGF0aW9uTGlicmFyeTtcbiAgICAgICAgdGhpcy5faW5zdHJ1bWVudHMgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuX2Rpc2FibGVkID0gISFfb3B0aW9ucy5kaXNhYmxlZDtcbiAgICAgICAgdGhpcy5fdmFsdWVUeXBlID1cbiAgICAgICAgICAgIHR5cGVvZiBfb3B0aW9ucy52YWx1ZVR5cGUgPT09ICdudW1iZXInXG4gICAgICAgICAgICAgICAgPyBfb3B0aW9ucy52YWx1ZVR5cGVcbiAgICAgICAgICAgICAgICA6IGFwaS5WYWx1ZVR5cGUuRE9VQkxFO1xuICAgICAgICB0aGlzLl9ib3VuZGFyaWVzID0gX29wdGlvbnMuYm91bmRhcmllcztcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRvciA9IHRoaXMuX2dldE1ldHJpY0Rlc2NyaXB0b3IoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBJbnN0cnVtZW50IGFzc29jaWF0ZWQgd2l0aCBzcGVjaWZpZWQgTGFiZWxzLlxuICAgICAqIEl0IGlzIHJlY29tbWVuZGVkIHRvIGtlZXAgYSByZWZlcmVuY2UgdG8gdGhlIEluc3RydW1lbnQgaW5zdGVhZCBvZiBhbHdheXNcbiAgICAgKiBjYWxsaW5nIHRoaXMgbWV0aG9kIGZvciBlYWNoIG9wZXJhdGlvbi5cbiAgICAgKiBAcGFyYW0gbGFiZWxzIGtleS12YWx1ZXMgcGFpcnMgdGhhdCBhcmUgYXNzb2NpYXRlZCB3aXRoIGEgc3BlY2lmaWMgbWV0cmljXG4gICAgICogICAgIHRoYXQgeW91IHdhbnQgdG8gcmVjb3JkLlxuICAgICAqL1xuICAgIGJpbmQobGFiZWxzKSB7XG4gICAgICAgIGNvbnN0IGhhc2ggPSBVdGlsc18xLmhhc2hMYWJlbHMobGFiZWxzKTtcbiAgICAgICAgaWYgKHRoaXMuX2luc3RydW1lbnRzLmhhcyhoYXNoKSlcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9pbnN0cnVtZW50cy5nZXQoaGFzaCk7XG4gICAgICAgIGNvbnN0IGluc3RydW1lbnQgPSB0aGlzLl9tYWtlSW5zdHJ1bWVudChsYWJlbHMpO1xuICAgICAgICB0aGlzLl9pbnN0cnVtZW50cy5zZXQoaGFzaCwgaW5zdHJ1bWVudCk7XG4gICAgICAgIHJldHVybiBpbnN0cnVtZW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIHRoZSBJbnN0cnVtZW50IGZyb20gdGhlIG1ldHJpYywgaWYgaXQgaXMgcHJlc2VudC5cbiAgICAgKiBAcGFyYW0gbGFiZWxzIGtleS12YWx1ZXMgcGFpcnMgdGhhdCBhcmUgYXNzb2NpYXRlZCB3aXRoIGEgc3BlY2lmaWMgbWV0cmljLlxuICAgICAqL1xuICAgIHVuYmluZChsYWJlbHMpIHtcbiAgICAgICAgdGhpcy5faW5zdHJ1bWVudHMuZGVsZXRlKFV0aWxzXzEuaGFzaExhYmVscyhsYWJlbHMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xlYXJzIGFsbCBJbnN0cnVtZW50cyBmcm9tIHRoZSBNZXRyaWMuXG4gICAgICovXG4gICAgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuX2luc3RydW1lbnRzLmNsZWFyKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMga2luZCBvZiBtZXRyaWNcbiAgICAgKi9cbiAgICBnZXRLaW5kKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fa2luZDtcbiAgICB9XG4gICAgZ2V0TWV0cmljUmVjb3JkKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKEFycmF5LmZyb20odGhpcy5faW5zdHJ1bWVudHMudmFsdWVzKCkpLm1hcChpbnN0cnVtZW50ID0+ICh7XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRvcjogdGhpcy5fZGVzY3JpcHRvcixcbiAgICAgICAgICAgICAgICBsYWJlbHM6IGluc3RydW1lbnQuZ2V0TGFiZWxzKCksXG4gICAgICAgICAgICAgICAgYWdncmVnYXRvcjogaW5zdHJ1bWVudC5nZXRBZ2dyZWdhdG9yKCksXG4gICAgICAgICAgICAgICAgcmVzb3VyY2U6IHRoaXMucmVzb3VyY2UsXG4gICAgICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9uTGlicmFyeTogdGhpcy5pbnN0cnVtZW50YXRpb25MaWJyYXJ5LFxuICAgICAgICAgICAgfSkpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9nZXRNZXRyaWNEZXNjcmlwdG9yKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7IG5hbWU6IHRoaXMuX25hbWUsIGRlc2NyaXB0aW9uOiB0aGlzLl9vcHRpb25zLmRlc2NyaXB0aW9uIHx8ICcnLCB1bml0OiB0aGlzLl9vcHRpb25zLnVuaXQgfHwgJzEnLCBtZXRyaWNLaW5kOiB0aGlzLl9raW5kLCB2YWx1ZVR5cGU6IHRoaXMuX3ZhbHVlVHlwZSB9LCAodGhpcy5fYm91bmRhcmllcyAmJiB7IGJvdW5kYXJpZXM6IHRoaXMuX2JvdW5kYXJpZXMgfSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuTWV0cmljID0gTWV0cmljO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWV0cmljLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/Metric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/ObserverResult.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/ObserverResult.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObserverResult = void 0;\n/**\n * Implementation of {@link TypeObserverResult}\n */\nclass ObserverResult {\n    constructor() {\n        this.values = new Map();\n    }\n    observe(value, labels) {\n        this.values.set(labels, value);\n    }\n}\nexports.ObserverResult = ObserverResult;\n//# sourceMappingURL=ObserverResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvT2JzZXJ2ZXJSZXN1bHQuanM/NDZhZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9PYnNlcnZlclJlc3VsdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT2JzZXJ2ZXJSZXN1bHQgPSB2b2lkIDA7XG4vKipcbiAqIEltcGxlbWVudGF0aW9uIG9mIHtAbGluayBUeXBlT2JzZXJ2ZXJSZXN1bHR9XG4gKi9cbmNsYXNzIE9ic2VydmVyUmVzdWx0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy52YWx1ZXMgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIG9ic2VydmUodmFsdWUsIGxhYmVscykge1xuICAgICAgICB0aGlzLnZhbHVlcy5zZXQobGFiZWxzLCB2YWx1ZSk7XG4gICAgfVxufVxuZXhwb3J0cy5PYnNlcnZlclJlc3VsdCA9IE9ic2VydmVyUmVzdWx0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T2JzZXJ2ZXJSZXN1bHQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/ObserverResult.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/SumObserverMetric.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/SumObserverMetric.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SumObserverMetric = void 0;\nconst BaseObserverMetric_1 = __webpack_require__(/*! ./BaseObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\n/** This is a SDK implementation of SumObserver Metric. */\nclass SumObserverMetric extends BaseObserverMetric_1.BaseObserverMetric {\n    constructor(name, options, processor, resource, instrumentationLibrary, callback) {\n        super(name, options, processor, resource, types_1.MetricKind.SUM_OBSERVER, instrumentationLibrary, callback);\n    }\n    _processResults(observerResult) {\n        observerResult.values.forEach((value, labels) => {\n            const instrument = this.bind(labels);\n            // SumObserver is monotonic which means it should only accept values\n            // greater or equal then previous value\n            const previous = instrument.getAggregator().toPoint();\n            let previousValue = -Infinity;\n            if (previous.timestamp[0] !== 0 || previous.timestamp[1] !== 0) {\n                previousValue = previous.value;\n            }\n            if (value >= previousValue) {\n                instrument.update(value);\n            }\n        });\n    }\n}\nexports.SumObserverMetric = SumObserverMetric;\n//# sourceMappingURL=SumObserverMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvU3VtT2JzZXJ2ZXJNZXRyaWMuanM/YzBiZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsNkJBQTZCLG1CQUFPLENBQUMsbUdBQXNCO0FBQzNELGdCQUFnQixtQkFBTyxDQUFDLHVGQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvU3VtT2JzZXJ2ZXJNZXRyaWMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN1bU9ic2VydmVyTWV0cmljID0gdm9pZCAwO1xuY29uc3QgQmFzZU9ic2VydmVyTWV0cmljXzEgPSByZXF1aXJlKFwiLi9CYXNlT2JzZXJ2ZXJNZXRyaWNcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vZXhwb3J0L3R5cGVzXCIpO1xuLyoqIFRoaXMgaXMgYSBTREsgaW1wbGVtZW50YXRpb24gb2YgU3VtT2JzZXJ2ZXIgTWV0cmljLiAqL1xuY2xhc3MgU3VtT2JzZXJ2ZXJNZXRyaWMgZXh0ZW5kcyBCYXNlT2JzZXJ2ZXJNZXRyaWNfMS5CYXNlT2JzZXJ2ZXJNZXRyaWMge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIG9wdGlvbnMsIHByb2Nlc3NvciwgcmVzb3VyY2UsIGluc3RydW1lbnRhdGlvbkxpYnJhcnksIGNhbGxiYWNrKSB7XG4gICAgICAgIHN1cGVyKG5hbWUsIG9wdGlvbnMsIHByb2Nlc3NvciwgcmVzb3VyY2UsIHR5cGVzXzEuTWV0cmljS2luZC5TVU1fT0JTRVJWRVIsIGluc3RydW1lbnRhdGlvbkxpYnJhcnksIGNhbGxiYWNrKTtcbiAgICB9XG4gICAgX3Byb2Nlc3NSZXN1bHRzKG9ic2VydmVyUmVzdWx0KSB7XG4gICAgICAgIG9ic2VydmVyUmVzdWx0LnZhbHVlcy5mb3JFYWNoKCh2YWx1ZSwgbGFiZWxzKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpbnN0cnVtZW50ID0gdGhpcy5iaW5kKGxhYmVscyk7XG4gICAgICAgICAgICAvLyBTdW1PYnNlcnZlciBpcyBtb25vdG9uaWMgd2hpY2ggbWVhbnMgaXQgc2hvdWxkIG9ubHkgYWNjZXB0IHZhbHVlc1xuICAgICAgICAgICAgLy8gZ3JlYXRlciBvciBlcXVhbCB0aGVuIHByZXZpb3VzIHZhbHVlXG4gICAgICAgICAgICBjb25zdCBwcmV2aW91cyA9IGluc3RydW1lbnQuZ2V0QWdncmVnYXRvcigpLnRvUG9pbnQoKTtcbiAgICAgICAgICAgIGxldCBwcmV2aW91c1ZhbHVlID0gLUluZmluaXR5O1xuICAgICAgICAgICAgaWYgKHByZXZpb3VzLnRpbWVzdGFtcFswXSAhPT0gMCB8fCBwcmV2aW91cy50aW1lc3RhbXBbMV0gIT09IDApIHtcbiAgICAgICAgICAgICAgICBwcmV2aW91c1ZhbHVlID0gcHJldmlvdXMudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmFsdWUgPj0gcHJldmlvdXNWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGluc3RydW1lbnQudXBkYXRlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5TdW1PYnNlcnZlck1ldHJpYyA9IFN1bU9ic2VydmVyTWV0cmljO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3VtT2JzZXJ2ZXJNZXRyaWMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/SumObserverMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpDownCounterMetric = void 0;\nconst BoundInstrument_1 = __webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst Metric_1 = __webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\");\n/** This is a SDK implementation of UpDownCounter Metric. */\nclass UpDownCounterMetric extends Metric_1.Metric {\n    constructor(name, options, _processor, resource, instrumentationLibrary) {\n        super(name, options, types_1.MetricKind.UP_DOWN_COUNTER, resource, instrumentationLibrary);\n        this._processor = _processor;\n    }\n    _makeInstrument(labels) {\n        return new BoundInstrument_1.BoundUpDownCounter(labels, this._disabled, this._valueType, this._processor.aggregatorFor(this._descriptor));\n    }\n    /**\n     * Adds the given value to the current value. Values cannot be negative.\n     * @param value the value to add.\n     * @param [labels = {}] key-values pairs that are associated with a specific\n     *     metric that you want to record.\n     */\n    add(value, labels = {}) {\n        this.bind(labels).add(value);\n    }\n}\nexports.UpDownCounterMetric = UpDownCounterMetric;\n//# sourceMappingURL=UpDownCounterMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXBEb3duQ291bnRlck1ldHJpYy5qcz8yY2NlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyw2RkFBbUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMsdUZBQWdCO0FBQ3hDLGlCQUFpQixtQkFBTyxDQUFDLDJFQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXBEb3duQ291bnRlck1ldHJpYy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXBEb3duQ291bnRlck1ldHJpYyA9IHZvaWQgMDtcbmNvbnN0IEJvdW5kSW5zdHJ1bWVudF8xID0gcmVxdWlyZShcIi4vQm91bmRJbnN0cnVtZW50XCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL2V4cG9ydC90eXBlc1wiKTtcbmNvbnN0IE1ldHJpY18xID0gcmVxdWlyZShcIi4vTWV0cmljXCIpO1xuLyoqIFRoaXMgaXMgYSBTREsgaW1wbGVtZW50YXRpb24gb2YgVXBEb3duQ291bnRlciBNZXRyaWMuICovXG5jbGFzcyBVcERvd25Db3VudGVyTWV0cmljIGV4dGVuZHMgTWV0cmljXzEuTWV0cmljIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBvcHRpb25zLCBfcHJvY2Vzc29yLCByZXNvdXJjZSwgaW5zdHJ1bWVudGF0aW9uTGlicmFyeSkge1xuICAgICAgICBzdXBlcihuYW1lLCBvcHRpb25zLCB0eXBlc18xLk1ldHJpY0tpbmQuVVBfRE9XTl9DT1VOVEVSLCByZXNvdXJjZSwgaW5zdHJ1bWVudGF0aW9uTGlicmFyeSk7XG4gICAgICAgIHRoaXMuX3Byb2Nlc3NvciA9IF9wcm9jZXNzb3I7XG4gICAgfVxuICAgIF9tYWtlSW5zdHJ1bWVudChsYWJlbHMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBCb3VuZEluc3RydW1lbnRfMS5Cb3VuZFVwRG93bkNvdW50ZXIobGFiZWxzLCB0aGlzLl9kaXNhYmxlZCwgdGhpcy5fdmFsdWVUeXBlLCB0aGlzLl9wcm9jZXNzb3IuYWdncmVnYXRvckZvcih0aGlzLl9kZXNjcmlwdG9yKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZHMgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSBjdXJyZW50IHZhbHVlLiBWYWx1ZXMgY2Fubm90IGJlIG5lZ2F0aXZlLlxuICAgICAqIEBwYXJhbSB2YWx1ZSB0aGUgdmFsdWUgdG8gYWRkLlxuICAgICAqIEBwYXJhbSBbbGFiZWxzID0ge31dIGtleS12YWx1ZXMgcGFpcnMgdGhhdCBhcmUgYXNzb2NpYXRlZCB3aXRoIGEgc3BlY2lmaWNcbiAgICAgKiAgICAgbWV0cmljIHRoYXQgeW91IHdhbnQgdG8gcmVjb3JkLlxuICAgICAqL1xuICAgIGFkZCh2YWx1ZSwgbGFiZWxzID0ge30pIHtcbiAgICAgICAgdGhpcy5iaW5kKGxhYmVscykuYWRkKHZhbHVlKTtcbiAgICB9XG59XG5leHBvcnRzLlVwRG93bkNvdW50ZXJNZXRyaWMgPSBVcERvd25Db3VudGVyTWV0cmljO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VXBEb3duQ291bnRlck1ldHJpYy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/UpDownSumObserverMetric.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/UpDownSumObserverMetric.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpDownSumObserverMetric = void 0;\nconst BaseObserverMetric_1 = __webpack_require__(/*! ./BaseObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\n/** This is a SDK implementation of UpDownSumObserver Metric. */\nclass UpDownSumObserverMetric extends BaseObserverMetric_1.BaseObserverMetric {\n    constructor(name, options, processor, resource, instrumentationLibrary, callback) {\n        super(name, options, processor, resource, types_1.MetricKind.UP_DOWN_SUM_OBSERVER, instrumentationLibrary, callback);\n    }\n}\nexports.UpDownSumObserverMetric = UpDownSumObserverMetric;\n//# sourceMappingURL=UpDownSumObserverMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXBEb3duU3VtT2JzZXJ2ZXJNZXRyaWMuanM/Mjg4ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsNkJBQTZCLG1CQUFPLENBQUMsbUdBQXNCO0FBQzNELGdCQUFnQixtQkFBTyxDQUFDLHVGQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL1VwRG93blN1bU9ic2VydmVyTWV0cmljLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VcERvd25TdW1PYnNlcnZlck1ldHJpYyA9IHZvaWQgMDtcbmNvbnN0IEJhc2VPYnNlcnZlck1ldHJpY18xID0gcmVxdWlyZShcIi4vQmFzZU9ic2VydmVyTWV0cmljXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL2V4cG9ydC90eXBlc1wiKTtcbi8qKiBUaGlzIGlzIGEgU0RLIGltcGxlbWVudGF0aW9uIG9mIFVwRG93blN1bU9ic2VydmVyIE1ldHJpYy4gKi9cbmNsYXNzIFVwRG93blN1bU9ic2VydmVyTWV0cmljIGV4dGVuZHMgQmFzZU9ic2VydmVyTWV0cmljXzEuQmFzZU9ic2VydmVyTWV0cmljIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBvcHRpb25zLCBwcm9jZXNzb3IsIHJlc291cmNlLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5LCBjYWxsYmFjaykge1xuICAgICAgICBzdXBlcihuYW1lLCBvcHRpb25zLCBwcm9jZXNzb3IsIHJlc291cmNlLCB0eXBlc18xLk1ldHJpY0tpbmQuVVBfRE9XTl9TVU1fT0JTRVJWRVIsIGluc3RydW1lbnRhdGlvbkxpYnJhcnksIGNhbGxiYWNrKTtcbiAgICB9XG59XG5leHBvcnRzLlVwRG93blN1bU9ic2VydmVyTWV0cmljID0gVXBEb3duU3VtT2JzZXJ2ZXJNZXRyaWM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1VcERvd25TdW1PYnNlcnZlck1ldHJpYy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/UpDownSumObserverMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/Utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/Utils.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashLabels = exports.notNull = void 0;\n/**\n * Type guard to remove nulls from arrays\n *\n * @param value value to be checked for null equality\n */\nfunction notNull(value) {\n    return value !== null;\n}\nexports.notNull = notNull;\n/**\n * Converting the unordered labels into unique identifier string.\n * @param labels user provided unordered Labels.\n */\nfunction hashLabels(labels) {\n    let keys = Object.keys(labels);\n    if (keys.length === 0)\n        return '';\n    keys = keys.sort();\n    return keys.reduce((result, key) => {\n        if (result.length > 2) {\n            result += ',';\n        }\n        return (result += key + ':' + labels[key]);\n    }, '|#');\n}\nexports.hashLabels = hashLabels;\n//# sourceMappingURL=Utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXRpbHMuanM/MDA1MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhc2hMYWJlbHMgPSBleHBvcnRzLm5vdE51bGwgPSB2b2lkIDA7XG4vKipcbiAqIFR5cGUgZ3VhcmQgdG8gcmVtb3ZlIG51bGxzIGZyb20gYXJyYXlzXG4gKlxuICogQHBhcmFtIHZhbHVlIHZhbHVlIHRvIGJlIGNoZWNrZWQgZm9yIG51bGwgZXF1YWxpdHlcbiAqL1xuZnVuY3Rpb24gbm90TnVsbCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPT0gbnVsbDtcbn1cbmV4cG9ydHMubm90TnVsbCA9IG5vdE51bGw7XG4vKipcbiAqIENvbnZlcnRpbmcgdGhlIHVub3JkZXJlZCBsYWJlbHMgaW50byB1bmlxdWUgaWRlbnRpZmllciBzdHJpbmcuXG4gKiBAcGFyYW0gbGFiZWxzIHVzZXIgcHJvdmlkZWQgdW5vcmRlcmVkIExhYmVscy5cbiAqL1xuZnVuY3Rpb24gaGFzaExhYmVscyhsYWJlbHMpIHtcbiAgICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKGxhYmVscyk7XG4gICAgaWYgKGtleXMubGVuZ3RoID09PSAwKVxuICAgICAgICByZXR1cm4gJyc7XG4gICAga2V5cyA9IGtleXMuc29ydCgpO1xuICAgIHJldHVybiBrZXlzLnJlZHVjZSgocmVzdWx0LCBrZXkpID0+IHtcbiAgICAgICAgaWYgKHJlc3VsdC5sZW5ndGggPiAyKSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gJywnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAocmVzdWx0ICs9IGtleSArICc6JyArIGxhYmVsc1trZXldKTtcbiAgICB9LCAnfCMnKTtcbn1cbmV4cG9ydHMuaGFzaExhYmVscyA9IGhhc2hMYWJlbHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1VdGlscy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/Utils.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueObserverMetric = void 0;\nconst BaseObserverMetric_1 = __webpack_require__(/*! ./BaseObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/BaseObserverMetric.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\n/** This is a SDK implementation of Value Observer Metric. */\nclass ValueObserverMetric extends BaseObserverMetric_1.BaseObserverMetric {\n    constructor(name, options, processor, resource, instrumentationLibrary, callback) {\n        super(name, options, processor, resource, types_1.MetricKind.VALUE_OBSERVER, instrumentationLibrary, callback);\n    }\n}\nexports.ValueObserverMetric = ValueObserverMetric;\n//# sourceMappingURL=ValueObserverMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVmFsdWVPYnNlcnZlck1ldHJpYy5qcz9jZWVhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSw2QkFBNkIsbUJBQU8sQ0FBQyxtR0FBc0I7QUFDM0QsZ0JBQWdCLG1CQUFPLENBQUMsdUZBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVmFsdWVPYnNlcnZlck1ldHJpYy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WYWx1ZU9ic2VydmVyTWV0cmljID0gdm9pZCAwO1xuY29uc3QgQmFzZU9ic2VydmVyTWV0cmljXzEgPSByZXF1aXJlKFwiLi9CYXNlT2JzZXJ2ZXJNZXRyaWNcIik7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4vZXhwb3J0L3R5cGVzXCIpO1xuLyoqIFRoaXMgaXMgYSBTREsgaW1wbGVtZW50YXRpb24gb2YgVmFsdWUgT2JzZXJ2ZXIgTWV0cmljLiAqL1xuY2xhc3MgVmFsdWVPYnNlcnZlck1ldHJpYyBleHRlbmRzIEJhc2VPYnNlcnZlck1ldHJpY18xLkJhc2VPYnNlcnZlck1ldHJpYyB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgb3B0aW9ucywgcHJvY2Vzc29yLCByZXNvdXJjZSwgaW5zdHJ1bWVudGF0aW9uTGlicmFyeSwgY2FsbGJhY2spIHtcbiAgICAgICAgc3VwZXIobmFtZSwgb3B0aW9ucywgcHJvY2Vzc29yLCByZXNvdXJjZSwgdHlwZXNfMS5NZXRyaWNLaW5kLlZBTFVFX09CU0VSVkVSLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5LCBjYWxsYmFjayk7XG4gICAgfVxufVxuZXhwb3J0cy5WYWx1ZU9ic2VydmVyTWV0cmljID0gVmFsdWVPYnNlcnZlck1ldHJpYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZhbHVlT2JzZXJ2ZXJNZXRyaWMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueRecorderMetric = void 0;\nconst BoundInstrument_1 = __webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\");\nconst types_1 = __webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst Metric_1 = __webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\");\n/** This is a SDK implementation of Value Recorder Metric. */\nclass ValueRecorderMetric extends Metric_1.Metric {\n    constructor(name, options, _processor, resource, instrumentationLibrary) {\n        super(name, options, types_1.MetricKind.VALUE_RECORDER, resource, instrumentationLibrary);\n        this._processor = _processor;\n    }\n    _makeInstrument(labels) {\n        return new BoundInstrument_1.BoundValueRecorder(labels, this._disabled, this._valueType, this._processor.aggregatorFor(this._descriptor));\n    }\n    record(value, labels = {}) {\n        this.bind(labels).record(value);\n    }\n}\nexports.ValueRecorderMetric = ValueRecorderMetric;\n//# sourceMappingURL=ValueRecorderMetric.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvVmFsdWVSZWNvcmRlck1ldHJpYy5qcz8yNzc3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyw2RkFBbUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMsdUZBQWdCO0FBQ3hDLGlCQUFpQixtQkFBTyxDQUFDLDJFQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL1ZhbHVlUmVjb3JkZXJNZXRyaWMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZhbHVlUmVjb3JkZXJNZXRyaWMgPSB2b2lkIDA7XG5jb25zdCBCb3VuZEluc3RydW1lbnRfMSA9IHJlcXVpcmUoXCIuL0JvdW5kSW5zdHJ1bWVudFwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi9leHBvcnQvdHlwZXNcIik7XG5jb25zdCBNZXRyaWNfMSA9IHJlcXVpcmUoXCIuL01ldHJpY1wiKTtcbi8qKiBUaGlzIGlzIGEgU0RLIGltcGxlbWVudGF0aW9uIG9mIFZhbHVlIFJlY29yZGVyIE1ldHJpYy4gKi9cbmNsYXNzIFZhbHVlUmVjb3JkZXJNZXRyaWMgZXh0ZW5kcyBNZXRyaWNfMS5NZXRyaWMge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIG9wdGlvbnMsIF9wcm9jZXNzb3IsIHJlc291cmNlLCBpbnN0cnVtZW50YXRpb25MaWJyYXJ5KSB7XG4gICAgICAgIHN1cGVyKG5hbWUsIG9wdGlvbnMsIHR5cGVzXzEuTWV0cmljS2luZC5WQUxVRV9SRUNPUkRFUiwgcmVzb3VyY2UsIGluc3RydW1lbnRhdGlvbkxpYnJhcnkpO1xuICAgICAgICB0aGlzLl9wcm9jZXNzb3IgPSBfcHJvY2Vzc29yO1xuICAgIH1cbiAgICBfbWFrZUluc3RydW1lbnQobGFiZWxzKSB7XG4gICAgICAgIHJldHVybiBuZXcgQm91bmRJbnN0cnVtZW50XzEuQm91bmRWYWx1ZVJlY29yZGVyKGxhYmVscywgdGhpcy5fZGlzYWJsZWQsIHRoaXMuX3ZhbHVlVHlwZSwgdGhpcy5fcHJvY2Vzc29yLmFnZ3JlZ2F0b3JGb3IodGhpcy5fZGVzY3JpcHRvcikpO1xuICAgIH1cbiAgICByZWNvcmQodmFsdWUsIGxhYmVscyA9IHt9KSB7XG4gICAgICAgIHRoaXMuYmluZChsYWJlbHMpLnJlY29yZCh2YWx1ZSk7XG4gICAgfVxufVxuZXhwb3J0cy5WYWx1ZVJlY29yZGVyTWV0cmljID0gVmFsdWVSZWNvcmRlck1ldHJpYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZhbHVlUmVjb3JkZXJNZXRyaWMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/ConsoleMetricExporter.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/ConsoleMetricExporter.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleMetricExporter = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * This is implementation of {@link MetricExporter} that prints metrics data to\n * the console. This class can be used for diagnostic purposes.\n */\n/* eslint-disable no-console */\nclass ConsoleMetricExporter {\n    export(metrics, resultCallback) {\n        for (const metric of metrics) {\n            console.log(metric.descriptor);\n            console.log(metric.labels);\n            const point = metric.aggregator.toPoint();\n            if (typeof point.value === 'number') {\n                console.log('value: ' + point.value);\n            }\n            else if (typeof point.value.buckets === 'object') {\n                const histogram = point.value;\n                console.log(`count: ${histogram.count}, sum: ${histogram.sum}, buckets: ${histogram.buckets}`);\n            }\n            else {\n                console.log(point.value);\n            }\n        }\n        return resultCallback({ code: core_1.ExportResultCode.SUCCESS });\n    }\n    shutdown() {\n        // By default does nothing\n        return Promise.resolve();\n    }\n}\nexports.ConsoleMetricExporter = ConsoleMetricExporter;\n//# sourceMappingURL=ConsoleMetricExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L0NvbnNvbGVNZXRyaWNFeHBvcnRlci5qcz80YjI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxlQUFlLG1CQUFPLENBQUMsa0ZBQXFCO0FBQzVDO0FBQ0EsOEJBQThCLHFCQUFxQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdCQUFnQixTQUFTLGNBQWMsYUFBYSxrQkFBa0I7QUFDNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQix3Q0FBd0M7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvQ29uc29sZU1ldHJpY0V4cG9ydGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25zb2xlTWV0cmljRXhwb3J0ZXIgPSB2b2lkIDA7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbi8qKlxuICogVGhpcyBpcyBpbXBsZW1lbnRhdGlvbiBvZiB7QGxpbmsgTWV0cmljRXhwb3J0ZXJ9IHRoYXQgcHJpbnRzIG1ldHJpY3MgZGF0YSB0b1xuICogdGhlIGNvbnNvbGUuIFRoaXMgY2xhc3MgY2FuIGJlIHVzZWQgZm9yIGRpYWdub3N0aWMgcHVycG9zZXMuXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbmNsYXNzIENvbnNvbGVNZXRyaWNFeHBvcnRlciB7XG4gICAgZXhwb3J0KG1ldHJpY3MsIHJlc3VsdENhbGxiYWNrKSB7XG4gICAgICAgIGZvciAoY29uc3QgbWV0cmljIG9mIG1ldHJpY3MpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG1ldHJpYy5kZXNjcmlwdG9yKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG1ldHJpYy5sYWJlbHMpO1xuICAgICAgICAgICAgY29uc3QgcG9pbnQgPSBtZXRyaWMuYWdncmVnYXRvci50b1BvaW50KCk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHBvaW50LnZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd2YWx1ZTogJyArIHBvaW50LnZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBwb2ludC52YWx1ZS5idWNrZXRzID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhpc3RvZ3JhbSA9IHBvaW50LnZhbHVlO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBjb3VudDogJHtoaXN0b2dyYW0uY291bnR9LCBzdW06ICR7aGlzdG9ncmFtLnN1bX0sIGJ1Y2tldHM6ICR7aGlzdG9ncmFtLmJ1Y2tldHN9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwb2ludC52YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdENhbGxiYWNrKHsgY29kZTogY29yZV8xLkV4cG9ydFJlc3VsdENvZGUuU1VDQ0VTUyB9KTtcbiAgICB9XG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIC8vIEJ5IGRlZmF1bHQgZG9lcyBub3RoaW5nXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbnNvbGVNZXRyaWNFeHBvcnRlciA9IENvbnNvbGVNZXRyaWNFeHBvcnRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnNvbGVNZXRyaWNFeHBvcnRlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/ConsoleMetricExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/Controller.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/Controller.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushController = exports.Controller = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst DEFAULT_EXPORT_INTERVAL = 60000;\nclass Controller {\n}\nexports.Controller = Controller;\n/** Controller organizes a periodic push of metric data. */\nclass PushController extends Controller {\n    constructor(_meter, _exporter, interval = DEFAULT_EXPORT_INTERVAL) {\n        super();\n        this._meter = _meter;\n        this._exporter = _exporter;\n        this._timer = setInterval(() => {\n            this._collect().catch(err => {\n                core_1.globalErrorHandler(err);\n            });\n        }, interval);\n        core_1.unrefTimer(this._timer);\n    }\n    shutdown() {\n        clearInterval(this._timer);\n        return this._collect();\n    }\n    async _collect() {\n        await this._meter.collect();\n        return new Promise(resolve => {\n            this._exporter.export(this._meter.getProcessor().checkPointSet(), result => {\n                var _a;\n                if (result.code !== core_1.ExportResultCode.SUCCESS) {\n                    core_1.globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error('PushController: export failed in _collect'));\n                }\n                resolve();\n            });\n        });\n    }\n}\nexports.PushController = PushController;\n//# sourceMappingURL=Controller.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L0NvbnRyb2xsZXIuanM/YjQyMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLGtGQUFxQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvQ29udHJvbGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHVzaENvbnRyb2xsZXIgPSBleHBvcnRzLkNvbnRyb2xsZXIgPSB2b2lkIDA7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbmNvbnN0IERFRkFVTFRfRVhQT1JUX0lOVEVSVkFMID0gNjAwMDA7XG5jbGFzcyBDb250cm9sbGVyIHtcbn1cbmV4cG9ydHMuQ29udHJvbGxlciA9IENvbnRyb2xsZXI7XG4vKiogQ29udHJvbGxlciBvcmdhbml6ZXMgYSBwZXJpb2RpYyBwdXNoIG9mIG1ldHJpYyBkYXRhLiAqL1xuY2xhc3MgUHVzaENvbnRyb2xsZXIgZXh0ZW5kcyBDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihfbWV0ZXIsIF9leHBvcnRlciwgaW50ZXJ2YWwgPSBERUZBVUxUX0VYUE9SVF9JTlRFUlZBTCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLl9tZXRlciA9IF9tZXRlcjtcbiAgICAgICAgdGhpcy5fZXhwb3J0ZXIgPSBfZXhwb3J0ZXI7XG4gICAgICAgIHRoaXMuX3RpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fY29sbGVjdCgpLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgY29yZV8xLmdsb2JhbEVycm9ySGFuZGxlcihlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIGludGVydmFsKTtcbiAgICAgICAgY29yZV8xLnVucmVmVGltZXIodGhpcy5fdGltZXIpO1xuICAgIH1cbiAgICBzaHV0ZG93bigpIHtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLl90aW1lcik7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2xsZWN0KCk7XG4gICAgfVxuICAgIGFzeW5jIF9jb2xsZWN0KCkge1xuICAgICAgICBhd2FpdCB0aGlzLl9tZXRlci5jb2xsZWN0KCk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2V4cG9ydGVyLmV4cG9ydCh0aGlzLl9tZXRlci5nZXRQcm9jZXNzb3IoKS5jaGVja1BvaW50U2V0KCksIHJlc3VsdCA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuY29kZSAhPT0gY29yZV8xLkV4cG9ydFJlc3VsdENvZGUuU1VDQ0VTUykge1xuICAgICAgICAgICAgICAgICAgICBjb3JlXzEuZ2xvYmFsRXJyb3JIYW5kbGVyKChfYSA9IHJlc3VsdC5lcnJvcikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbmV3IEVycm9yKCdQdXNoQ29udHJvbGxlcjogZXhwb3J0IGZhaWxlZCBpbiBfY29sbGVjdCcpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuUHVzaENvbnRyb2xsZXIgPSBQdXNoQ29udHJvbGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnRyb2xsZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/Controller.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/NoopExporter.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/NoopExporter.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopExporter = void 0;\nclass NoopExporter {\n    // By default does nothing\n    export(_metrics, _resultCallback) { }\n    // By default does nothing\n    shutdown() {\n        return Promise.resolve();\n    }\n}\nexports.NoopExporter = NoopExporter;\n//# sourceMappingURL=NoopExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L05vb3BFeHBvcnRlci5qcz81NjI2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL2V4cG9ydC9Ob29wRXhwb3J0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vb3BFeHBvcnRlciA9IHZvaWQgMDtcbmNsYXNzIE5vb3BFeHBvcnRlciB7XG4gICAgLy8gQnkgZGVmYXVsdCBkb2VzIG5vdGhpbmdcbiAgICBleHBvcnQoX21ldHJpY3MsIF9yZXN1bHRDYWxsYmFjaykgeyB9XG4gICAgLy8gQnkgZGVmYXVsdCBkb2VzIG5vdGhpbmdcbiAgICBzaHV0ZG93bigpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbn1cbmV4cG9ydHMuTm9vcEV4cG9ydGVyID0gTm9vcEV4cG9ydGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Tm9vcEV4cG9ydGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/NoopExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/Processor.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/Processor.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UngroupedProcessor = exports.Processor = void 0;\nconst aggregators = __webpack_require__(/*! ./aggregators */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\n/**\n * Base class for all processor types.\n *\n * The processor is responsible for storing the aggregators and aggregated\n * values received from updates from metrics in the meter. The stored values\n * will be sent to an exporter for exporting.\n */\nclass Processor {\n    constructor() {\n        this._batchMap = new Map();\n    }\n    checkPointSet() {\n        return Array.from(this._batchMap.values());\n    }\n}\nexports.Processor = Processor;\n/**\n * Processor which retains all dimensions/labels. It accepts all records and\n * passes them for exporting.\n */\nclass UngroupedProcessor extends Processor {\n    aggregatorFor(metricDescriptor) {\n        switch (metricDescriptor.metricKind) {\n            case types_1.MetricKind.COUNTER:\n            case types_1.MetricKind.UP_DOWN_COUNTER:\n                return new aggregators.SumAggregator();\n            case types_1.MetricKind.SUM_OBSERVER:\n            case types_1.MetricKind.UP_DOWN_SUM_OBSERVER:\n            case types_1.MetricKind.VALUE_OBSERVER:\n                return new aggregators.LastValueAggregator();\n            case types_1.MetricKind.VALUE_RECORDER:\n                return new aggregators.HistogramAggregator(metricDescriptor.boundaries || [Infinity]);\n            default:\n                return new aggregators.LastValueAggregator();\n        }\n    }\n    process(record) {\n        const labels = Object.keys(record.labels)\n            .map(k => `${k}=${record.labels[k]}`)\n            .join(',');\n        this._batchMap.set(record.descriptor.name + labels, record);\n    }\n}\nexports.UngroupedProcessor = UngroupedProcessor;\n//# sourceMappingURL=Processor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L1Byb2Nlc3Nvci5qcz9lN2E0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyxrR0FBZTtBQUMzQyxnQkFBZ0IsbUJBQU8sQ0FBQyxnRkFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLEVBQUUsR0FBRyxpQkFBaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL2V4cG9ydC9Qcm9jZXNzb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVuZ3JvdXBlZFByb2Nlc3NvciA9IGV4cG9ydHMuUHJvY2Vzc29yID0gdm9pZCAwO1xuY29uc3QgYWdncmVnYXRvcnMgPSByZXF1aXJlKFwiLi9hZ2dyZWdhdG9yc1wiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgYWxsIHByb2Nlc3NvciB0eXBlcy5cbiAqXG4gKiBUaGUgcHJvY2Vzc29yIGlzIHJlc3BvbnNpYmxlIGZvciBzdG9yaW5nIHRoZSBhZ2dyZWdhdG9ycyBhbmQgYWdncmVnYXRlZFxuICogdmFsdWVzIHJlY2VpdmVkIGZyb20gdXBkYXRlcyBmcm9tIG1ldHJpY3MgaW4gdGhlIG1ldGVyLiBUaGUgc3RvcmVkIHZhbHVlc1xuICogd2lsbCBiZSBzZW50IHRvIGFuIGV4cG9ydGVyIGZvciBleHBvcnRpbmcuXG4gKi9cbmNsYXNzIFByb2Nlc3NvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX2JhdGNoTWFwID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBjaGVja1BvaW50U2V0KCkge1xuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9iYXRjaE1hcC52YWx1ZXMoKSk7XG4gICAgfVxufVxuZXhwb3J0cy5Qcm9jZXNzb3IgPSBQcm9jZXNzb3I7XG4vKipcbiAqIFByb2Nlc3NvciB3aGljaCByZXRhaW5zIGFsbCBkaW1lbnNpb25zL2xhYmVscy4gSXQgYWNjZXB0cyBhbGwgcmVjb3JkcyBhbmRcbiAqIHBhc3NlcyB0aGVtIGZvciBleHBvcnRpbmcuXG4gKi9cbmNsYXNzIFVuZ3JvdXBlZFByb2Nlc3NvciBleHRlbmRzIFByb2Nlc3NvciB7XG4gICAgYWdncmVnYXRvckZvcihtZXRyaWNEZXNjcmlwdG9yKSB7XG4gICAgICAgIHN3aXRjaCAobWV0cmljRGVzY3JpcHRvci5tZXRyaWNLaW5kKSB7XG4gICAgICAgICAgICBjYXNlIHR5cGVzXzEuTWV0cmljS2luZC5DT1VOVEVSOlxuICAgICAgICAgICAgY2FzZSB0eXBlc18xLk1ldHJpY0tpbmQuVVBfRE9XTl9DT1VOVEVSOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgYWdncmVnYXRvcnMuU3VtQWdncmVnYXRvcigpO1xuICAgICAgICAgICAgY2FzZSB0eXBlc18xLk1ldHJpY0tpbmQuU1VNX09CU0VSVkVSOlxuICAgICAgICAgICAgY2FzZSB0eXBlc18xLk1ldHJpY0tpbmQuVVBfRE9XTl9TVU1fT0JTRVJWRVI6XG4gICAgICAgICAgICBjYXNlIHR5cGVzXzEuTWV0cmljS2luZC5WQUxVRV9PQlNFUlZFUjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IGFnZ3JlZ2F0b3JzLkxhc3RWYWx1ZUFnZ3JlZ2F0b3IoKTtcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5NZXRyaWNLaW5kLlZBTFVFX1JFQ09SREVSOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgYWdncmVnYXRvcnMuSGlzdG9ncmFtQWdncmVnYXRvcihtZXRyaWNEZXNjcmlwdG9yLmJvdW5kYXJpZXMgfHwgW0luZmluaXR5XSk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgYWdncmVnYXRvcnMuTGFzdFZhbHVlQWdncmVnYXRvcigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHByb2Nlc3MocmVjb3JkKSB7XG4gICAgICAgIGNvbnN0IGxhYmVscyA9IE9iamVjdC5rZXlzKHJlY29yZC5sYWJlbHMpXG4gICAgICAgICAgICAubWFwKGsgPT4gYCR7a309JHtyZWNvcmQubGFiZWxzW2tdfWApXG4gICAgICAgICAgICAuam9pbignLCcpO1xuICAgICAgICB0aGlzLl9iYXRjaE1hcC5zZXQocmVjb3JkLmRlc2NyaXB0b3IubmFtZSArIGxhYmVscywgcmVjb3JkKTtcbiAgICB9XG59XG5leHBvcnRzLlVuZ3JvdXBlZFByb2Nlc3NvciA9IFVuZ3JvdXBlZFByb2Nlc3Nvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVByb2Nlc3Nvci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/Processor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Histogram.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Histogram.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HistogramAggregator = void 0;\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Basic aggregator which observes events and counts them in pre-defined buckets\n * and provides the total sum and count of all observations.\n */\nclass HistogramAggregator {\n    constructor(boundaries) {\n        this.kind = types_1.AggregatorKind.HISTOGRAM;\n        if (boundaries === undefined || boundaries.length === 0) {\n            throw new Error('HistogramAggregator should be created with boundaries.');\n        }\n        // we need to an ordered set to be able to correctly compute count for each\n        // boundary since we'll iterate on each in order.\n        this._boundaries = boundaries.sort((a, b) => a - b);\n        this._current = this._newEmptyCheckpoint();\n        this._lastUpdateTime = core_1.hrTime();\n    }\n    update(value) {\n        this._lastUpdateTime = core_1.hrTime();\n        this._current.count += 1;\n        this._current.sum += value;\n        for (let i = 0; i < this._boundaries.length; i++) {\n            if (value < this._boundaries[i]) {\n                this._current.buckets.counts[i] += 1;\n                return;\n            }\n        }\n        // value is above all observed boundaries\n        this._current.buckets.counts[this._boundaries.length] += 1;\n    }\n    toPoint() {\n        return {\n            value: this._current,\n            timestamp: this._lastUpdateTime,\n        };\n    }\n    _newEmptyCheckpoint() {\n        return {\n            buckets: {\n                boundaries: this._boundaries,\n                counts: this._boundaries.map(() => 0).concat([0]),\n            },\n            sum: 0,\n            count: 0,\n        };\n    }\n}\nexports.HistogramAggregator = HistogramAggregator;\n//# sourceMappingURL=Histogram.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL0hpc3RvZ3JhbS5qcz8wMTIwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxpRkFBVTtBQUNsQyxlQUFlLG1CQUFPLENBQUMsa0ZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNkJBQTZCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L21ldHJpY3MvYnVpbGQvc3JjL2V4cG9ydC9hZ2dyZWdhdG9ycy9IaXN0b2dyYW0uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkhpc3RvZ3JhbUFnZ3JlZ2F0b3IgPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIi4uL3R5cGVzXCIpO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG4vKipcbiAqIEJhc2ljIGFnZ3JlZ2F0b3Igd2hpY2ggb2JzZXJ2ZXMgZXZlbnRzIGFuZCBjb3VudHMgdGhlbSBpbiBwcmUtZGVmaW5lZCBidWNrZXRzXG4gKiBhbmQgcHJvdmlkZXMgdGhlIHRvdGFsIHN1bSBhbmQgY291bnQgb2YgYWxsIG9ic2VydmF0aW9ucy5cbiAqL1xuY2xhc3MgSGlzdG9ncmFtQWdncmVnYXRvciB7XG4gICAgY29uc3RydWN0b3IoYm91bmRhcmllcykge1xuICAgICAgICB0aGlzLmtpbmQgPSB0eXBlc18xLkFnZ3JlZ2F0b3JLaW5kLkhJU1RPR1JBTTtcbiAgICAgICAgaWYgKGJvdW5kYXJpZXMgPT09IHVuZGVmaW5lZCB8fCBib3VuZGFyaWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIaXN0b2dyYW1BZ2dyZWdhdG9yIHNob3VsZCBiZSBjcmVhdGVkIHdpdGggYm91bmRhcmllcy4nKTtcbiAgICAgICAgfVxuICAgICAgICAvLyB3ZSBuZWVkIHRvIGFuIG9yZGVyZWQgc2V0IHRvIGJlIGFibGUgdG8gY29ycmVjdGx5IGNvbXB1dGUgY291bnQgZm9yIGVhY2hcbiAgICAgICAgLy8gYm91bmRhcnkgc2luY2Ugd2UnbGwgaXRlcmF0ZSBvbiBlYWNoIGluIG9yZGVyLlxuICAgICAgICB0aGlzLl9ib3VuZGFyaWVzID0gYm91bmRhcmllcy5zb3J0KChhLCBiKSA9PiBhIC0gYik7XG4gICAgICAgIHRoaXMuX2N1cnJlbnQgPSB0aGlzLl9uZXdFbXB0eUNoZWNrcG9pbnQoKTtcbiAgICAgICAgdGhpcy5fbGFzdFVwZGF0ZVRpbWUgPSBjb3JlXzEuaHJUaW1lKCk7XG4gICAgfVxuICAgIHVwZGF0ZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9sYXN0VXBkYXRlVGltZSA9IGNvcmVfMS5oclRpbWUoKTtcbiAgICAgICAgdGhpcy5fY3VycmVudC5jb3VudCArPSAxO1xuICAgICAgICB0aGlzLl9jdXJyZW50LnN1bSArPSB2YWx1ZTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9ib3VuZGFyaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgPCB0aGlzLl9ib3VuZGFyaWVzW2ldKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudC5idWNrZXRzLmNvdW50c1tpXSArPSAxO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyB2YWx1ZSBpcyBhYm92ZSBhbGwgb2JzZXJ2ZWQgYm91bmRhcmllc1xuICAgICAgICB0aGlzLl9jdXJyZW50LmJ1Y2tldHMuY291bnRzW3RoaXMuX2JvdW5kYXJpZXMubGVuZ3RoXSArPSAxO1xuICAgIH1cbiAgICB0b1BvaW50KCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IHRoaXMuX2N1cnJlbnQsXG4gICAgICAgICAgICB0aW1lc3RhbXA6IHRoaXMuX2xhc3RVcGRhdGVUaW1lLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBfbmV3RW1wdHlDaGVja3BvaW50KCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYnVja2V0czoge1xuICAgICAgICAgICAgICAgIGJvdW5kYXJpZXM6IHRoaXMuX2JvdW5kYXJpZXMsXG4gICAgICAgICAgICAgICAgY291bnRzOiB0aGlzLl9ib3VuZGFyaWVzLm1hcCgoKSA9PiAwKS5jb25jYXQoWzBdKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdW06IDAsXG4gICAgICAgICAgICBjb3VudDogMCxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLkhpc3RvZ3JhbUFnZ3JlZ2F0b3IgPSBIaXN0b2dyYW1BZ2dyZWdhdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SGlzdG9ncmFtLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Histogram.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/aggregators/LastValue.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/aggregators/LastValue.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LastValueAggregator = void 0;\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/** Basic aggregator for LastValue which keeps the last recorded value. */\nclass LastValueAggregator {\n    constructor() {\n        this._current = 0;\n        this._lastUpdateTime = [0, 0];\n        this.kind = types_1.AggregatorKind.LAST_VALUE;\n    }\n    update(value) {\n        this._current = value;\n        this._lastUpdateTime = core_1.hrTime();\n    }\n    toPoint() {\n        return {\n            value: this._current,\n            timestamp: this._lastUpdateTime,\n        };\n    }\n}\nexports.LastValueAggregator = LastValueAggregator;\n//# sourceMappingURL=LastValue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL0xhc3RWYWx1ZS5qcz9hZWJlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxpRkFBVTtBQUNsQyxlQUFlLG1CQUFPLENBQUMsa0ZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL0xhc3RWYWx1ZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTGFzdFZhbHVlQWdncmVnYXRvciA9IHZvaWQgMDtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi4vdHlwZXNcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbi8qKiBCYXNpYyBhZ2dyZWdhdG9yIGZvciBMYXN0VmFsdWUgd2hpY2gga2VlcHMgdGhlIGxhc3QgcmVjb3JkZWQgdmFsdWUuICovXG5jbGFzcyBMYXN0VmFsdWVBZ2dyZWdhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5fY3VycmVudCA9IDA7XG4gICAgICAgIHRoaXMuX2xhc3RVcGRhdGVUaW1lID0gWzAsIDBdO1xuICAgICAgICB0aGlzLmtpbmQgPSB0eXBlc18xLkFnZ3JlZ2F0b3JLaW5kLkxBU1RfVkFMVUU7XG4gICAgfVxuICAgIHVwZGF0ZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9jdXJyZW50ID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX2xhc3RVcGRhdGVUaW1lID0gY29yZV8xLmhyVGltZSgpO1xuICAgIH1cbiAgICB0b1BvaW50KCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IHRoaXMuX2N1cnJlbnQsXG4gICAgICAgICAgICB0aW1lc3RhbXA6IHRoaXMuX2xhc3RVcGRhdGVUaW1lLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuTGFzdFZhbHVlQWdncmVnYXRvciA9IExhc3RWYWx1ZUFnZ3JlZ2F0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1MYXN0VmFsdWUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/aggregators/LastValue.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Sum.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Sum.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SumAggregator = void 0;\nconst types_1 = __webpack_require__(/*! ../types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/** Basic aggregator which calculates a Sum from individual measurements. */\nclass SumAggregator {\n    constructor() {\n        this.kind = types_1.AggregatorKind.SUM;\n        this._current = 0;\n        this._lastUpdateTime = [0, 0];\n    }\n    update(value) {\n        this._current += value;\n        this._lastUpdateTime = core_1.hrTime();\n    }\n    toPoint() {\n        return {\n            value: this._current,\n            timestamp: this._lastUpdateTime,\n        };\n    }\n}\nexports.SumAggregator = SumAggregator;\n//# sourceMappingURL=Sum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL1N1bS5qcz9hZGNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxpRkFBVTtBQUNsQyxlQUFlLG1CQUFPLENBQUMsa0ZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL1N1bS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3VtQWdncmVnYXRvciA9IHZvaWQgMDtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi4vdHlwZXNcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbi8qKiBCYXNpYyBhZ2dyZWdhdG9yIHdoaWNoIGNhbGN1bGF0ZXMgYSBTdW0gZnJvbSBpbmRpdmlkdWFsIG1lYXN1cmVtZW50cy4gKi9cbmNsYXNzIFN1bUFnZ3JlZ2F0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmtpbmQgPSB0eXBlc18xLkFnZ3JlZ2F0b3JLaW5kLlNVTTtcbiAgICAgICAgdGhpcy5fY3VycmVudCA9IDA7XG4gICAgICAgIHRoaXMuX2xhc3RVcGRhdGVUaW1lID0gWzAsIDBdO1xuICAgIH1cbiAgICB1cGRhdGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fY3VycmVudCArPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5fbGFzdFVwZGF0ZVRpbWUgPSBjb3JlXzEuaHJUaW1lKCk7XG4gICAgfVxuICAgIHRvUG9pbnQoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5fY3VycmVudCxcbiAgICAgICAgICAgIHRpbWVzdGFtcDogdGhpcy5fbGFzdFVwZGF0ZVRpbWUsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5TdW1BZ2dyZWdhdG9yID0gU3VtQWdncmVnYXRvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1bS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Sum.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./Histogram */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Histogram.js\"), exports);\n__exportStar(__webpack_require__(/*! ./LastValue */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/LastValue.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Sum */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/Sum.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L2FnZ3JlZ2F0b3JzL2luZGV4LmpzPzJiNGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxhQUFhLG1CQUFPLENBQUMsb0dBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLG9HQUFhO0FBQ2xDLGFBQWEsbUJBQU8sQ0FBQyx3RkFBTztBQUM1QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvYWdncmVnYXRvcnMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9IaXN0b2dyYW1cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0xhc3RWYWx1ZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vU3VtXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/export/types.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/export/types.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AggregatorKind = exports.MetricKindValues = exports.MetricKind = void 0;\n/** The kind of metric. */\nvar MetricKind;\n(function (MetricKind) {\n    MetricKind[MetricKind[\"COUNTER\"] = 0] = \"COUNTER\";\n    MetricKind[MetricKind[\"UP_DOWN_COUNTER\"] = 1] = \"UP_DOWN_COUNTER\";\n    MetricKind[MetricKind[\"VALUE_RECORDER\"] = 2] = \"VALUE_RECORDER\";\n    MetricKind[MetricKind[\"SUM_OBSERVER\"] = 3] = \"SUM_OBSERVER\";\n    MetricKind[MetricKind[\"UP_DOWN_SUM_OBSERVER\"] = 4] = \"UP_DOWN_SUM_OBSERVER\";\n    MetricKind[MetricKind[\"VALUE_OBSERVER\"] = 5] = \"VALUE_OBSERVER\";\n    MetricKind[MetricKind[\"BATCH_OBSERVER\"] = 6] = \"BATCH_OBSERVER\";\n})(MetricKind = exports.MetricKind || (exports.MetricKind = {}));\nexports.MetricKindValues = Object.values(MetricKind);\n/** The kind of aggregator. */\nvar AggregatorKind;\n(function (AggregatorKind) {\n    AggregatorKind[AggregatorKind[\"SUM\"] = 0] = \"SUM\";\n    AggregatorKind[AggregatorKind[\"LAST_VALUE\"] = 1] = \"LAST_VALUE\";\n    AggregatorKind[AggregatorKind[\"HISTOGRAM\"] = 2] = \"HISTOGRAM\";\n})(AggregatorKind = exports.AggregatorKind || (exports.AggregatorKind = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvZXhwb3J0L3R5cGVzLmpzPzY4Y2EiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw2REFBNkQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHlFQUF5RTtBQUMxRSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9leHBvcnQvdHlwZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFnZ3JlZ2F0b3JLaW5kID0gZXhwb3J0cy5NZXRyaWNLaW5kVmFsdWVzID0gZXhwb3J0cy5NZXRyaWNLaW5kID0gdm9pZCAwO1xuLyoqIFRoZSBraW5kIG9mIG1ldHJpYy4gKi9cbnZhciBNZXRyaWNLaW5kO1xuKGZ1bmN0aW9uIChNZXRyaWNLaW5kKSB7XG4gICAgTWV0cmljS2luZFtNZXRyaWNLaW5kW1wiQ09VTlRFUlwiXSA9IDBdID0gXCJDT1VOVEVSXCI7XG4gICAgTWV0cmljS2luZFtNZXRyaWNLaW5kW1wiVVBfRE9XTl9DT1VOVEVSXCJdID0gMV0gPSBcIlVQX0RPV05fQ09VTlRFUlwiO1xuICAgIE1ldHJpY0tpbmRbTWV0cmljS2luZFtcIlZBTFVFX1JFQ09SREVSXCJdID0gMl0gPSBcIlZBTFVFX1JFQ09SREVSXCI7XG4gICAgTWV0cmljS2luZFtNZXRyaWNLaW5kW1wiU1VNX09CU0VSVkVSXCJdID0gM10gPSBcIlNVTV9PQlNFUlZFUlwiO1xuICAgIE1ldHJpY0tpbmRbTWV0cmljS2luZFtcIlVQX0RPV05fU1VNX09CU0VSVkVSXCJdID0gNF0gPSBcIlVQX0RPV05fU1VNX09CU0VSVkVSXCI7XG4gICAgTWV0cmljS2luZFtNZXRyaWNLaW5kW1wiVkFMVUVfT0JTRVJWRVJcIl0gPSA1XSA9IFwiVkFMVUVfT0JTRVJWRVJcIjtcbiAgICBNZXRyaWNLaW5kW01ldHJpY0tpbmRbXCJCQVRDSF9PQlNFUlZFUlwiXSA9IDZdID0gXCJCQVRDSF9PQlNFUlZFUlwiO1xufSkoTWV0cmljS2luZCA9IGV4cG9ydHMuTWV0cmljS2luZCB8fCAoZXhwb3J0cy5NZXRyaWNLaW5kID0ge30pKTtcbmV4cG9ydHMuTWV0cmljS2luZFZhbHVlcyA9IE9iamVjdC52YWx1ZXMoTWV0cmljS2luZCk7XG4vKiogVGhlIGtpbmQgb2YgYWdncmVnYXRvci4gKi9cbnZhciBBZ2dyZWdhdG9yS2luZDtcbihmdW5jdGlvbiAoQWdncmVnYXRvcktpbmQpIHtcbiAgICBBZ2dyZWdhdG9yS2luZFtBZ2dyZWdhdG9yS2luZFtcIlNVTVwiXSA9IDBdID0gXCJTVU1cIjtcbiAgICBBZ2dyZWdhdG9yS2luZFtBZ2dyZWdhdG9yS2luZFtcIkxBU1RfVkFMVUVcIl0gPSAxXSA9IFwiTEFTVF9WQUxVRVwiO1xuICAgIEFnZ3JlZ2F0b3JLaW5kW0FnZ3JlZ2F0b3JLaW5kW1wiSElTVE9HUkFNXCJdID0gMl0gPSBcIkhJU1RPR1JBTVwiO1xufSkoQWdncmVnYXRvcktpbmQgPSBleHBvcnRzLkFnZ3JlZ2F0b3JLaW5kIHx8IChleHBvcnRzLkFnZ3JlZ2F0b3JLaW5kID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/export/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./BoundInstrument */ \"./node_modules/@opentelemetry/metrics/build/src/BoundInstrument.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CounterMetric */ \"./node_modules/@opentelemetry/metrics/build/src/CounterMetric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ValueRecorderMetric */ \"./node_modules/@opentelemetry/metrics/build/src/ValueRecorderMetric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Meter */ \"./node_modules/@opentelemetry/metrics/build/src/Meter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./MeterProvider */ \"./node_modules/@opentelemetry/metrics/build/src/MeterProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Metric */ \"./node_modules/@opentelemetry/metrics/build/src/Metric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ValueObserverMetric */ \"./node_modules/@opentelemetry/metrics/build/src/ValueObserverMetric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/aggregators */ \"./node_modules/@opentelemetry/metrics/build/src/export/aggregators/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/ConsoleMetricExporter */ \"./node_modules/@opentelemetry/metrics/build/src/export/ConsoleMetricExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/Processor */ \"./node_modules/@opentelemetry/metrics/build/src/export/Processor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/types */ \"./node_modules/@opentelemetry/metrics/build/src/export/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpDownCounterMetric */ \"./node_modules/@opentelemetry/metrics/build/src/UpDownCounterMetric.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvaW5kZXguanM/N2YxMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msb0NBQW9DLGFBQWEsRUFBRSxFQUFFO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGFBQWEsbUJBQU8sQ0FBQyw2RkFBbUI7QUFDeEMsYUFBYSxtQkFBTyxDQUFDLHlGQUFpQjtBQUN0QyxhQUFhLG1CQUFPLENBQUMscUdBQXVCO0FBQzVDLGFBQWEsbUJBQU8sQ0FBQyx5RUFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMseUZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQywyRUFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMscUdBQXVCO0FBQzVDLGFBQWEsbUJBQU8sQ0FBQyx5R0FBc0I7QUFDM0MsYUFBYSxtQkFBTyxDQUFDLHVIQUFnQztBQUNyRCxhQUFhLG1CQUFPLENBQUMsK0ZBQW9CO0FBQ3pDLGFBQWEsbUJBQU8sQ0FBQyx1RkFBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLHFHQUF1QjtBQUM1QyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0JvdW5kSW5zdHJ1bWVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ291bnRlck1ldHJpY1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vVmFsdWVSZWNvcmRlck1ldHJpY1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vTWV0ZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL01ldGVyUHJvdmlkZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL01ldHJpY1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vVmFsdWVPYnNlcnZlck1ldHJpY1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXhwb3J0L2FnZ3JlZ2F0b3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9leHBvcnQvQ29uc29sZU1ldHJpY0V4cG9ydGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9leHBvcnQvUHJvY2Vzc29yXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9leHBvcnQvdHlwZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1VwRG93bkNvdW50ZXJNZXRyaWNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/metrics/build/src/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/metrics/build/src/types.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_METRIC_OPTIONS = exports.DEFAULT_CONFIG = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api-metrics */ \"./node_modules/@opentelemetry/api-metrics/build/src/index.js\");\n/** Default Meter configuration. */\nexports.DEFAULT_CONFIG = {};\n/** The default metric creation options value. */\nexports.DEFAULT_METRIC_OPTIONS = {\n    disabled: false,\n    description: '',\n    unit: '1',\n    valueType: api.ValueType.DOUBLE,\n};\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvbWV0cmljcy9idWlsZC9zcmMvdHlwZXMuanM/NThlNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsWUFBWSxtQkFBTyxDQUFDLGdHQUE0QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9tZXRyaWNzL2J1aWxkL3NyYy90eXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9NRVRSSUNfT1BUSU9OUyA9IGV4cG9ydHMuREVGQVVMVF9DT05GSUcgPSB2b2lkIDA7XG5jb25zdCBhcGkgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpLW1ldHJpY3NcIik7XG4vKiogRGVmYXVsdCBNZXRlciBjb25maWd1cmF0aW9uLiAqL1xuZXhwb3J0cy5ERUZBVUxUX0NPTkZJRyA9IHt9O1xuLyoqIFRoZSBkZWZhdWx0IG1ldHJpYyBjcmVhdGlvbiBvcHRpb25zIHZhbHVlLiAqL1xuZXhwb3J0cy5ERUZBVUxUX01FVFJJQ19PUFRJT05TID0ge1xuICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICBkZXNjcmlwdGlvbjogJycsXG4gICAgdW5pdDogJzEnLFxuICAgIHZhbHVlVHlwZTogYXBpLlZhbHVlVHlwZS5ET1VCTEUsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/metrics/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/Resource.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/Resource.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Resource = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@opentelemetry/resources/build/src/constants.js\");\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nclass Resource {\n    constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes) {\n        this.attributes = attributes;\n    }\n    /**\n     * Returns an empty Resource\n     */\n    static empty() {\n        return Resource.EMPTY;\n    }\n    /**\n     * Returns a Resource that indentifies the SDK in use.\n     */\n    static createTelemetrySDKResource() {\n        return new Resource({\n            [constants_1.TELEMETRY_SDK_RESOURCE.LANGUAGE]: core_1.SDK_INFO.LANGUAGE,\n            [constants_1.TELEMETRY_SDK_RESOURCE.NAME]: core_1.SDK_INFO.NAME,\n            [constants_1.TELEMETRY_SDK_RESOURCE.VERSION]: core_1.SDK_INFO.VERSION,\n        });\n    }\n    /**\n     * Returns a new, merged {@link Resource} by merging the current Resource\n     * with the other Resource. In case of a collision, other Resource takes\n     * precedence.\n     *\n     * @param other the Resource that will be merged with this.\n     * @returns the newly merged Resource.\n     */\n    merge(other) {\n        if (!other || !Object.keys(other.attributes).length)\n            return this;\n        // SpanAttributes from resource overwrite attributes from other resource.\n        const mergedAttributes = Object.assign({}, this.attributes, other.attributes);\n        return new Resource(mergedAttributes);\n    }\n}\nexports.Resource = Resource;\nResource.EMPTY = new Resource({});\n//# sourceMappingURL=Resource.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9SZXNvdXJjZS5qcz85MjJkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxlQUFlLG1CQUFPLENBQUMsa0ZBQXFCO0FBQzVDLG9CQUFvQixtQkFBTyxDQUFDLG1GQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSw4QkFBOEIsZUFBZTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvc3JjL1Jlc291cmNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXNvdXJjZSA9IHZvaWQgMDtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG4vKipcbiAqIEEgUmVzb3VyY2UgZGVzY3JpYmVzIHRoZSBlbnRpdHkgZm9yIHdoaWNoIGEgc2lnbmFscyAobWV0cmljcyBvciB0cmFjZSkgYXJlXG4gKiBjb2xsZWN0ZWQuXG4gKi9cbmNsYXNzIFJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAvKipcbiAgICAgKiBBIGRpY3Rpb25hcnkgb2YgYXR0cmlidXRlcyB3aXRoIHN0cmluZyBrZXlzIGFuZCB2YWx1ZXMgdGhhdCBwcm92aWRlXG4gICAgICogaW5mb3JtYXRpb24gYWJvdXQgdGhlIGVudGl0eSBhcyBudW1iZXJzLCBzdHJpbmdzIG9yIGJvb2xlYW5zXG4gICAgICogVE9ETzogQ29uc2lkZXIgdG8gYWRkIGNoZWNrL3ZhbGlkYXRpb24gb24gYXR0cmlidXRlcy5cbiAgICAgKi9cbiAgICBhdHRyaWJ1dGVzKSB7XG4gICAgICAgIHRoaXMuYXR0cmlidXRlcyA9IGF0dHJpYnV0ZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYW4gZW1wdHkgUmVzb3VyY2VcbiAgICAgKi9cbiAgICBzdGF0aWMgZW1wdHkoKSB7XG4gICAgICAgIHJldHVybiBSZXNvdXJjZS5FTVBUWTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIFJlc291cmNlIHRoYXQgaW5kZW50aWZpZXMgdGhlIFNESyBpbiB1c2UuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZVRlbGVtZXRyeVNES1Jlc291cmNlKCkge1xuICAgICAgICByZXR1cm4gbmV3IFJlc291cmNlKHtcbiAgICAgICAgICAgIFtjb25zdGFudHNfMS5URUxFTUVUUllfU0RLX1JFU09VUkNFLkxBTkdVQUdFXTogY29yZV8xLlNES19JTkZPLkxBTkdVQUdFLFxuICAgICAgICAgICAgW2NvbnN0YW50c18xLlRFTEVNRVRSWV9TREtfUkVTT1VSQ0UuTkFNRV06IGNvcmVfMS5TREtfSU5GTy5OQU1FLFxuICAgICAgICAgICAgW2NvbnN0YW50c18xLlRFTEVNRVRSWV9TREtfUkVTT1VSQ0UuVkVSU0lPTl06IGNvcmVfMS5TREtfSU5GTy5WRVJTSU9OLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIG5ldywgbWVyZ2VkIHtAbGluayBSZXNvdXJjZX0gYnkgbWVyZ2luZyB0aGUgY3VycmVudCBSZXNvdXJjZVxuICAgICAqIHdpdGggdGhlIG90aGVyIFJlc291cmNlLiBJbiBjYXNlIG9mIGEgY29sbGlzaW9uLCBvdGhlciBSZXNvdXJjZSB0YWtlc1xuICAgICAqIHByZWNlZGVuY2UuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3RoZXIgdGhlIFJlc291cmNlIHRoYXQgd2lsbCBiZSBtZXJnZWQgd2l0aCB0aGlzLlxuICAgICAqIEByZXR1cm5zIHRoZSBuZXdseSBtZXJnZWQgUmVzb3VyY2UuXG4gICAgICovXG4gICAgbWVyZ2Uob3RoZXIpIHtcbiAgICAgICAgaWYgKCFvdGhlciB8fCAhT2JqZWN0LmtleXMob3RoZXIuYXR0cmlidXRlcykubGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIC8vIFNwYW5BdHRyaWJ1dGVzIGZyb20gcmVzb3VyY2Ugb3ZlcndyaXRlIGF0dHJpYnV0ZXMgZnJvbSBvdGhlciByZXNvdXJjZS5cbiAgICAgICAgY29uc3QgbWVyZ2VkQXR0cmlidXRlcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuYXR0cmlidXRlcywgb3RoZXIuYXR0cmlidXRlcyk7XG4gICAgICAgIHJldHVybiBuZXcgUmVzb3VyY2UobWVyZ2VkQXR0cmlidXRlcyk7XG4gICAgfVxufVxuZXhwb3J0cy5SZXNvdXJjZSA9IFJlc291cmNlO1xuUmVzb3VyY2UuRU1QVFkgPSBuZXcgUmVzb3VyY2Uoe30pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVzb3VyY2UuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/Resource.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/config.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/config.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9jb25maWcuanM/NTkwMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Jlc291cmNlcy9idWlsZC9zcmMvY29uZmlnLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uZmlnLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/config.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/constants.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROCESS_RESOURCE = exports.SERVICE_RESOURCE = exports.TELEMETRY_SDK_RESOURCE = exports.K8S_RESOURCE = exports.HOST_RESOURCE = exports.CONTAINER_RESOURCE = exports.CLOUD_RESOURCE = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexports.CLOUD_RESOURCE = {\n    /** Name of the cloud provider. Example values are aws, azure, gcp. */\n    PROVIDER: 'cloud.provider',\n    /** The cloud account id used to identify different entities. */\n    ACCOUNT_ID: 'cloud.account.id',\n    /** A specific geographical location where different entities can run. */\n    REGION: 'cloud.region',\n    /** Zones are a sub set of the region connected through low-latency links. */\n    ZONE: 'cloud.zone',\n};\n/**\n * SpanAttributes defining a compute unit (e.g. Container, Process, Lambda\n * Function).\n * */\nexports.CONTAINER_RESOURCE = {\n    /** The container name. */\n    NAME: 'container.name',\n    /** The container id. */\n    ID: 'container.id',\n    /** The name of the image the container was built on. */\n    IMAGE_NAME: 'container.image.name',\n    /** The container image tag. */\n    IMAGE_TAG: 'container.image.tag',\n};\n/** SpanAttributes defining a computing instance (e.g. host). */\nexports.HOST_RESOURCE = {\n    /**\n     * Unique host id. For Cloud this must be the instance_id assigned by the\n     * cloud provider\n     */\n    ID: 'host.id',\n    /**\n     * Name of the host. It may contain what hostname returns on Unix systems,\n     * the fully qualified, or a name specified by the user.\n     */\n    NAME: 'host.name',\n    /** Type of host. For Cloud this must be the machine type.*/\n    TYPE: 'host.type',\n    /** Name of the VM image or OS install the host was instantiated from. */\n    IMAGE_NAME: 'host.image.name',\n    /** VM image id. For Cloud, this value is from the provider. */\n    IMAGE_ID: 'host.image.id',\n    /** The version string of the VM image */\n    IMAGE_VERSION: 'host.image.version',\n};\n/** SpanAttributes defining a deployment service (e.g. Kubernetes). */\nexports.K8S_RESOURCE = {\n    /** The name of the cluster that the pod is running in. */\n    CLUSTER_NAME: 'k8s.cluster.name',\n    /** The name of the namespace that the pod is running in. */\n    NAMESPACE_NAME: 'k8s.namespace.name',\n    /** The name of the pod. */\n    POD_NAME: 'k8s.pod.name',\n    /** The name of the deployment. */\n    DEPLOYMENT_NAME: 'k8s.deployment.name',\n};\n/** SpanAttributes describing the telemetry library. */\nexports.TELEMETRY_SDK_RESOURCE = {\n    /** The name of the telemetry library. */\n    NAME: 'telemetry.sdk.name',\n    /** The language of telemetry library and of the code instrumented with it. */\n    LANGUAGE: 'telemetry.sdk.language',\n    /** The version string of the telemetry library */\n    VERSION: 'telemetry.sdk.version',\n};\n/** SpanAttributes describing a service instance. */\nexports.SERVICE_RESOURCE = {\n    /** Logical name of the service.  */\n    NAME: 'service.name',\n    /** A namespace for `service.name`. */\n    NAMESPACE: 'service.namespace',\n    /** The string ID of the service instance. */\n    INSTANCE_ID: 'service.instance.id',\n    /** The version string of the service API or implementation. */\n    VERSION: 'service.version',\n};\n/** SpanAttributes describing a Process. */\nexports.PROCESS_RESOURCE = {\n    /** A command which launced this proces.  */\n    COMMAND: 'process.command',\n    /** The full command with arguments as string.  */\n    COMMAND_LINE: 'process.command_line',\n    /** A name given to currently running porcess defaults to executable (process.title) .  */\n    NAME: 'process.executable.name',\n    /** An owner of currently running process.  */\n    OWNER: 'process.owner',\n    /** The full path to the process executable.  */\n    PATH: 'process.executable.path',\n    /** Process identifier of currently running process.  */\n    PID: 'process.id',\n};\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9jb25zdGFudHMuanM/ZTNhNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvc3JjL2NvbnN0YW50cy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QUk9DRVNTX1JFU09VUkNFID0gZXhwb3J0cy5TRVJWSUNFX1JFU09VUkNFID0gZXhwb3J0cy5URUxFTUVUUllfU0RLX1JFU09VUkNFID0gZXhwb3J0cy5LOFNfUkVTT1VSQ0UgPSBleHBvcnRzLkhPU1RfUkVTT1VSQ0UgPSBleHBvcnRzLkNPTlRBSU5FUl9SRVNPVVJDRSA9IGV4cG9ydHMuQ0xPVURfUkVTT1VSQ0UgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0cy5DTE9VRF9SRVNPVVJDRSA9IHtcbiAgICAvKiogTmFtZSBvZiB0aGUgY2xvdWQgcHJvdmlkZXIuIEV4YW1wbGUgdmFsdWVzIGFyZSBhd3MsIGF6dXJlLCBnY3AuICovXG4gICAgUFJPVklERVI6ICdjbG91ZC5wcm92aWRlcicsXG4gICAgLyoqIFRoZSBjbG91ZCBhY2NvdW50IGlkIHVzZWQgdG8gaWRlbnRpZnkgZGlmZmVyZW50IGVudGl0aWVzLiAqL1xuICAgIEFDQ09VTlRfSUQ6ICdjbG91ZC5hY2NvdW50LmlkJyxcbiAgICAvKiogQSBzcGVjaWZpYyBnZW9ncmFwaGljYWwgbG9jYXRpb24gd2hlcmUgZGlmZmVyZW50IGVudGl0aWVzIGNhbiBydW4uICovXG4gICAgUkVHSU9OOiAnY2xvdWQucmVnaW9uJyxcbiAgICAvKiogWm9uZXMgYXJlIGEgc3ViIHNldCBvZiB0aGUgcmVnaW9uIGNvbm5lY3RlZCB0aHJvdWdoIGxvdy1sYXRlbmN5IGxpbmtzLiAqL1xuICAgIFpPTkU6ICdjbG91ZC56b25lJyxcbn07XG4vKipcbiAqIFNwYW5BdHRyaWJ1dGVzIGRlZmluaW5nIGEgY29tcHV0ZSB1bml0IChlLmcuIENvbnRhaW5lciwgUHJvY2VzcywgTGFtYmRhXG4gKiBGdW5jdGlvbikuXG4gKiAqL1xuZXhwb3J0cy5DT05UQUlORVJfUkVTT1VSQ0UgPSB7XG4gICAgLyoqIFRoZSBjb250YWluZXIgbmFtZS4gKi9cbiAgICBOQU1FOiAnY29udGFpbmVyLm5hbWUnLFxuICAgIC8qKiBUaGUgY29udGFpbmVyIGlkLiAqL1xuICAgIElEOiAnY29udGFpbmVyLmlkJyxcbiAgICAvKiogVGhlIG5hbWUgb2YgdGhlIGltYWdlIHRoZSBjb250YWluZXIgd2FzIGJ1aWx0IG9uLiAqL1xuICAgIElNQUdFX05BTUU6ICdjb250YWluZXIuaW1hZ2UubmFtZScsXG4gICAgLyoqIFRoZSBjb250YWluZXIgaW1hZ2UgdGFnLiAqL1xuICAgIElNQUdFX1RBRzogJ2NvbnRhaW5lci5pbWFnZS50YWcnLFxufTtcbi8qKiBTcGFuQXR0cmlidXRlcyBkZWZpbmluZyBhIGNvbXB1dGluZyBpbnN0YW5jZSAoZS5nLiBob3N0KS4gKi9cbmV4cG9ydHMuSE9TVF9SRVNPVVJDRSA9IHtcbiAgICAvKipcbiAgICAgKiBVbmlxdWUgaG9zdCBpZC4gRm9yIENsb3VkIHRoaXMgbXVzdCBiZSB0aGUgaW5zdGFuY2VfaWQgYXNzaWduZWQgYnkgdGhlXG4gICAgICogY2xvdWQgcHJvdmlkZXJcbiAgICAgKi9cbiAgICBJRDogJ2hvc3QuaWQnLFxuICAgIC8qKlxuICAgICAqIE5hbWUgb2YgdGhlIGhvc3QuIEl0IG1heSBjb250YWluIHdoYXQgaG9zdG5hbWUgcmV0dXJucyBvbiBVbml4IHN5c3RlbXMsXG4gICAgICogdGhlIGZ1bGx5IHF1YWxpZmllZCwgb3IgYSBuYW1lIHNwZWNpZmllZCBieSB0aGUgdXNlci5cbiAgICAgKi9cbiAgICBOQU1FOiAnaG9zdC5uYW1lJyxcbiAgICAvKiogVHlwZSBvZiBob3N0LiBGb3IgQ2xvdWQgdGhpcyBtdXN0IGJlIHRoZSBtYWNoaW5lIHR5cGUuKi9cbiAgICBUWVBFOiAnaG9zdC50eXBlJyxcbiAgICAvKiogTmFtZSBvZiB0aGUgVk0gaW1hZ2Ugb3IgT1MgaW5zdGFsbCB0aGUgaG9zdCB3YXMgaW5zdGFudGlhdGVkIGZyb20uICovXG4gICAgSU1BR0VfTkFNRTogJ2hvc3QuaW1hZ2UubmFtZScsXG4gICAgLyoqIFZNIGltYWdlIGlkLiBGb3IgQ2xvdWQsIHRoaXMgdmFsdWUgaXMgZnJvbSB0aGUgcHJvdmlkZXIuICovXG4gICAgSU1BR0VfSUQ6ICdob3N0LmltYWdlLmlkJyxcbiAgICAvKiogVGhlIHZlcnNpb24gc3RyaW5nIG9mIHRoZSBWTSBpbWFnZSAqL1xuICAgIElNQUdFX1ZFUlNJT046ICdob3N0LmltYWdlLnZlcnNpb24nLFxufTtcbi8qKiBTcGFuQXR0cmlidXRlcyBkZWZpbmluZyBhIGRlcGxveW1lbnQgc2VydmljZSAoZS5nLiBLdWJlcm5ldGVzKS4gKi9cbmV4cG9ydHMuSzhTX1JFU09VUkNFID0ge1xuICAgIC8qKiBUaGUgbmFtZSBvZiB0aGUgY2x1c3RlciB0aGF0IHRoZSBwb2QgaXMgcnVubmluZyBpbi4gKi9cbiAgICBDTFVTVEVSX05BTUU6ICdrOHMuY2x1c3Rlci5uYW1lJyxcbiAgICAvKiogVGhlIG5hbWUgb2YgdGhlIG5hbWVzcGFjZSB0aGF0IHRoZSBwb2QgaXMgcnVubmluZyBpbi4gKi9cbiAgICBOQU1FU1BBQ0VfTkFNRTogJ2s4cy5uYW1lc3BhY2UubmFtZScsXG4gICAgLyoqIFRoZSBuYW1lIG9mIHRoZSBwb2QuICovXG4gICAgUE9EX05BTUU6ICdrOHMucG9kLm5hbWUnLFxuICAgIC8qKiBUaGUgbmFtZSBvZiB0aGUgZGVwbG95bWVudC4gKi9cbiAgICBERVBMT1lNRU5UX05BTUU6ICdrOHMuZGVwbG95bWVudC5uYW1lJyxcbn07XG4vKiogU3BhbkF0dHJpYnV0ZXMgZGVzY3JpYmluZyB0aGUgdGVsZW1ldHJ5IGxpYnJhcnkuICovXG5leHBvcnRzLlRFTEVNRVRSWV9TREtfUkVTT1VSQ0UgPSB7XG4gICAgLyoqIFRoZSBuYW1lIG9mIHRoZSB0ZWxlbWV0cnkgbGlicmFyeS4gKi9cbiAgICBOQU1FOiAndGVsZW1ldHJ5LnNkay5uYW1lJyxcbiAgICAvKiogVGhlIGxhbmd1YWdlIG9mIHRlbGVtZXRyeSBsaWJyYXJ5IGFuZCBvZiB0aGUgY29kZSBpbnN0cnVtZW50ZWQgd2l0aCBpdC4gKi9cbiAgICBMQU5HVUFHRTogJ3RlbGVtZXRyeS5zZGsubGFuZ3VhZ2UnLFxuICAgIC8qKiBUaGUgdmVyc2lvbiBzdHJpbmcgb2YgdGhlIHRlbGVtZXRyeSBsaWJyYXJ5ICovXG4gICAgVkVSU0lPTjogJ3RlbGVtZXRyeS5zZGsudmVyc2lvbicsXG59O1xuLyoqIFNwYW5BdHRyaWJ1dGVzIGRlc2NyaWJpbmcgYSBzZXJ2aWNlIGluc3RhbmNlLiAqL1xuZXhwb3J0cy5TRVJWSUNFX1JFU09VUkNFID0ge1xuICAgIC8qKiBMb2dpY2FsIG5hbWUgb2YgdGhlIHNlcnZpY2UuICAqL1xuICAgIE5BTUU6ICdzZXJ2aWNlLm5hbWUnLFxuICAgIC8qKiBBIG5hbWVzcGFjZSBmb3IgYHNlcnZpY2UubmFtZWAuICovXG4gICAgTkFNRVNQQUNFOiAnc2VydmljZS5uYW1lc3BhY2UnLFxuICAgIC8qKiBUaGUgc3RyaW5nIElEIG9mIHRoZSBzZXJ2aWNlIGluc3RhbmNlLiAqL1xuICAgIElOU1RBTkNFX0lEOiAnc2VydmljZS5pbnN0YW5jZS5pZCcsXG4gICAgLyoqIFRoZSB2ZXJzaW9uIHN0cmluZyBvZiB0aGUgc2VydmljZSBBUEkgb3IgaW1wbGVtZW50YXRpb24uICovXG4gICAgVkVSU0lPTjogJ3NlcnZpY2UudmVyc2lvbicsXG59O1xuLyoqIFNwYW5BdHRyaWJ1dGVzIGRlc2NyaWJpbmcgYSBQcm9jZXNzLiAqL1xuZXhwb3J0cy5QUk9DRVNTX1JFU09VUkNFID0ge1xuICAgIC8qKiBBIGNvbW1hbmQgd2hpY2ggbGF1bmNlZCB0aGlzIHByb2Nlcy4gICovXG4gICAgQ09NTUFORDogJ3Byb2Nlc3MuY29tbWFuZCcsXG4gICAgLyoqIFRoZSBmdWxsIGNvbW1hbmQgd2l0aCBhcmd1bWVudHMgYXMgc3RyaW5nLiAgKi9cbiAgICBDT01NQU5EX0xJTkU6ICdwcm9jZXNzLmNvbW1hbmRfbGluZScsXG4gICAgLyoqIEEgbmFtZSBnaXZlbiB0byBjdXJyZW50bHkgcnVubmluZyBwb3JjZXNzIGRlZmF1bHRzIHRvIGV4ZWN1dGFibGUgKHByb2Nlc3MudGl0bGUpIC4gICovXG4gICAgTkFNRTogJ3Byb2Nlc3MuZXhlY3V0YWJsZS5uYW1lJyxcbiAgICAvKiogQW4gb3duZXIgb2YgY3VycmVudGx5IHJ1bm5pbmcgcHJvY2Vzcy4gICovXG4gICAgT1dORVI6ICdwcm9jZXNzLm93bmVyJyxcbiAgICAvKiogVGhlIGZ1bGwgcGF0aCB0byB0aGUgcHJvY2VzcyBleGVjdXRhYmxlLiAgKi9cbiAgICBQQVRIOiAncHJvY2Vzcy5leGVjdXRhYmxlLnBhdGgnLFxuICAgIC8qKiBQcm9jZXNzIGlkZW50aWZpZXIgb2YgY3VycmVudGx5IHJ1bm5pbmcgcHJvY2Vzcy4gICovXG4gICAgUElEOiAncHJvY2Vzcy5pZCcsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/constants.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./Resource */ \"./node_modules/@opentelemetry/resources/build/src/Resource.js\"), exports);\n__exportStar(__webpack_require__(/*! ./platform */ \"./node_modules/@opentelemetry/resources/build/src/platform/browser/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@opentelemetry/resources/build/src/constants.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/resources/build/src/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./config */ \"./node_modules/@opentelemetry/resources/build/src/config.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9pbmRleC5qcz8zZmEyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLGlGQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQywrRkFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsbUZBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLDJFQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyw2RUFBVTtBQUMvQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMvYnVpbGQvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUmVzb3VyY2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BsYXRmb3JtXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25maWdcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/platform/browser/detect-resources.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/platform/browser/detect-resources.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detectResources = void 0;\nconst Resource_1 = __webpack_require__(/*! ../../Resource */ \"./node_modules/@opentelemetry/resources/build/src/Resource.js\");\n/**\n * Detects resources for the browser platform, which is currently only the\n * telemetry SDK resource. More could be added in the future. This method\n * is async to match the signature of corresponding method for node.\n */\nconst detectResources = async () => {\n    return Resource_1.Resource.createTelemetrySDKResource();\n};\nexports.detectResources = detectResources;\n//# sourceMappingURL=detect-resources.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2RldGVjdC1yZXNvdXJjZXMuanM/ZmIyNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMscUZBQWdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Jlc291cmNlcy9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9kZXRlY3QtcmVzb3VyY2VzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZXRlY3RSZXNvdXJjZXMgPSB2b2lkIDA7XG5jb25zdCBSZXNvdXJjZV8xID0gcmVxdWlyZShcIi4uLy4uL1Jlc291cmNlXCIpO1xuLyoqXG4gKiBEZXRlY3RzIHJlc291cmNlcyBmb3IgdGhlIGJyb3dzZXIgcGxhdGZvcm0sIHdoaWNoIGlzIGN1cnJlbnRseSBvbmx5IHRoZVxuICogdGVsZW1ldHJ5IFNESyByZXNvdXJjZS4gTW9yZSBjb3VsZCBiZSBhZGRlZCBpbiB0aGUgZnV0dXJlLiBUaGlzIG1ldGhvZFxuICogaXMgYXN5bmMgdG8gbWF0Y2ggdGhlIHNpZ25hdHVyZSBvZiBjb3JyZXNwb25kaW5nIG1ldGhvZCBmb3Igbm9kZS5cbiAqL1xuY29uc3QgZGV0ZWN0UmVzb3VyY2VzID0gYXN5bmMgKCkgPT4ge1xuICAgIHJldHVybiBSZXNvdXJjZV8xLlJlc291cmNlLmNyZWF0ZVRlbGVtZXRyeVNES1Jlc291cmNlKCk7XG59O1xuZXhwb3J0cy5kZXRlY3RSZXNvdXJjZXMgPSBkZXRlY3RSZXNvdXJjZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXRlY3QtcmVzb3VyY2VzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/platform/browser/detect-resources.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/platform/browser/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/platform/browser/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./detect-resources */ \"./node_modules/@opentelemetry/resources/build/src/platform/browser/detect-resources.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzPzUzZmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxhQUFhLG1CQUFPLENBQUMsa0hBQW9CO0FBQ3pDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3Jlc291cmNlcy9idWlsZC9zcmMvcGxhdGZvcm0vYnJvd3Nlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RldGVjdC1yZXNvdXJjZXNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/platform/browser/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/resources/build/src/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/resources/build/src/types.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy90eXBlcy5qcz8yYTE2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL3NyYy90eXBlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/resources/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./trace */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./resource */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/resource/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL2luZGV4LmpzPzFmMjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCxhQUFhLG1CQUFPLENBQUMsNEZBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLGtHQUFZO0FBQ2pDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RyYWNlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZXNvdXJjZVwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/resource/ResourceAttributes.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/resource/ResourceAttributes.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TelemetrySdkLanguageValues = exports.OsTypeValues = exports.HostArchValues = exports.AwsEcsLaunchtypeValues = exports.CloudPlatformValues = exports.CloudProviderValues = exports.ResourceAttributes = void 0;\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexports.ResourceAttributes = {\n    /**\n     * Name of the cloud provider.\n     */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n     * The cloud account ID the resource is assigned to.\n     */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n     * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n     */\n    CLOUD_REGION: 'cloud.region',\n    /**\n     * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n     *\n     * Note: Availability zones are called &#34;zones&#34; on Google Cloud.\n     */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n     * The cloud platform in use.\n     *\n     * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n     */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n     * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n     */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n     * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n     */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n     * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n     */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n     * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n     */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n     * The task definition family this task definition is a member of.\n     */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n     * The revision for this task definition.\n     */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n     * The ARN of an EKS cluster.\n     */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n     * The name(s) of the AWS log group(s) an application is writing to.\n     *\n     * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n     */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n     * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n     *\n     * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n     */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n     * The name(s) of the AWS log stream(s) an application is writing to.\n     */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n     * The ARN(s) of the AWS log stream(s).\n     *\n     * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n     */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n     * Container name.\n     */\n    CONTAINER_NAME: 'container.name',\n    /**\n     * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n     */\n    CONTAINER_ID: 'container.id',\n    /**\n     * The container runtime managing this container.\n     */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n     * Name of the image the container was built on.\n     */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n     * Container image tag.\n     */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n     * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n     */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n     * The name of the function being executed.\n     */\n    FAAS_NAME: 'faas.name',\n    /**\n     * The unique ID of the function being executed.\n     *\n     * Note: For example, in AWS Lambda this field corresponds to the [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) value, in GCP to the URI of the resource, and in Azure to the [FunctionDirectory](https://github.com/Azure/azure-functions-host/wiki/Retrieving-information-about-the-currently-running-function) field.\n     */\n    FAAS_ID: 'faas.id',\n    /**\n     * The version string of the function being executed as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n     */\n    FAAS_VERSION: 'faas.version',\n    /**\n     * The execution environment ID as a string.\n     */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n     * The amount of memory available to the serverless function in MiB.\n     *\n     * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n     */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n     * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n     */\n    HOST_ID: 'host.id',\n    /**\n     * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n     */\n    HOST_NAME: 'host.name',\n    /**\n     * Type of host. For Cloud, this must be the machine type.\n     */\n    HOST_TYPE: 'host.type',\n    /**\n     * The CPU architecture the host system is running on.\n     */\n    HOST_ARCH: 'host.arch',\n    /**\n     * Name of the VM image or OS install the host was instantiated from.\n     */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n     * VM image ID. For Cloud, this value is from the provider.\n     */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n     * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n     */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n     * The name of the cluster.\n     */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n     * The name of the Node.\n     */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n     * The UID of the Node.\n     */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n     * The name of the namespace that the pod is running in.\n     */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n     * The UID of the Pod.\n     */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n     * The name of the Pod.\n     */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n     * The name of the Container in a Pod template.\n     */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n     * The UID of the ReplicaSet.\n     */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n     * The name of the ReplicaSet.\n     */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n     * The UID of the Deployment.\n     */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n     * The name of the Deployment.\n     */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n     * The UID of the StatefulSet.\n     */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n     * The name of the StatefulSet.\n     */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n     * The UID of the DaemonSet.\n     */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n     * The name of the DaemonSet.\n     */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n     * The UID of the Job.\n     */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n     * The name of the Job.\n     */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n     * The UID of the CronJob.\n     */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n     * The name of the CronJob.\n     */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n     * The operating system type.\n     */\n    OS_TYPE: 'os.type',\n    /**\n     * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n     */\n    OS_DESCRIPTION: 'os.description',\n    /**\n     * Process identifier (PID).\n     */\n    PROCESS_PID: 'process.pid',\n    /**\n     * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n     */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n     * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n     */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n     * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n     */\n    PROCESS_COMMAND: 'process.command',\n    /**\n     * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n     */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n     * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n     */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n     * The username of the user that owns the process.\n     */\n    PROCESS_OWNER: 'process.owner',\n    /**\n     * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n     */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n     * The version of the runtime of this process, as returned by the runtime without modification.\n     */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n     * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n     */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n     * Logical name of the service.\n     *\n     * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n     */\n    SERVICE_NAME: 'service.name',\n    /**\n     * A namespace for `service.name`.\n     *\n     * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n     */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n     * The string ID of the service instance.\n     *\n     * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n     */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n     * The version string of the service API or implementation.\n     */\n    SERVICE_VERSION: 'service.version',\n    /**\n     * The name of the telemetry SDK as defined above.\n     */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n     * The language of the telemetry SDK.\n     */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n     * The version string of the telemetry SDK.\n     */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n     * The version string of the auto instrumentation agent, if used.\n     */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n     * The name of the web engine.\n     */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n     * The version of the web engine.\n     */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n     * Additional description of the web engine (e.g. detailed version and edition information).\n     */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\n// Enum definitions\nvar CloudProviderValues;\n(function (CloudProviderValues) {\n    /** Amazon Web Services. */\n    CloudProviderValues[\"AWS\"] = \"aws\";\n    /** Microsoft Azure. */\n    CloudProviderValues[\"AZURE\"] = \"azure\";\n    /** Google Cloud Platform. */\n    CloudProviderValues[\"GCP\"] = \"gcp\";\n})(CloudProviderValues = exports.CloudProviderValues || (exports.CloudProviderValues = {}));\nvar CloudPlatformValues;\n(function (CloudPlatformValues) {\n    /** AWS Elastic Compute Cloud. */\n    CloudPlatformValues[\"AWS_EC2\"] = \"aws_ec2\";\n    /** AWS Elastic Container Service. */\n    CloudPlatformValues[\"AWS_ECS\"] = \"aws_ecs\";\n    /** AWS Elastic Kubernetes Service. */\n    CloudPlatformValues[\"AWS_EKS\"] = \"aws_eks\";\n    /** AWS Lambda. */\n    CloudPlatformValues[\"AWS_LAMBDA\"] = \"aws_lambda\";\n    /** AWS Elastic Beanstalk. */\n    CloudPlatformValues[\"AWS_ELASTICBEANSTALK\"] = \"aws_elastic_beanstalk\";\n    /** Azure Virtual Machines. */\n    CloudPlatformValues[\"AZURE_VM\"] = \"azure_vm\";\n    /** Azure Container Instances. */\n    CloudPlatformValues[\"AZURE_CONTAINERINSTANCES\"] = \"azure_container_instances\";\n    /** Azure Kubernetes Service. */\n    CloudPlatformValues[\"AZURE_AKS\"] = \"azure_aks\";\n    /** Azure Functions. */\n    CloudPlatformValues[\"AZURE_FUNCTIONS\"] = \"azure_functions\";\n    /** Azure App Service. */\n    CloudPlatformValues[\"AZURE_APPSERVICE\"] = \"azure_app_service\";\n    /** Google Cloud Compute Engine (GCE). */\n    CloudPlatformValues[\"GCP_COMPUTEENGINE\"] = \"gcp_compute_engine\";\n    /** Google Cloud Run. */\n    CloudPlatformValues[\"GCP_CLOUDRUN\"] = \"gcp_cloud_run\";\n    /** Google Cloud Kubernetes Engine (GKE). */\n    CloudPlatformValues[\"GCP_KUBERNETESENGINE\"] = \"gcp_kubernetes_engine\";\n    /** Google Cloud Functions (GCF). */\n    CloudPlatformValues[\"GCP_CLOUDFUNCTIONS\"] = \"gcp_cloud_functions\";\n    /** Google Cloud App Engine (GAE). */\n    CloudPlatformValues[\"GCP_APPENGINE\"] = \"gcp_app_engine\";\n})(CloudPlatformValues = exports.CloudPlatformValues || (exports.CloudPlatformValues = {}));\nvar AwsEcsLaunchtypeValues;\n(function (AwsEcsLaunchtypeValues) {\n    /** ec2. */\n    AwsEcsLaunchtypeValues[\"EC2\"] = \"ec2\";\n    /** fargate. */\n    AwsEcsLaunchtypeValues[\"FARGATE\"] = \"fargate\";\n})(AwsEcsLaunchtypeValues = exports.AwsEcsLaunchtypeValues || (exports.AwsEcsLaunchtypeValues = {}));\nvar HostArchValues;\n(function (HostArchValues) {\n    /** AMD64. */\n    HostArchValues[\"AMD64\"] = \"amd64\";\n    /** ARM32. */\n    HostArchValues[\"ARM32\"] = \"arm32\";\n    /** ARM64. */\n    HostArchValues[\"ARM64\"] = \"arm64\";\n    /** Itanium. */\n    HostArchValues[\"IA64\"] = \"ia64\";\n    /** 32-bit PowerPC. */\n    HostArchValues[\"PPC32\"] = \"ppc32\";\n    /** 64-bit PowerPC. */\n    HostArchValues[\"PPC64\"] = \"ppc64\";\n    /** 32-bit x86. */\n    HostArchValues[\"X86\"] = \"x86\";\n})(HostArchValues = exports.HostArchValues || (exports.HostArchValues = {}));\nvar OsTypeValues;\n(function (OsTypeValues) {\n    /** Microsoft Windows. */\n    OsTypeValues[\"WINDOWS\"] = \"WINDOWS\";\n    /** Linux. */\n    OsTypeValues[\"LINUX\"] = \"LINUX\";\n    /** Apple Darwin. */\n    OsTypeValues[\"DARWIN\"] = \"DARWIN\";\n    /** FreeBSD. */\n    OsTypeValues[\"FREEBSD\"] = \"FREEBSD\";\n    /** NetBSD. */\n    OsTypeValues[\"NETBSD\"] = \"NETBSD\";\n    /** OpenBSD. */\n    OsTypeValues[\"OPENBSD\"] = \"OPENBSD\";\n    /** DragonFly BSD. */\n    OsTypeValues[\"DRAGONFLYBSD\"] = \"DRAGONFLYBSD\";\n    /** HP-UX (Hewlett Packard Unix). */\n    OsTypeValues[\"HPUX\"] = \"HPUX\";\n    /** AIX (Advanced Interactive eXecutive). */\n    OsTypeValues[\"AIX\"] = \"AIX\";\n    /** Oracle Solaris. */\n    OsTypeValues[\"SOLARIS\"] = \"SOLARIS\";\n    /** IBM z/OS. */\n    OsTypeValues[\"ZOS\"] = \"ZOS\";\n})(OsTypeValues = exports.OsTypeValues || (exports.OsTypeValues = {}));\nvar TelemetrySdkLanguageValues;\n(function (TelemetrySdkLanguageValues) {\n    /** cpp. */\n    TelemetrySdkLanguageValues[\"CPP\"] = \"cpp\";\n    /** dotnet. */\n    TelemetrySdkLanguageValues[\"DOTNET\"] = \"dotnet\";\n    /** erlang. */\n    TelemetrySdkLanguageValues[\"ERLANG\"] = \"erlang\";\n    /** go. */\n    TelemetrySdkLanguageValues[\"GO\"] = \"go\";\n    /** java. */\n    TelemetrySdkLanguageValues[\"JAVA\"] = \"java\";\n    /** nodejs. */\n    TelemetrySdkLanguageValues[\"NODEJS\"] = \"nodejs\";\n    /** php. */\n    TelemetrySdkLanguageValues[\"PHP\"] = \"php\";\n    /** python. */\n    TelemetrySdkLanguageValues[\"PYTHON\"] = \"python\";\n    /** ruby. */\n    TelemetrySdkLanguageValues[\"RUBY\"] = \"ruby\";\n    /** webjs. */\n    TelemetrySdkLanguageValues[\"WEBJS\"] = \"webjs\";\n})(TelemetrySdkLanguageValues = exports.TelemetrySdkLanguageValues || (exports.TelemetrySdkLanguageValues = {}));\n//# sourceMappingURL=ResourceAttributes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/resource/ResourceAttributes.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/resource/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/resource/index.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n__exportStar(__webpack_require__(/*! ./ResourceAttributes */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/resource/ResourceAttributes.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3Jlc291cmNlL2luZGV4LmpzPzUyZTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMseUhBQXNCO0FBQzNDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zL2J1aWxkL3NyYy9yZXNvdXJjZS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1Jlc291cmNlQXR0cmlidXRlc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/resource/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/SemanticAttributes.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/SemanticAttributes.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RpcGrpcStatusCodeValues = exports.MessagingOperationValues = exports.MessagingDestinationKindValues = exports.HttpFlavorValues = exports.NetTransportValues = exports.FaasInvokedProviderValues = exports.FaasDocumentOperationValues = exports.FaasTriggerValues = exports.DbCassandraConsistencyLevelValues = exports.DbSystemValues = exports.SemanticAttributes = void 0;\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexports.SemanticAttributes = {\n    /**\n     * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n     */\n    DB_SYSTEM: 'db.system',\n    /**\n     * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n     */\n    DB_CONNECTION_STRING: 'db.connection_string',\n    /**\n     * Username for accessing the database.\n     */\n    DB_USER: 'db.user',\n    /**\n     * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n     */\n    DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n    /**\n     * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n     *\n     * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n     */\n    DB_NAME: 'db.name',\n    /**\n     * The database statement being executed.\n     *\n     * Note: The value may be sanitized to exclude sensitive information.\n     */\n    DB_STATEMENT: 'db.statement',\n    /**\n     * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n     *\n     * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n     */\n    DB_OPERATION: 'db.operation',\n    /**\n     * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n     *\n     * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n     */\n    DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n    /**\n     * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n    /**\n     * The fetch size used for paging, i.e. how many rows will be returned at once.\n     */\n    DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n    /**\n     * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n     */\n    DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_CASSANDRA_TABLE: 'db.cassandra.table',\n    /**\n     * Whether or not the query is idempotent.\n     */\n    DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n    /**\n     * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n     */\n    DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n    /**\n     * The ID of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n    /**\n     * The data center of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n    /**\n     * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n    /**\n     * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n     */\n    DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n    /**\n     * The collection being accessed within the database stated in `db.name`.\n     */\n    DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_SQL_TABLE: 'db.sql.table',\n    /**\n     * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n     */\n    EXCEPTION_TYPE: 'exception.type',\n    /**\n     * The exception message.\n     */\n    EXCEPTION_MESSAGE: 'exception.message',\n    /**\n     * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n     */\n    EXCEPTION_STACKTRACE: 'exception.stacktrace',\n    /**\n    * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n    *\n    * Note: An exception is considered to have escaped (or left) the scope of a span,\n  if that span is ended while the exception is still logically &#34;in flight&#34;.\n  This may be actually &#34;in flight&#34; in some languages (e.g. if the exception\n  is passed to a Context manager&#39;s `__exit__` method in Python) but will\n  usually be caught at the point of recording the exception in most languages.\n  \n  It is usually not possible to determine at the point where an exception is thrown\n  whether it will escape the scope of a span.\n  However, it is trivial to know that an exception\n  will escape, if one checks for an active exception just before ending the span,\n  as done in the [example above](#exception-end-example).\n  \n  It follows that an exception may still escape the scope of the span\n  even if the `exception.escaped` attribute was not set or set to false,\n  since the event might have been recorded at a time where it was not\n  clear whether the exception will escape.\n    */\n    EXCEPTION_ESCAPED: 'exception.escaped',\n    /**\n     * Type of the trigger on which the function is executed.\n     */\n    FAAS_TRIGGER: 'faas.trigger',\n    /**\n     * The execution ID of the current function execution.\n     */\n    FAAS_EXECUTION: 'faas.execution',\n    /**\n     * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n     */\n    FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n    /**\n     * Describes the type of the operation that was performed on the data.\n     */\n    FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n    /**\n     * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_DOCUMENT_TIME: 'faas.document.time',\n    /**\n     * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n     */\n    FAAS_DOCUMENT_NAME: 'faas.document.name',\n    /**\n     * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_TIME: 'faas.time',\n    /**\n     * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n     */\n    FAAS_CRON: 'faas.cron',\n    /**\n     * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n     */\n    FAAS_COLDSTART: 'faas.coldstart',\n    /**\n     * The name of the invoked function.\n     *\n     * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_NAME: 'faas.invoked_name',\n    /**\n     * The cloud provider of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n    /**\n     * The cloud region of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_REGION: 'faas.invoked_region',\n    /**\n     * Transport protocol used. See note below.\n     */\n    NET_TRANSPORT: 'net.transport',\n    /**\n     * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n     */\n    NET_PEER_IP: 'net.peer.ip',\n    /**\n     * Remote port number.\n     */\n    NET_PEER_PORT: 'net.peer.port',\n    /**\n     * Remote hostname or similar, see note below.\n     */\n    NET_PEER_NAME: 'net.peer.name',\n    /**\n     * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n     */\n    NET_HOST_IP: 'net.host.ip',\n    /**\n     * Like `net.peer.port` but for the host port.\n     */\n    NET_HOST_PORT: 'net.host.port',\n    /**\n     * Local hostname or similar, see note below.\n     */\n    NET_HOST_NAME: 'net.host.name',\n    /**\n     * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n     */\n    PEER_SERVICE: 'peer.service',\n    /**\n     * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n     */\n    ENDUSER_ID: 'enduser.id',\n    /**\n     * Actual/assumed role the client is making the request under extracted from token or application security context.\n     */\n    ENDUSER_ROLE: 'enduser.role',\n    /**\n     * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n     */\n    ENDUSER_SCOPE: 'enduser.scope',\n    /**\n     * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n     */\n    THREAD_ID: 'thread.id',\n    /**\n     * Current thread name.\n     */\n    THREAD_NAME: 'thread.name',\n    /**\n     * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n     */\n    CODE_FUNCTION: 'code.function',\n    /**\n     * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n     */\n    CODE_NAMESPACE: 'code.namespace',\n    /**\n     * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n     */\n    CODE_FILEPATH: 'code.filepath',\n    /**\n     * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n     */\n    CODE_LINENO: 'code.lineno',\n    /**\n     * HTTP request method.\n     */\n    HTTP_METHOD: 'http.method',\n    /**\n     * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n     *\n     * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n     */\n    HTTP_URL: 'http.url',\n    /**\n     * The full request target as passed in a HTTP request line or equivalent.\n     */\n    HTTP_TARGET: 'http.target',\n    /**\n     * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is empty or not present, this attribute should be the same.\n     */\n    HTTP_HOST: 'http.host',\n    /**\n     * The URI scheme identifying the used protocol.\n     */\n    HTTP_SCHEME: 'http.scheme',\n    /**\n     * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n     */\n    HTTP_STATUS_CODE: 'http.status_code',\n    /**\n     * Kind of HTTP protocol used.\n     *\n     * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n     */\n    HTTP_FLAVOR: 'http.flavor',\n    /**\n     * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n     */\n    HTTP_USER_AGENT: 'http.user_agent',\n    /**\n     * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n    /**\n     * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n    /**\n     * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n    /**\n     * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n    /**\n     * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n     *\n     * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n     */\n    HTTP_SERVER_NAME: 'http.server_name',\n    /**\n     * The matched route (path template).\n     */\n    HTTP_ROUTE: 'http.route',\n    /**\n     * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n     *\n     * Note: This is not necessarily the same as `net.peer.ip`, which would identify the network-level peer, which may be a proxy.\n     */\n    HTTP_CLIENT_IP: 'http.client_ip',\n    /**\n     * The keys in the `RequestItems` object field.\n     */\n    AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n    /**\n     * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n     */\n    AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n    /**\n     * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n     */\n    AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n    /**\n     * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n    /**\n     * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n    /**\n     * The value of the `ConsistentRead` request parameter.\n     */\n    AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n    /**\n     * The value of the `ProjectionExpression` request parameter.\n     */\n    AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n    /**\n     * The value of the `Limit` request parameter.\n     */\n    AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n    /**\n     * The value of the `AttributesToGet` request parameter.\n     */\n    AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n    /**\n     * The value of the `IndexName` request parameter.\n     */\n    AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n    /**\n     * The value of the `Select` request parameter.\n     */\n    AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n    /**\n     * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n    /**\n     * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n    /**\n     * The value of the `ExclusiveStartTableName` request parameter.\n     */\n    AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n    /**\n     * The the number of items in the `TableNames` response parameter.\n     */\n    AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n    /**\n     * The value of the `ScanIndexForward` request parameter.\n     */\n    AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n    /**\n     * The value of the `Segment` request parameter.\n     */\n    AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n    /**\n     * The value of the `TotalSegments` request parameter.\n     */\n    AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n    /**\n     * The value of the `Count` response parameter.\n     */\n    AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n    /**\n     * The value of the `ScannedCount` response parameter.\n     */\n    AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n    /**\n     * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n     */\n    AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n    /**\n     * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n    /**\n     * A string identifying the messaging system.\n     */\n    MESSAGING_SYSTEM: 'messaging.system',\n    /**\n     * The message destination name. This might be equal to the span name but is required nevertheless.\n     */\n    MESSAGING_DESTINATION: 'messaging.destination',\n    /**\n     * The kind of message destination.\n     */\n    MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n    /**\n     * A boolean that is true if the message destination is temporary.\n     */\n    MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n    /**\n     * The name of the transport protocol.\n     */\n    MESSAGING_PROTOCOL: 'messaging.protocol',\n    /**\n     * The version of the transport protocol.\n     */\n    MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n    /**\n     * Connection string.\n     */\n    MESSAGING_URL: 'messaging.url',\n    /**\n     * A value used by the messaging system as an identifier for the message, represented as a string.\n     */\n    MESSAGING_MESSAGE_ID: 'messaging.message_id',\n    /**\n     * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n     */\n    MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n    /**\n     * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n    /**\n     * The compressed size of the message payload in bytes.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n    /**\n     * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n     */\n    MESSAGING_OPERATION: 'messaging.operation',\n    /**\n     * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n     *\n     * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n     */\n    MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n    /**\n     * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n     */\n    MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n    /**\n     * Client Id for the Consumer or Producer that is handling the message.\n     */\n    MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n    /**\n     * Partition the message is sent to.\n     */\n    MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n    /**\n     * A boolean that is true if the message is a tombstone.\n     */\n    MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n    /**\n     * A string identifying the remoting system.\n     */\n    RPC_SYSTEM: 'rpc.system',\n    /**\n     * The full name of the service being called, including its package name, if applicable.\n     */\n    RPC_SERVICE: 'rpc.service',\n    /**\n     * The name of the method being called, must be equal to the $method part in the span name.\n     */\n    RPC_METHOD: 'rpc.method',\n    /**\n     * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n     */\n    RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n};\n// Enum definitions\nvar DbSystemValues;\n(function (DbSystemValues) {\n    /** Some other SQL database. Fallback only. See notes. */\n    DbSystemValues[\"OTHER_SQL\"] = \"other_sql\";\n    /** Microsoft SQL Server. */\n    DbSystemValues[\"MSSQL\"] = \"mssql\";\n    /** MySQL. */\n    DbSystemValues[\"MYSQL\"] = \"mysql\";\n    /** Oracle Database. */\n    DbSystemValues[\"ORACLE\"] = \"oracle\";\n    /** IBM Db2. */\n    DbSystemValues[\"DB2\"] = \"db2\";\n    /** PostgreSQL. */\n    DbSystemValues[\"POSTGRESQL\"] = \"postgresql\";\n    /** Amazon Redshift. */\n    DbSystemValues[\"REDSHIFT\"] = \"redshift\";\n    /** Apache Hive. */\n    DbSystemValues[\"HIVE\"] = \"hive\";\n    /** Cloudscape. */\n    DbSystemValues[\"CLOUDSCAPE\"] = \"cloudscape\";\n    /** HyperSQL DataBase. */\n    DbSystemValues[\"HSQLDB\"] = \"hsqldb\";\n    /** Progress Database. */\n    DbSystemValues[\"PROGRESS\"] = \"progress\";\n    /** SAP MaxDB. */\n    DbSystemValues[\"MAXDB\"] = \"maxdb\";\n    /** SAP HANA. */\n    DbSystemValues[\"HANADB\"] = \"hanadb\";\n    /** Ingres. */\n    DbSystemValues[\"INGRES\"] = \"ingres\";\n    /** FirstSQL. */\n    DbSystemValues[\"FIRSTSQL\"] = \"firstsql\";\n    /** EnterpriseDB. */\n    DbSystemValues[\"EDB\"] = \"edb\";\n    /** InterSystems Caché. */\n    DbSystemValues[\"CACHE\"] = \"cache\";\n    /** Adabas (Adaptable Database System). */\n    DbSystemValues[\"ADABAS\"] = \"adabas\";\n    /** Firebird. */\n    DbSystemValues[\"FIREBIRD\"] = \"firebird\";\n    /** Apache Derby. */\n    DbSystemValues[\"DERBY\"] = \"derby\";\n    /** FileMaker. */\n    DbSystemValues[\"FILEMAKER\"] = \"filemaker\";\n    /** Informix. */\n    DbSystemValues[\"INFORMIX\"] = \"informix\";\n    /** InstantDB. */\n    DbSystemValues[\"INSTANTDB\"] = \"instantdb\";\n    /** InterBase. */\n    DbSystemValues[\"INTERBASE\"] = \"interbase\";\n    /** MariaDB. */\n    DbSystemValues[\"MARIADB\"] = \"mariadb\";\n    /** Netezza. */\n    DbSystemValues[\"NETEZZA\"] = \"netezza\";\n    /** Pervasive PSQL. */\n    DbSystemValues[\"PERVASIVE\"] = \"pervasive\";\n    /** PointBase. */\n    DbSystemValues[\"POINTBASE\"] = \"pointbase\";\n    /** SQLite. */\n    DbSystemValues[\"SQLITE\"] = \"sqlite\";\n    /** Sybase. */\n    DbSystemValues[\"SYBASE\"] = \"sybase\";\n    /** Teradata. */\n    DbSystemValues[\"TERADATA\"] = \"teradata\";\n    /** Vertica. */\n    DbSystemValues[\"VERTICA\"] = \"vertica\";\n    /** H2. */\n    DbSystemValues[\"H2\"] = \"h2\";\n    /** ColdFusion IMQ. */\n    DbSystemValues[\"COLDFUSION\"] = \"coldfusion\";\n    /** Apache Cassandra. */\n    DbSystemValues[\"CASSANDRA\"] = \"cassandra\";\n    /** Apache HBase. */\n    DbSystemValues[\"HBASE\"] = \"hbase\";\n    /** MongoDB. */\n    DbSystemValues[\"MONGODB\"] = \"mongodb\";\n    /** Redis. */\n    DbSystemValues[\"REDIS\"] = \"redis\";\n    /** Couchbase. */\n    DbSystemValues[\"COUCHBASE\"] = \"couchbase\";\n    /** CouchDB. */\n    DbSystemValues[\"COUCHDB\"] = \"couchdb\";\n    /** Microsoft Azure Cosmos DB. */\n    DbSystemValues[\"COSMOSDB\"] = \"cosmosdb\";\n    /** Amazon DynamoDB. */\n    DbSystemValues[\"DYNAMODB\"] = \"dynamodb\";\n    /** Neo4j. */\n    DbSystemValues[\"NEO4J\"] = \"neo4j\";\n    /** Apache Geode. */\n    DbSystemValues[\"GEODE\"] = \"geode\";\n    /** Elasticsearch. */\n    DbSystemValues[\"ELASTICSEARCH\"] = \"elasticsearch\";\n})(DbSystemValues = exports.DbSystemValues || (exports.DbSystemValues = {}));\nvar DbCassandraConsistencyLevelValues;\n(function (DbCassandraConsistencyLevelValues) {\n    /** ALL. */\n    DbCassandraConsistencyLevelValues[\"ALL\"] = \"ALL\";\n    /** EACH_QUORUM. */\n    DbCassandraConsistencyLevelValues[\"EACH_QUORUM\"] = \"EACH_QUORUM\";\n    /** QUORUM. */\n    DbCassandraConsistencyLevelValues[\"QUORUM\"] = \"QUORUM\";\n    /** LOCAL_QUORUM. */\n    DbCassandraConsistencyLevelValues[\"LOCAL_QUORUM\"] = \"LOCAL_QUORUM\";\n    /** ONE. */\n    DbCassandraConsistencyLevelValues[\"ONE\"] = \"ONE\";\n    /** TWO. */\n    DbCassandraConsistencyLevelValues[\"TWO\"] = \"TWO\";\n    /** THREE. */\n    DbCassandraConsistencyLevelValues[\"THREE\"] = \"THREE\";\n    /** LOCAL_ONE. */\n    DbCassandraConsistencyLevelValues[\"LOCAL_ONE\"] = \"LOCAL_ONE\";\n    /** ANY. */\n    DbCassandraConsistencyLevelValues[\"ANY\"] = \"ANY\";\n    /** SERIAL. */\n    DbCassandraConsistencyLevelValues[\"SERIAL\"] = \"SERIAL\";\n    /** LOCAL_SERIAL. */\n    DbCassandraConsistencyLevelValues[\"LOCAL_SERIAL\"] = \"LOCAL_SERIAL\";\n})(DbCassandraConsistencyLevelValues = exports.DbCassandraConsistencyLevelValues || (exports.DbCassandraConsistencyLevelValues = {}));\nvar FaasTriggerValues;\n(function (FaasTriggerValues) {\n    /** A response to some data source operation such as a database or filesystem read/write. */\n    FaasTriggerValues[\"DATASOURCE\"] = \"datasource\";\n    /** To provide an answer to an inbound HTTP request. */\n    FaasTriggerValues[\"HTTP\"] = \"http\";\n    /** A function is set to be executed when messages are sent to a messaging system. */\n    FaasTriggerValues[\"PUBSUB\"] = \"pubsub\";\n    /** A function is scheduled to be executed regularly. */\n    FaasTriggerValues[\"TIMER\"] = \"timer\";\n    /** If none of the others apply. */\n    FaasTriggerValues[\"OTHER\"] = \"other\";\n})(FaasTriggerValues = exports.FaasTriggerValues || (exports.FaasTriggerValues = {}));\nvar FaasDocumentOperationValues;\n(function (FaasDocumentOperationValues) {\n    /** When a new object is created. */\n    FaasDocumentOperationValues[\"INSERT\"] = \"insert\";\n    /** When an object is modified. */\n    FaasDocumentOperationValues[\"EDIT\"] = \"edit\";\n    /** When an object is deleted. */\n    FaasDocumentOperationValues[\"DELETE\"] = \"delete\";\n})(FaasDocumentOperationValues = exports.FaasDocumentOperationValues || (exports.FaasDocumentOperationValues = {}));\nvar FaasInvokedProviderValues;\n(function (FaasInvokedProviderValues) {\n    /** Amazon Web Services. */\n    FaasInvokedProviderValues[\"AWS\"] = \"aws\";\n    /** Microsoft Azure. */\n    FaasInvokedProviderValues[\"AZURE\"] = \"azure\";\n    /** Google Cloud Platform. */\n    FaasInvokedProviderValues[\"GCP\"] = \"gcp\";\n})(FaasInvokedProviderValues = exports.FaasInvokedProviderValues || (exports.FaasInvokedProviderValues = {}));\nvar NetTransportValues;\n(function (NetTransportValues) {\n    /** IP.TCP. */\n    NetTransportValues[\"IP_TCP\"] = \"IP.TCP\";\n    /** IP.UDP. */\n    NetTransportValues[\"IP_UDP\"] = \"IP.UDP\";\n    /** Another IP-based protocol. */\n    NetTransportValues[\"IP\"] = \"IP\";\n    /** Unix Domain socket. See below. */\n    NetTransportValues[\"UNIX\"] = \"Unix\";\n    /** Named or anonymous pipe. See note below. */\n    NetTransportValues[\"PIPE\"] = \"pipe\";\n    /** In-process communication. */\n    NetTransportValues[\"INPROC\"] = \"inproc\";\n    /** Something else (non IP-based). */\n    NetTransportValues[\"OTHER\"] = \"other\";\n})(NetTransportValues = exports.NetTransportValues || (exports.NetTransportValues = {}));\nvar HttpFlavorValues;\n(function (HttpFlavorValues) {\n    /** HTTP 1.0. */\n    HttpFlavorValues[\"HTTP_1_0\"] = \"1.0\";\n    /** HTTP 1.1. */\n    HttpFlavorValues[\"HTTP_1_1\"] = \"1.1\";\n    /** HTTP 2. */\n    HttpFlavorValues[\"HTTP_2_0\"] = \"2.0\";\n    /** SPDY protocol. */\n    HttpFlavorValues[\"SPDY\"] = \"SPDY\";\n    /** QUIC protocol. */\n    HttpFlavorValues[\"QUIC\"] = \"QUIC\";\n})(HttpFlavorValues = exports.HttpFlavorValues || (exports.HttpFlavorValues = {}));\nvar MessagingDestinationKindValues;\n(function (MessagingDestinationKindValues) {\n    /** A message sent to a queue. */\n    MessagingDestinationKindValues[\"QUEUE\"] = \"queue\";\n    /** A message sent to a topic. */\n    MessagingDestinationKindValues[\"TOPIC\"] = \"topic\";\n})(MessagingDestinationKindValues = exports.MessagingDestinationKindValues || (exports.MessagingDestinationKindValues = {}));\nvar MessagingOperationValues;\n(function (MessagingOperationValues) {\n    /** receive. */\n    MessagingOperationValues[\"RECEIVE\"] = \"receive\";\n    /** process. */\n    MessagingOperationValues[\"PROCESS\"] = \"process\";\n})(MessagingOperationValues = exports.MessagingOperationValues || (exports.MessagingOperationValues = {}));\nvar RpcGrpcStatusCodeValues;\n(function (RpcGrpcStatusCodeValues) {\n    /** OK. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"OK\"] = 0] = \"OK\";\n    /** CANCELLED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    /** UNKNOWN. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    /** INVALID_ARGUMENT. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    /** DEADLINE_EXCEEDED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    /** NOT_FOUND. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    /** ALREADY_EXISTS. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    /** PERMISSION_DENIED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    /** RESOURCE_EXHAUSTED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    /** FAILED_PRECONDITION. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    /** ABORTED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"ABORTED\"] = 10] = \"ABORTED\";\n    /** OUT_OF_RANGE. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    /** UNIMPLEMENTED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    /** INTERNAL. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    /** UNAVAILABLE. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    /** DATA_LOSS. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n    /** UNAUTHENTICATED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(RpcGrpcStatusCodeValues = exports.RpcGrpcStatusCodeValues || (exports.RpcGrpcStatusCodeValues = {}));\n//# sourceMappingURL=SemanticAttributes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/SemanticAttributes.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/semantic-conventions/build/src/trace/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/semantic-conventions/build/src/trace/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n__exportStar(__webpack_require__(/*! ./SemanticAttributes */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/trace/SemanticAttributes.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMvYnVpbGQvc3JjL3RyYWNlL2luZGV4LmpzP2JhZDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0Esa0NBQWtDLG9DQUFvQyxhQUFhLEVBQUUsRUFBRTtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsc0hBQXNCO0FBQzNDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zL2J1aWxkL3NyYy90cmFjZS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1NlbWFudGljQXR0cmlidXRlc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/semantic-conventions/build/src/trace/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/BasicTracerProvider.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/BasicTracerProvider.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasicTracerProvider = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst resources_1 = __webpack_require__(/*! @opentelemetry/resources */ \"./node_modules/@opentelemetry/resources/build/src/index.js\");\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@opentelemetry/tracing/build/src/index.js\");\nconst config_1 = __webpack_require__(/*! ./config */ \"./node_modules/@opentelemetry/tracing/build/src/config.js\");\nconst MultiSpanProcessor_1 = __webpack_require__(/*! ./MultiSpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/MultiSpanProcessor.js\");\nconst NoopSpanProcessor_1 = __webpack_require__(/*! ./NoopSpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/NoopSpanProcessor.js\");\nconst merge = __webpack_require__(/*! lodash.merge */ \"./node_modules/lodash.merge/index.js\");\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nclass BasicTracerProvider {\n    constructor(config = {}) {\n        var _a;\n        this._registeredSpanProcessors = [];\n        this._tracers = new Map();\n        this.activeSpanProcessor = new NoopSpanProcessor_1.NoopSpanProcessor();\n        const mergedConfig = merge({}, config_1.DEFAULT_CONFIG, config);\n        this.resource =\n            (_a = mergedConfig.resource) !== null && _a !== void 0 ? _a : resources_1.Resource.createTelemetrySDKResource();\n        this._config = Object.assign({}, mergedConfig, {\n            resource: this.resource,\n        });\n    }\n    getTracer(name, version) {\n        const key = `${name}@${version || ''}`;\n        if (!this._tracers.has(key)) {\n            this._tracers.set(key, new _1.Tracer({ name, version }, this._config, this));\n        }\n        return this._tracers.get(key);\n    }\n    /**\n     * Adds a new {@link SpanProcessor} to this tracer.\n     * @param spanProcessor the new SpanProcessor to be added.\n     */\n    addSpanProcessor(spanProcessor) {\n        this._registeredSpanProcessors.push(spanProcessor);\n        this.activeSpanProcessor = new MultiSpanProcessor_1.MultiSpanProcessor(this._registeredSpanProcessors);\n    }\n    getActiveSpanProcessor() {\n        return this.activeSpanProcessor;\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    register(config = {}) {\n        api_1.trace.setGlobalTracerProvider(this);\n        if (config.propagator === undefined) {\n            config.propagator = this._buildPropagatorFromEnv();\n        }\n        if (config.contextManager) {\n            api_1.context.setGlobalContextManager(config.contextManager);\n        }\n        if (config.propagator) {\n            api_1.propagation.setGlobalPropagator(config.propagator);\n        }\n    }\n    shutdown() {\n        return this.activeSpanProcessor.shutdown();\n    }\n    _getPropagator(name) {\n        var _a;\n        return (_a = BasicTracerProvider._registeredPropagators.get(name)) === null || _a === void 0 ? void 0 : _a();\n    }\n    _buildPropagatorFromEnv() {\n        // per spec, propagators from env must be deduplicated\n        const uniquePropagatorNames = [...new Set(core_1.getEnv().OTEL_PROPAGATORS)];\n        const propagators = uniquePropagatorNames.map(name => {\n            const propagator = this._getPropagator(name);\n            if (!propagator) {\n                api_1.diag.warn(`Propagator \"${name}\" requested through environment variable is unavailable.`);\n            }\n            return propagator;\n        });\n        const validPropagators = propagators.reduce((list, item) => {\n            if (item) {\n                list.push(item);\n            }\n            return list;\n        }, []);\n        if (validPropagators.length === 0) {\n            return;\n        }\n        else if (uniquePropagatorNames.length === 1) {\n            return validPropagators[0];\n        }\n        else {\n            return new core_1.CompositePropagator({\n                propagators: validPropagators,\n            });\n        }\n    }\n}\nexports.BasicTracerProvider = BasicTracerProvider;\nBasicTracerProvider._registeredPropagators = new Map([\n    ['tracecontext', () => new core_1.HttpTraceContext()],\n    ['baggage', () => new core_1.HttpBaggage()],\n]);\n//# sourceMappingURL=BasicTracerProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvQmFzaWNUcmFjZXJQcm92aWRlci5qcz84OTViIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0ZBQW9CO0FBQzFDLGVBQWUsbUJBQU8sQ0FBQyxrRkFBcUI7QUFDNUMsb0JBQW9CLG1CQUFPLENBQUMsNEZBQTBCO0FBQ3RELFdBQVcsbUJBQU8sQ0FBQyxtRUFBRztBQUN0QixpQkFBaUIsbUJBQU8sQ0FBQywyRUFBVTtBQUNuQyw2QkFBNkIsbUJBQU8sQ0FBQyxtR0FBc0I7QUFDM0QsNEJBQTRCLG1CQUFPLENBQUMsaUdBQXFCO0FBQ3pELGNBQWMsbUJBQU8sQ0FBQywwREFBYztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSx1QkFBdUIsS0FBSyxHQUFHLGNBQWM7QUFDN0M7QUFDQSxrREFBa0QsZ0JBQWdCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG9CQUFvQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsS0FBSztBQUNwRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9CYXNpY1RyYWNlclByb3ZpZGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXNpY1RyYWNlclByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG5jb25zdCByZXNvdXJjZXNfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9yZXNvdXJjZXNcIik7XG5jb25zdCBfMSA9IHJlcXVpcmUoXCIuXCIpO1xuY29uc3QgY29uZmlnXzEgPSByZXF1aXJlKFwiLi9jb25maWdcIik7XG5jb25zdCBNdWx0aVNwYW5Qcm9jZXNzb3JfMSA9IHJlcXVpcmUoXCIuL011bHRpU3BhblByb2Nlc3NvclwiKTtcbmNvbnN0IE5vb3BTcGFuUHJvY2Vzc29yXzEgPSByZXF1aXJlKFwiLi9Ob29wU3BhblByb2Nlc3NvclwiKTtcbmNvbnN0IG1lcmdlID0gcmVxdWlyZShcImxvZGFzaC5tZXJnZVwiKTtcbi8qKlxuICogVGhpcyBjbGFzcyByZXByZXNlbnRzIGEgYmFzaWMgdHJhY2VyIHByb3ZpZGVyIHdoaWNoIHBsYXRmb3JtIGxpYnJhcmllcyBjYW4gZXh0ZW5kXG4gKi9cbmNsYXNzIEJhc2ljVHJhY2VyUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdGhpcy5fcmVnaXN0ZXJlZFNwYW5Qcm9jZXNzb3JzID0gW107XG4gICAgICAgIHRoaXMuX3RyYWNlcnMgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuYWN0aXZlU3BhblByb2Nlc3NvciA9IG5ldyBOb29wU3BhblByb2Nlc3Nvcl8xLk5vb3BTcGFuUHJvY2Vzc29yKCk7XG4gICAgICAgIGNvbnN0IG1lcmdlZENvbmZpZyA9IG1lcmdlKHt9LCBjb25maWdfMS5ERUZBVUxUX0NPTkZJRywgY29uZmlnKTtcbiAgICAgICAgdGhpcy5yZXNvdXJjZSA9XG4gICAgICAgICAgICAoX2EgPSBtZXJnZWRDb25maWcucmVzb3VyY2UpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHJlc291cmNlc18xLlJlc291cmNlLmNyZWF0ZVRlbGVtZXRyeVNES1Jlc291cmNlKCk7XG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IE9iamVjdC5hc3NpZ24oe30sIG1lcmdlZENvbmZpZywge1xuICAgICAgICAgICAgcmVzb3VyY2U6IHRoaXMucmVzb3VyY2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRUcmFjZXIobmFtZSwgdmVyc2lvbikge1xuICAgICAgICBjb25zdCBrZXkgPSBgJHtuYW1lfUAke3ZlcnNpb24gfHwgJyd9YDtcbiAgICAgICAgaWYgKCF0aGlzLl90cmFjZXJzLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICB0aGlzLl90cmFjZXJzLnNldChrZXksIG5ldyBfMS5UcmFjZXIoeyBuYW1lLCB2ZXJzaW9uIH0sIHRoaXMuX2NvbmZpZywgdGhpcykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl90cmFjZXJzLmdldChrZXkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGRzIGEgbmV3IHtAbGluayBTcGFuUHJvY2Vzc29yfSB0byB0aGlzIHRyYWNlci5cbiAgICAgKiBAcGFyYW0gc3BhblByb2Nlc3NvciB0aGUgbmV3IFNwYW5Qcm9jZXNzb3IgdG8gYmUgYWRkZWQuXG4gICAgICovXG4gICAgYWRkU3BhblByb2Nlc3NvcihzcGFuUHJvY2Vzc29yKSB7XG4gICAgICAgIHRoaXMuX3JlZ2lzdGVyZWRTcGFuUHJvY2Vzc29ycy5wdXNoKHNwYW5Qcm9jZXNzb3IpO1xuICAgICAgICB0aGlzLmFjdGl2ZVNwYW5Qcm9jZXNzb3IgPSBuZXcgTXVsdGlTcGFuUHJvY2Vzc29yXzEuTXVsdGlTcGFuUHJvY2Vzc29yKHRoaXMuX3JlZ2lzdGVyZWRTcGFuUHJvY2Vzc29ycyk7XG4gICAgfVxuICAgIGdldEFjdGl2ZVNwYW5Qcm9jZXNzb3IoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFjdGl2ZVNwYW5Qcm9jZXNzb3I7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlZ2lzdGVyIHRoaXMgVHJhY2VyUHJvdmlkZXIgZm9yIHVzZSB3aXRoIHRoZSBPcGVuVGVsZW1ldHJ5IEFQSS5cbiAgICAgKiBVbmRlZmluZWQgdmFsdWVzIG1heSBiZSByZXBsYWNlZCB3aXRoIGRlZmF1bHRzLCBhbmRcbiAgICAgKiBudWxsIHZhbHVlcyB3aWxsIGJlIHNraXBwZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY29uZmlnIENvbmZpZ3VyYXRpb24gb2JqZWN0IGZvciBTREsgcmVnaXN0cmF0aW9uXG4gICAgICovXG4gICAgcmVnaXN0ZXIoY29uZmlnID0ge30pIHtcbiAgICAgICAgYXBpXzEudHJhY2Uuc2V0R2xvYmFsVHJhY2VyUHJvdmlkZXIodGhpcyk7XG4gICAgICAgIGlmIChjb25maWcucHJvcGFnYXRvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25maWcucHJvcGFnYXRvciA9IHRoaXMuX2J1aWxkUHJvcGFnYXRvckZyb21FbnYoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY29uZmlnLmNvbnRleHRNYW5hZ2VyKSB7XG4gICAgICAgICAgICBhcGlfMS5jb250ZXh0LnNldEdsb2JhbENvbnRleHRNYW5hZ2VyKGNvbmZpZy5jb250ZXh0TWFuYWdlcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbmZpZy5wcm9wYWdhdG9yKSB7XG4gICAgICAgICAgICBhcGlfMS5wcm9wYWdhdGlvbi5zZXRHbG9iYWxQcm9wYWdhdG9yKGNvbmZpZy5wcm9wYWdhdG9yKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzaHV0ZG93bigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZlU3BhblByb2Nlc3Nvci5zaHV0ZG93bigpO1xuICAgIH1cbiAgICBfZ2V0UHJvcGFnYXRvcihuYW1lKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IEJhc2ljVHJhY2VyUHJvdmlkZXIuX3JlZ2lzdGVyZWRQcm9wYWdhdG9ycy5nZXQobmFtZSkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYSgpO1xuICAgIH1cbiAgICBfYnVpbGRQcm9wYWdhdG9yRnJvbUVudigpIHtcbiAgICAgICAgLy8gcGVyIHNwZWMsIHByb3BhZ2F0b3JzIGZyb20gZW52IG11c3QgYmUgZGVkdXBsaWNhdGVkXG4gICAgICAgIGNvbnN0IHVuaXF1ZVByb3BhZ2F0b3JOYW1lcyA9IFsuLi5uZXcgU2V0KGNvcmVfMS5nZXRFbnYoKS5PVEVMX1BST1BBR0FUT1JTKV07XG4gICAgICAgIGNvbnN0IHByb3BhZ2F0b3JzID0gdW5pcXVlUHJvcGFnYXRvck5hbWVzLm1hcChuYW1lID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHByb3BhZ2F0b3IgPSB0aGlzLl9nZXRQcm9wYWdhdG9yKG5hbWUpO1xuICAgICAgICAgICAgaWYgKCFwcm9wYWdhdG9yKSB7XG4gICAgICAgICAgICAgICAgYXBpXzEuZGlhZy53YXJuKGBQcm9wYWdhdG9yIFwiJHtuYW1lfVwiIHJlcXVlc3RlZCB0aHJvdWdoIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIHVuYXZhaWxhYmxlLmApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHByb3BhZ2F0b3I7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB2YWxpZFByb3BhZ2F0b3JzID0gcHJvcGFnYXRvcnMucmVkdWNlKChsaXN0LCBpdGVtKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXRlbSkge1xuICAgICAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBsaXN0O1xuICAgICAgICB9LCBbXSk7XG4gICAgICAgIGlmICh2YWxpZFByb3BhZ2F0b3JzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVuaXF1ZVByb3BhZ2F0b3JOYW1lcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWxpZFByb3BhZ2F0b3JzWzBdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBjb3JlXzEuQ29tcG9zaXRlUHJvcGFnYXRvcih7XG4gICAgICAgICAgICAgICAgcHJvcGFnYXRvcnM6IHZhbGlkUHJvcGFnYXRvcnMsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQmFzaWNUcmFjZXJQcm92aWRlciA9IEJhc2ljVHJhY2VyUHJvdmlkZXI7XG5CYXNpY1RyYWNlclByb3ZpZGVyLl9yZWdpc3RlcmVkUHJvcGFnYXRvcnMgPSBuZXcgTWFwKFtcbiAgICBbJ3RyYWNlY29udGV4dCcsICgpID0+IG5ldyBjb3JlXzEuSHR0cFRyYWNlQ29udGV4dCgpXSxcbiAgICBbJ2JhZ2dhZ2UnLCAoKSA9PiBuZXcgY29yZV8xLkh0dHBCYWdnYWdlKCldLFxuXSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CYXNpY1RyYWNlclByb3ZpZGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/BasicTracerProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/MultiSpanProcessor.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/MultiSpanProcessor.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiSpanProcessor = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nclass MultiSpanProcessor {\n    constructor(_spanProcessors) {\n        this._spanProcessors = _spanProcessors;\n    }\n    forceFlush() {\n        const promises = [];\n        for (const spanProcessor of this._spanProcessors) {\n            promises.push(spanProcessor.forceFlush());\n        }\n        return new Promise(resolve => {\n            Promise.all(promises)\n                .then(() => {\n                resolve();\n            })\n                .catch(error => {\n                core_1.globalErrorHandler(error || new Error('MultiSpanProcessor: forceFlush failed'));\n                resolve();\n            });\n        });\n    }\n    onStart(span, context) {\n        for (const spanProcessor of this._spanProcessors) {\n            spanProcessor.onStart(span, context);\n        }\n    }\n    onEnd(span) {\n        for (const spanProcessor of this._spanProcessors) {\n            spanProcessor.onEnd(span);\n        }\n    }\n    shutdown() {\n        const promises = [];\n        for (const spanProcessor of this._spanProcessors) {\n            promises.push(spanProcessor.shutdown());\n        }\n        return new Promise((resolve, reject) => {\n            Promise.all(promises).then(() => {\n                resolve();\n            }, reject);\n        });\n    }\n}\nexports.MultiSpanProcessor = MultiSpanProcessor;\n//# sourceMappingURL=MultiSpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvTXVsdGlTcGFuUHJvY2Vzc29yLmpzPzJmYTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxrRkFBcUI7QUFDNUM7QUFDQSwwQkFBMEIsb0JBQW9CO0FBQzlDLGlDQUFpQyxvQkFBb0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9NdWx0aVNwYW5Qcm9jZXNzb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk11bHRpU3BhblByb2Nlc3NvciA9IHZvaWQgMDtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuLyoqXG4gKiBJbXBsZW1lbnRhdGlvbiBvZiB0aGUge0BsaW5rIFNwYW5Qcm9jZXNzb3J9IHRoYXQgc2ltcGx5IGZvcndhcmRzIGFsbFxuICogcmVjZWl2ZWQgZXZlbnRzIHRvIGEgbGlzdCBvZiB7QGxpbmsgU3BhblByb2Nlc3Nvcn1zLlxuICovXG5jbGFzcyBNdWx0aVNwYW5Qcm9jZXNzb3Ige1xuICAgIGNvbnN0cnVjdG9yKF9zcGFuUHJvY2Vzc29ycykge1xuICAgICAgICB0aGlzLl9zcGFuUHJvY2Vzc29ycyA9IF9zcGFuUHJvY2Vzc29ycztcbiAgICB9XG4gICAgZm9yY2VGbHVzaCgpIHtcbiAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBzcGFuUHJvY2Vzc29yIG9mIHRoaXMuX3NwYW5Qcm9jZXNzb3JzKSB7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHNwYW5Qcm9jZXNzb3IuZm9yY2VGbHVzaCgpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgICBQcm9taXNlLmFsbChwcm9taXNlcylcbiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIGNvcmVfMS5nbG9iYWxFcnJvckhhbmRsZXIoZXJyb3IgfHwgbmV3IEVycm9yKCdNdWx0aVNwYW5Qcm9jZXNzb3I6IGZvcmNlRmx1c2ggZmFpbGVkJykpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25TdGFydChzcGFuLCBjb250ZXh0KSB7XG4gICAgICAgIGZvciAoY29uc3Qgc3BhblByb2Nlc3NvciBvZiB0aGlzLl9zcGFuUHJvY2Vzc29ycykge1xuICAgICAgICAgICAgc3BhblByb2Nlc3Nvci5vblN0YXJ0KHNwYW4sIGNvbnRleHQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uRW5kKHNwYW4pIHtcbiAgICAgICAgZm9yIChjb25zdCBzcGFuUHJvY2Vzc29yIG9mIHRoaXMuX3NwYW5Qcm9jZXNzb3JzKSB7XG4gICAgICAgICAgICBzcGFuUHJvY2Vzc29yLm9uRW5kKHNwYW4pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNodXRkb3duKCkge1xuICAgICAgICBjb25zdCBwcm9taXNlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHNwYW5Qcm9jZXNzb3Igb2YgdGhpcy5fc3BhblByb2Nlc3NvcnMpIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2goc3BhblByb2Nlc3Nvci5zaHV0ZG93bigpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgIH0sIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuTXVsdGlTcGFuUHJvY2Vzc29yID0gTXVsdGlTcGFuUHJvY2Vzc29yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXVsdGlTcGFuUHJvY2Vzc29yLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/MultiSpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/NoopSpanProcessor.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/NoopSpanProcessor.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopSpanProcessor = void 0;\n/** No-op implementation of SpanProcessor */\nclass NoopSpanProcessor {\n    onStart(_span, _context) { }\n    onEnd(_span) { }\n    shutdown() {\n        return Promise.resolve();\n    }\n    forceFlush() {\n        return Promise.resolve();\n    }\n}\nexports.NoopSpanProcessor = NoopSpanProcessor;\n//# sourceMappingURL=NoopSpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvTm9vcFNwYW5Qcm9jZXNzb3IuanM/Y2E3NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3RyYWNpbmcvYnVpbGQvc3JjL05vb3BTcGFuUHJvY2Vzc29yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ob29wU3BhblByb2Nlc3NvciA9IHZvaWQgMDtcbi8qKiBOby1vcCBpbXBsZW1lbnRhdGlvbiBvZiBTcGFuUHJvY2Vzc29yICovXG5jbGFzcyBOb29wU3BhblByb2Nlc3NvciB7XG4gICAgb25TdGFydChfc3BhbiwgX2NvbnRleHQpIHsgfVxuICAgIG9uRW5kKF9zcGFuKSB7IH1cbiAgICBzaHV0ZG93bigpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgICBmb3JjZUZsdXNoKCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfVxufVxuZXhwb3J0cy5Ob29wU3BhblByb2Nlc3NvciA9IE5vb3BTcGFuUHJvY2Vzc29yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Tm9vcFNwYW5Qcm9jZXNzb3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/NoopSpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/Span.js":
/*!***************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/Span.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Span = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/index.js\");\nconst enums_1 = __webpack_require__(/*! ./enums */ \"./node_modules/@opentelemetry/tracing/build/src/enums.js\");\n/**\n * This class represents a span.\n */\nclass Span {\n    /** Constructs a new Span instance. */\n    constructor(parentTracer, context, spanName, spanContext, kind, parentSpanId, links = [], startTime = core_1.hrTime()) {\n        this.attributes = {};\n        this.links = [];\n        this.events = [];\n        this.status = {\n            code: api.SpanStatusCode.UNSET,\n        };\n        this.endTime = [0, 0];\n        this._ended = false;\n        this._duration = [-1, -1];\n        this.name = spanName;\n        this.spanContext = spanContext;\n        this.parentSpanId = parentSpanId;\n        this.kind = kind;\n        this.links = links;\n        this.startTime = core_1.timeInputToHrTime(startTime);\n        this.resource = parentTracer.resource;\n        this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n        this._traceParams = parentTracer.getActiveTraceParams();\n        this._spanProcessor = parentTracer.getActiveSpanProcessor();\n        this._spanProcessor.onStart(this, context);\n    }\n    context() {\n        return this.spanContext;\n    }\n    setAttribute(key, value) {\n        if (value == null || this._isSpanEnded())\n            return this;\n        if (key.length === 0) {\n            api.diag.warn(`Invalid attribute key: ${key}`);\n            return this;\n        }\n        if (!core_1.isAttributeValue(value)) {\n            api.diag.warn(`Invalid attribute value set for key: ${key}`);\n            return this;\n        }\n        if (Object.keys(this.attributes).length >=\n            this._traceParams.numberOfAttributesPerSpan &&\n            !Object.prototype.hasOwnProperty.call(this.attributes, key)) {\n            return this;\n        }\n        this.attributes[key] = value;\n        return this;\n    }\n    setAttributes(attributes) {\n        for (const [k, v] of Object.entries(attributes)) {\n            this.setAttribute(k, v);\n        }\n        return this;\n    }\n    /**\n     *\n     * @param name Span Name\n     * @param [attributesOrStartTime] Span attributes or start time\n     *     if type is {@type TimeInput} and 3rd param is undefined\n     * @param [startTime] Specified start time for the event\n     */\n    addEvent(name, attributesOrStartTime, startTime) {\n        if (this._isSpanEnded())\n            return this;\n        if (this.events.length >= this._traceParams.numberOfEventsPerSpan) {\n            api.diag.warn('Dropping extra events.');\n            this.events.shift();\n        }\n        if (core_1.isTimeInput(attributesOrStartTime)) {\n            if (typeof startTime === 'undefined') {\n                startTime = attributesOrStartTime;\n            }\n            attributesOrStartTime = undefined;\n        }\n        if (typeof startTime === 'undefined') {\n            startTime = core_1.hrTime();\n        }\n        this.events.push({\n            name,\n            attributes: attributesOrStartTime,\n            time: core_1.timeInputToHrTime(startTime),\n        });\n        return this;\n    }\n    setStatus(status) {\n        if (this._isSpanEnded())\n            return this;\n        this.status = status;\n        return this;\n    }\n    updateName(name) {\n        if (this._isSpanEnded())\n            return this;\n        this.name = name;\n        return this;\n    }\n    end(endTime = core_1.hrTime()) {\n        if (this._isSpanEnded()) {\n            api.diag.error('You can only call end() on a span once.');\n            return;\n        }\n        this._ended = true;\n        this.endTime = core_1.timeInputToHrTime(endTime);\n        this._duration = core_1.hrTimeDuration(this.startTime, this.endTime);\n        if (this._duration[0] < 0) {\n            api.diag.warn('Inconsistent start and end time, startTime > endTime', this.startTime, this.endTime);\n        }\n        this._spanProcessor.onEnd(this);\n    }\n    isRecording() {\n        return this._ended === false;\n    }\n    recordException(exception, time = core_1.hrTime()) {\n        const attributes = {};\n        if (typeof exception === 'string') {\n            attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n        }\n        else if (exception) {\n            if (exception.code) {\n                attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE] = exception.code.toString();\n            }\n            else if (exception.name) {\n                attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n            }\n            if (exception.message) {\n                attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n            }\n            if (exception.stack) {\n                attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n            }\n        }\n        // these are minimum requirements from spec\n        if (attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE] ||\n            attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE]) {\n            this.addEvent(enums_1.ExceptionEventName, attributes, time);\n        }\n        else {\n            api.diag.warn(`Failed to record an exception ${exception}`);\n        }\n    }\n    get duration() {\n        return this._duration;\n    }\n    get ended() {\n        return this._ended;\n    }\n    _isSpanEnded() {\n        if (this._ended) {\n            api.diag.warn('Can not execute the operation on ended Span {traceId: %s, spanId: %s}', this.spanContext.traceId, this.spanContext.spanId);\n        }\n        return this._ended;\n    }\n}\nexports.Span = Span;\n//# sourceMappingURL=Span.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/Span.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/SpanProcessor.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/SpanProcessor.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvU3BhblByb2Nlc3Nvci5qcz9mMTBiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvU3BhblByb2Nlc3Nvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwYW5Qcm9jZXNzb3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/SpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/Tracer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/Tracer.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tracer = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst Span_1 = __webpack_require__(/*! ./Span */ \"./node_modules/@opentelemetry/tracing/build/src/Span.js\");\nconst utility_1 = __webpack_require__(/*! ./utility */ \"./node_modules/@opentelemetry/tracing/build/src/utility.js\");\n/**\n * This class represents a basic tracer.\n */\nclass Tracer {\n    /**\n     * Constructs a new Tracer instance.\n     */\n    constructor(instrumentationLibrary, config, _tracerProvider) {\n        this._tracerProvider = _tracerProvider;\n        const localConfig = utility_1.mergeConfig(config);\n        this._sampler = localConfig.sampler;\n        this._traceParams = localConfig.traceParams;\n        this._idGenerator = config.idGenerator || new core_1.RandomIdGenerator();\n        this.resource = _tracerProvider.resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n    }\n    /**\n     * Starts a new Span or returns the default NoopSpan based on the sampling\n     * decision.\n     */\n    startSpan(name, options = {}, context = api.context.active()) {\n        var _a, _b;\n        if (api.isInstrumentationSuppressed(context)) {\n            api.diag.debug('Instrumentation suppressed, returning Noop Span');\n            return api.NOOP_TRACER.startSpan(name, options, context);\n        }\n        const parentContext = getParent(options, context);\n        const spanId = this._idGenerator.generateSpanId();\n        let traceId;\n        let traceState;\n        let parentSpanId;\n        if (!parentContext || !api.trace.isSpanContextValid(parentContext)) {\n            // New root span.\n            traceId = this._idGenerator.generateTraceId();\n        }\n        else {\n            // New child span.\n            traceId = parentContext.traceId;\n            traceState = parentContext.traceState;\n            parentSpanId = parentContext.spanId;\n        }\n        const spanKind = (_a = options.kind) !== null && _a !== void 0 ? _a : api.SpanKind.INTERNAL;\n        const links = (_b = options.links) !== null && _b !== void 0 ? _b : [];\n        const attributes = core_1.sanitizeAttributes(options.attributes);\n        // make sampling decision\n        const samplingResult = this._sampler.shouldSample(context, traceId, name, spanKind, attributes, links);\n        const traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n            ? api.TraceFlags.SAMPLED\n            : api.TraceFlags.NONE;\n        const spanContext = { traceId, spanId, traceFlags, traceState };\n        if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n            api.diag.debug('Recording is off, starting no recording span');\n            return api.NOOP_TRACER.startSpan(name, options, api.setSpanContext(context, spanContext));\n        }\n        const span = new Span_1.Span(this, context, name, spanContext, spanKind, parentSpanId, links, options.startTime);\n        // Set default attributes\n        span.setAttributes(Object.assign(attributes, samplingResult.attributes));\n        return span;\n    }\n    /** Returns the active {@link TraceParams}. */\n    getActiveTraceParams() {\n        return this._traceParams;\n    }\n    getActiveSpanProcessor() {\n        return this._tracerProvider.getActiveSpanProcessor();\n    }\n}\nexports.Tracer = Tracer;\n/**\n * Get the parent to assign to a started span. If options.parent is null,\n * do not assign a parent.\n *\n * @param options span options\n * @param context context to check for parent\n */\nfunction getParent(options, context) {\n    if (options.root)\n        return undefined;\n    return api.getSpanContext(context);\n}\n//# sourceMappingURL=Tracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvVHJhY2VyLmpzPzBhYjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLFlBQVksbUJBQU8sQ0FBQyxnRkFBb0I7QUFDeEMsZUFBZSxtQkFBTyxDQUFDLGtGQUFxQjtBQUM1QyxlQUFlLG1CQUFPLENBQUMsdUVBQVE7QUFDL0Isa0JBQWtCLG1CQUFPLENBQUMsNkVBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0JBQWtCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9UcmFjZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYWNlciA9IHZvaWQgMDtcbmNvbnN0IGFwaSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvY29yZVwiKTtcbmNvbnN0IFNwYW5fMSA9IHJlcXVpcmUoXCIuL1NwYW5cIik7XG5jb25zdCB1dGlsaXR5XzEgPSByZXF1aXJlKFwiLi91dGlsaXR5XCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHJlcHJlc2VudHMgYSBiYXNpYyB0cmFjZXIuXG4gKi9cbmNsYXNzIFRyYWNlciB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhIG5ldyBUcmFjZXIgaW5zdGFuY2UuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoaW5zdHJ1bWVudGF0aW9uTGlicmFyeSwgY29uZmlnLCBfdHJhY2VyUHJvdmlkZXIpIHtcbiAgICAgICAgdGhpcy5fdHJhY2VyUHJvdmlkZXIgPSBfdHJhY2VyUHJvdmlkZXI7XG4gICAgICAgIGNvbnN0IGxvY2FsQ29uZmlnID0gdXRpbGl0eV8xLm1lcmdlQ29uZmlnKGNvbmZpZyk7XG4gICAgICAgIHRoaXMuX3NhbXBsZXIgPSBsb2NhbENvbmZpZy5zYW1wbGVyO1xuICAgICAgICB0aGlzLl90cmFjZVBhcmFtcyA9IGxvY2FsQ29uZmlnLnRyYWNlUGFyYW1zO1xuICAgICAgICB0aGlzLl9pZEdlbmVyYXRvciA9IGNvbmZpZy5pZEdlbmVyYXRvciB8fCBuZXcgY29yZV8xLlJhbmRvbUlkR2VuZXJhdG9yKCk7XG4gICAgICAgIHRoaXMucmVzb3VyY2UgPSBfdHJhY2VyUHJvdmlkZXIucmVzb3VyY2U7XG4gICAgICAgIHRoaXMuaW5zdHJ1bWVudGF0aW9uTGlicmFyeSA9IGluc3RydW1lbnRhdGlvbkxpYnJhcnk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXJ0cyBhIG5ldyBTcGFuIG9yIHJldHVybnMgdGhlIGRlZmF1bHQgTm9vcFNwYW4gYmFzZWQgb24gdGhlIHNhbXBsaW5nXG4gICAgICogZGVjaXNpb24uXG4gICAgICovXG4gICAgc3RhcnRTcGFuKG5hbWUsIG9wdGlvbnMgPSB7fSwgY29udGV4dCA9IGFwaS5jb250ZXh0LmFjdGl2ZSgpKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIGlmIChhcGkuaXNJbnN0cnVtZW50YXRpb25TdXBwcmVzc2VkKGNvbnRleHQpKSB7XG4gICAgICAgICAgICBhcGkuZGlhZy5kZWJ1ZygnSW5zdHJ1bWVudGF0aW9uIHN1cHByZXNzZWQsIHJldHVybmluZyBOb29wIFNwYW4nKTtcbiAgICAgICAgICAgIHJldHVybiBhcGkuTk9PUF9UUkFDRVIuc3RhcnRTcGFuKG5hbWUsIG9wdGlvbnMsIGNvbnRleHQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhcmVudENvbnRleHQgPSBnZXRQYXJlbnQob3B0aW9ucywgY29udGV4dCk7XG4gICAgICAgIGNvbnN0IHNwYW5JZCA9IHRoaXMuX2lkR2VuZXJhdG9yLmdlbmVyYXRlU3BhbklkKCk7XG4gICAgICAgIGxldCB0cmFjZUlkO1xuICAgICAgICBsZXQgdHJhY2VTdGF0ZTtcbiAgICAgICAgbGV0IHBhcmVudFNwYW5JZDtcbiAgICAgICAgaWYgKCFwYXJlbnRDb250ZXh0IHx8ICFhcGkudHJhY2UuaXNTcGFuQ29udGV4dFZhbGlkKHBhcmVudENvbnRleHQpKSB7XG4gICAgICAgICAgICAvLyBOZXcgcm9vdCBzcGFuLlxuICAgICAgICAgICAgdHJhY2VJZCA9IHRoaXMuX2lkR2VuZXJhdG9yLmdlbmVyYXRlVHJhY2VJZCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gTmV3IGNoaWxkIHNwYW4uXG4gICAgICAgICAgICB0cmFjZUlkID0gcGFyZW50Q29udGV4dC50cmFjZUlkO1xuICAgICAgICAgICAgdHJhY2VTdGF0ZSA9IHBhcmVudENvbnRleHQudHJhY2VTdGF0ZTtcbiAgICAgICAgICAgIHBhcmVudFNwYW5JZCA9IHBhcmVudENvbnRleHQuc3BhbklkO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNwYW5LaW5kID0gKF9hID0gb3B0aW9ucy5raW5kKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBhcGkuU3BhbktpbmQuSU5URVJOQUw7XG4gICAgICAgIGNvbnN0IGxpbmtzID0gKF9iID0gb3B0aW9ucy5saW5rcykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogW107XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSBjb3JlXzEuc2FuaXRpemVBdHRyaWJ1dGVzKG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gICAgICAgIC8vIG1ha2Ugc2FtcGxpbmcgZGVjaXNpb25cbiAgICAgICAgY29uc3Qgc2FtcGxpbmdSZXN1bHQgPSB0aGlzLl9zYW1wbGVyLnNob3VsZFNhbXBsZShjb250ZXh0LCB0cmFjZUlkLCBuYW1lLCBzcGFuS2luZCwgYXR0cmlidXRlcywgbGlua3MpO1xuICAgICAgICBjb25zdCB0cmFjZUZsYWdzID0gc2FtcGxpbmdSZXN1bHQuZGVjaXNpb24gPT09IGFwaS5TYW1wbGluZ0RlY2lzaW9uLlJFQ09SRF9BTkRfU0FNUExFRFxuICAgICAgICAgICAgPyBhcGkuVHJhY2VGbGFncy5TQU1QTEVEXG4gICAgICAgICAgICA6IGFwaS5UcmFjZUZsYWdzLk5PTkU7XG4gICAgICAgIGNvbnN0IHNwYW5Db250ZXh0ID0geyB0cmFjZUlkLCBzcGFuSWQsIHRyYWNlRmxhZ3MsIHRyYWNlU3RhdGUgfTtcbiAgICAgICAgaWYgKHNhbXBsaW5nUmVzdWx0LmRlY2lzaW9uID09PSBhcGkuU2FtcGxpbmdEZWNpc2lvbi5OT1RfUkVDT1JEKSB7XG4gICAgICAgICAgICBhcGkuZGlhZy5kZWJ1ZygnUmVjb3JkaW5nIGlzIG9mZiwgc3RhcnRpbmcgbm8gcmVjb3JkaW5nIHNwYW4nKTtcbiAgICAgICAgICAgIHJldHVybiBhcGkuTk9PUF9UUkFDRVIuc3RhcnRTcGFuKG5hbWUsIG9wdGlvbnMsIGFwaS5zZXRTcGFuQ29udGV4dChjb250ZXh0LCBzcGFuQ29udGV4dCkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNwYW4gPSBuZXcgU3Bhbl8xLlNwYW4odGhpcywgY29udGV4dCwgbmFtZSwgc3BhbkNvbnRleHQsIHNwYW5LaW5kLCBwYXJlbnRTcGFuSWQsIGxpbmtzLCBvcHRpb25zLnN0YXJ0VGltZSk7XG4gICAgICAgIC8vIFNldCBkZWZhdWx0IGF0dHJpYnV0ZXNcbiAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGVzKE9iamVjdC5hc3NpZ24oYXR0cmlidXRlcywgc2FtcGxpbmdSZXN1bHQuYXR0cmlidXRlcykpO1xuICAgICAgICByZXR1cm4gc3BhbjtcbiAgICB9XG4gICAgLyoqIFJldHVybnMgdGhlIGFjdGl2ZSB7QGxpbmsgVHJhY2VQYXJhbXN9LiAqL1xuICAgIGdldEFjdGl2ZVRyYWNlUGFyYW1zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdHJhY2VQYXJhbXM7XG4gICAgfVxuICAgIGdldEFjdGl2ZVNwYW5Qcm9jZXNzb3IoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl90cmFjZXJQcm92aWRlci5nZXRBY3RpdmVTcGFuUHJvY2Vzc29yKCk7XG4gICAgfVxufVxuZXhwb3J0cy5UcmFjZXIgPSBUcmFjZXI7XG4vKipcbiAqIEdldCB0aGUgcGFyZW50IHRvIGFzc2lnbiB0byBhIHN0YXJ0ZWQgc3Bhbi4gSWYgb3B0aW9ucy5wYXJlbnQgaXMgbnVsbCxcbiAqIGRvIG5vdCBhc3NpZ24gYSBwYXJlbnQuXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgc3BhbiBvcHRpb25zXG4gKiBAcGFyYW0gY29udGV4dCBjb250ZXh0IHRvIGNoZWNrIGZvciBwYXJlbnRcbiAqL1xuZnVuY3Rpb24gZ2V0UGFyZW50KG9wdGlvbnMsIGNvbnRleHQpIHtcbiAgICBpZiAob3B0aW9ucy5yb290KVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIHJldHVybiBhcGkuZ2V0U3BhbkNvbnRleHQoY29udGV4dCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcmFjZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/Tracer.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/config.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/config.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildSamplerFromEnv = exports.DEFAULT_CONFIG = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst env = core_1.getEnv();\n/**\n * Default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `traceParams`), the user-provided value will be\n * used to extend the default value.\n */\nexports.DEFAULT_CONFIG = {\n    sampler: buildSamplerFromEnv(env),\n    traceParams: {\n        numberOfAttributesPerSpan: core_1.getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n        numberOfLinksPerSpan: core_1.getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n        numberOfEventsPerSpan: core_1.getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n    },\n};\nconst FALLBACK_OTEL_TRACES_SAMPLER = core_1.TracesSamplerValues.AlwaysOn;\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param env optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nfunction buildSamplerFromEnv(env = core_1.getEnv()) {\n    switch (env.OTEL_TRACES_SAMPLER) {\n        case core_1.TracesSamplerValues.AlwaysOn:\n            return new core_1.AlwaysOnSampler();\n        case core_1.TracesSamplerValues.AlwaysOff:\n            return new core_1.AlwaysOffSampler();\n        case core_1.TracesSamplerValues.ParentBasedAlwaysOn:\n            return new core_1.ParentBasedSampler({\n                root: new core_1.AlwaysOnSampler(),\n            });\n        case core_1.TracesSamplerValues.ParentBasedAlwaysOff:\n            return new core_1.ParentBasedSampler({\n                root: new core_1.AlwaysOffSampler(),\n            });\n        case core_1.TracesSamplerValues.TraceIdRatio:\n            return new core_1.TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(env));\n        case core_1.TracesSamplerValues.ParentBasedTraceIdRatio:\n            return new core_1.ParentBasedSampler({\n                root: new core_1.TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(env)),\n            });\n        default:\n            api_1.diag.error(`OTEL_TRACES_SAMPLER value \"${env.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`);\n            return new core_1.AlwaysOnSampler();\n    }\n}\nexports.buildSamplerFromEnv = buildSamplerFromEnv;\nconst DEFAULT_RATIO = 1;\nfunction getSamplerProbabilityFromEnv(env) {\n    if (env.OTEL_TRACES_SAMPLER_ARG === undefined ||\n        env.OTEL_TRACES_SAMPLER_ARG === '') {\n        api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`);\n        return DEFAULT_RATIO;\n    }\n    const probability = Number(env.OTEL_TRACES_SAMPLER_ARG);\n    if (isNaN(probability)) {\n        api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG=${env.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`);\n        return DEFAULT_RATIO;\n    }\n    if (probability < 0 || probability > 1) {\n        api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG=${env.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`);\n        return DEFAULT_RATIO;\n    }\n    return probability;\n}\n//# sourceMappingURL=config.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvY29uZmlnLmpzP2I2ZmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxnRkFBb0I7QUFDMUMsZUFBZSxtQkFBTyxDQUFDLGtGQUFxQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSwyREFBMkQsd0JBQXdCLDBCQUEwQiw2QkFBNkI7QUFDMUk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxjQUFjO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELDRCQUE0QiwrQ0FBK0MsY0FBYztBQUM3STtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsNEJBQTRCLDZEQUE2RCxjQUFjO0FBQzNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvY29uZmlnLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5idWlsZFNhbXBsZXJGcm9tRW52ID0gZXhwb3J0cy5ERUZBVUxUX0NPTkZJRyA9IHZvaWQgMDtcbmNvbnN0IGFwaV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2FwaVwiKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuY29uc3QgZW52ID0gY29yZV8xLmdldEVudigpO1xuLyoqXG4gKiBEZWZhdWx0IGNvbmZpZ3VyYXRpb24uIEZvciBmaWVsZHMgd2l0aCBwcmltaXRpdmUgdmFsdWVzLCBhbnkgdXNlci1wcm92aWRlZFxuICogdmFsdWUgd2lsbCBvdmVycmlkZSB0aGUgY29ycmVzcG9uZGluZyBkZWZhdWx0IHZhbHVlLiBGb3IgZmllbGRzIHdpdGhcbiAqIG5vbi1wcmltaXRpdmUgdmFsdWVzIChsaWtlIGB0cmFjZVBhcmFtc2ApLCB0aGUgdXNlci1wcm92aWRlZCB2YWx1ZSB3aWxsIGJlXG4gKiB1c2VkIHRvIGV4dGVuZCB0aGUgZGVmYXVsdCB2YWx1ZS5cbiAqL1xuZXhwb3J0cy5ERUZBVUxUX0NPTkZJRyA9IHtcbiAgICBzYW1wbGVyOiBidWlsZFNhbXBsZXJGcm9tRW52KGVudiksXG4gICAgdHJhY2VQYXJhbXM6IHtcbiAgICAgICAgbnVtYmVyT2ZBdHRyaWJ1dGVzUGVyU3BhbjogY29yZV8xLmdldEVudigpLk9URUxfU1BBTl9BVFRSSUJVVEVfQ09VTlRfTElNSVQsXG4gICAgICAgIG51bWJlck9mTGlua3NQZXJTcGFuOiBjb3JlXzEuZ2V0RW52KCkuT1RFTF9TUEFOX0xJTktfQ09VTlRfTElNSVQsXG4gICAgICAgIG51bWJlck9mRXZlbnRzUGVyU3BhbjogY29yZV8xLmdldEVudigpLk9URUxfU1BBTl9FVkVOVF9DT1VOVF9MSU1JVCxcbiAgICB9LFxufTtcbmNvbnN0IEZBTExCQUNLX09URUxfVFJBQ0VTX1NBTVBMRVIgPSBjb3JlXzEuVHJhY2VzU2FtcGxlclZhbHVlcy5BbHdheXNPbjtcbi8qKlxuICogQmFzZWQgb24gZW52aXJvbm1lbnQsIGJ1aWxkcyBhIHNhbXBsZXIsIGNvbXBsaWVzIHdpdGggc3BlY2lmaWNhdGlvbi5cbiAqIEBwYXJhbSBlbnYgb3B0aW9uYWwsIGJ5IGRlZmF1bHQgdXNlcyBnZXRFbnYoKSwgYnV0IGFsbG93cyBwYXNzaW5nIGEgdmFsdWUgdG8gcmV1c2UgcGFyc2VkIGVudmlyb25tZW50XG4gKi9cbmZ1bmN0aW9uIGJ1aWxkU2FtcGxlckZyb21FbnYoZW52ID0gY29yZV8xLmdldEVudigpKSB7XG4gICAgc3dpdGNoIChlbnYuT1RFTF9UUkFDRVNfU0FNUExFUikge1xuICAgICAgICBjYXNlIGNvcmVfMS5UcmFjZXNTYW1wbGVyVmFsdWVzLkFsd2F5c09uOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBjb3JlXzEuQWx3YXlzT25TYW1wbGVyKCk7XG4gICAgICAgIGNhc2UgY29yZV8xLlRyYWNlc1NhbXBsZXJWYWx1ZXMuQWx3YXlzT2ZmOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBjb3JlXzEuQWx3YXlzT2ZmU2FtcGxlcigpO1xuICAgICAgICBjYXNlIGNvcmVfMS5UcmFjZXNTYW1wbGVyVmFsdWVzLlBhcmVudEJhc2VkQWx3YXlzT246XG4gICAgICAgICAgICByZXR1cm4gbmV3IGNvcmVfMS5QYXJlbnRCYXNlZFNhbXBsZXIoe1xuICAgICAgICAgICAgICAgIHJvb3Q6IG5ldyBjb3JlXzEuQWx3YXlzT25TYW1wbGVyKCksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBjb3JlXzEuVHJhY2VzU2FtcGxlclZhbHVlcy5QYXJlbnRCYXNlZEFsd2F5c09mZjpcbiAgICAgICAgICAgIHJldHVybiBuZXcgY29yZV8xLlBhcmVudEJhc2VkU2FtcGxlcih7XG4gICAgICAgICAgICAgICAgcm9vdDogbmV3IGNvcmVfMS5BbHdheXNPZmZTYW1wbGVyKCksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBjb3JlXzEuVHJhY2VzU2FtcGxlclZhbHVlcy5UcmFjZUlkUmF0aW86XG4gICAgICAgICAgICByZXR1cm4gbmV3IGNvcmVfMS5UcmFjZUlkUmF0aW9CYXNlZFNhbXBsZXIoZ2V0U2FtcGxlclByb2JhYmlsaXR5RnJvbUVudihlbnYpKTtcbiAgICAgICAgY2FzZSBjb3JlXzEuVHJhY2VzU2FtcGxlclZhbHVlcy5QYXJlbnRCYXNlZFRyYWNlSWRSYXRpbzpcbiAgICAgICAgICAgIHJldHVybiBuZXcgY29yZV8xLlBhcmVudEJhc2VkU2FtcGxlcih7XG4gICAgICAgICAgICAgICAgcm9vdDogbmV3IGNvcmVfMS5UcmFjZUlkUmF0aW9CYXNlZFNhbXBsZXIoZ2V0U2FtcGxlclByb2JhYmlsaXR5RnJvbUVudihlbnYpKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYXBpXzEuZGlhZy5lcnJvcihgT1RFTF9UUkFDRVNfU0FNUExFUiB2YWx1ZSBcIiR7ZW52Lk9URUxfVFJBQ0VTX1NBTVBMRVJ9IGludmFsaWQsIGRlZmF1bHRpbmcgdG8gJHtGQUxMQkFDS19PVEVMX1RSQUNFU19TQU1QTEVSfVwiLmApO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBjb3JlXzEuQWx3YXlzT25TYW1wbGVyKCk7XG4gICAgfVxufVxuZXhwb3J0cy5idWlsZFNhbXBsZXJGcm9tRW52ID0gYnVpbGRTYW1wbGVyRnJvbUVudjtcbmNvbnN0IERFRkFVTFRfUkFUSU8gPSAxO1xuZnVuY3Rpb24gZ2V0U2FtcGxlclByb2JhYmlsaXR5RnJvbUVudihlbnYpIHtcbiAgICBpZiAoZW52Lk9URUxfVFJBQ0VTX1NBTVBMRVJfQVJHID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgZW52Lk9URUxfVFJBQ0VTX1NBTVBMRVJfQVJHID09PSAnJykge1xuICAgICAgICBhcGlfMS5kaWFnLmVycm9yKGBPVEVMX1RSQUNFU19TQU1QTEVSX0FSRyBpcyBibGFuaywgZGVmYXVsdGluZyB0byAke0RFRkFVTFRfUkFUSU99LmApO1xuICAgICAgICByZXR1cm4gREVGQVVMVF9SQVRJTztcbiAgICB9XG4gICAgY29uc3QgcHJvYmFiaWxpdHkgPSBOdW1iZXIoZW52Lk9URUxfVFJBQ0VTX1NBTVBMRVJfQVJHKTtcbiAgICBpZiAoaXNOYU4ocHJvYmFiaWxpdHkpKSB7XG4gICAgICAgIGFwaV8xLmRpYWcuZXJyb3IoYE9URUxfVFJBQ0VTX1NBTVBMRVJfQVJHPSR7ZW52Lk9URUxfVFJBQ0VTX1NBTVBMRVJfQVJHfSB3YXMgZ2l2ZW4sIGJ1dCBpdCBpcyBpbnZhbGlkLCBkZWZhdWx0aW5nIHRvICR7REVGQVVMVF9SQVRJT30uYCk7XG4gICAgICAgIHJldHVybiBERUZBVUxUX1JBVElPO1xuICAgIH1cbiAgICBpZiAocHJvYmFiaWxpdHkgPCAwIHx8IHByb2JhYmlsaXR5ID4gMSkge1xuICAgICAgICBhcGlfMS5kaWFnLmVycm9yKGBPVEVMX1RSQUNFU19TQU1QTEVSX0FSRz0ke2Vudi5PVEVMX1RSQUNFU19TQU1QTEVSX0FSR30gd2FzIGdpdmVuLCBidXQgaXQgaXMgb3V0IG9mIHJhbmdlIChbMC4uMV0pLCBkZWZhdWx0aW5nIHRvICR7REVGQVVMVF9SQVRJT30uYCk7XG4gICAgICAgIHJldHVybiBERUZBVUxUX1JBVElPO1xuICAgIH1cbiAgICByZXR1cm4gcHJvYmFiaWxpdHk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWcuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/config.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/enums.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/enums.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExceptionEventName = void 0;\n// Event name definitions\nexports.ExceptionEventName = 'exception';\n//# sourceMappingURL=enums.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZW51bXMuanM/YTFiMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3RyYWNpbmcvYnVpbGQvc3JjL2VudW1zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FeGNlcHRpb25FdmVudE5hbWUgPSB2b2lkIDA7XG4vLyBFdmVudCBuYW1lIGRlZmluaXRpb25zXG5leHBvcnRzLkV4Y2VwdGlvbkV2ZW50TmFtZSA9ICdleGNlcHRpb24nO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW51bXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/enums.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/BatchSpanProcessor.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/BatchSpanProcessor.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchSpanProcessor = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nclass BatchSpanProcessor {\n    constructor(_exporter, config) {\n        this._exporter = _exporter;\n        this._finishedSpans = [];\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        const env = core_1.getEnv();\n        this._maxExportBatchSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxExportBatchSize) === 'number'\n                ? config.maxExportBatchSize\n                : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n        this._maxQueueSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxQueueSize) === 'number'\n                ? config === null || config === void 0 ? void 0 : config.maxQueueSize\n                : env.OTEL_BSP_MAX_QUEUE_SIZE;\n        this._scheduledDelayMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.scheduledDelayMillis) === 'number'\n                ? config === null || config === void 0 ? void 0 : config.scheduledDelayMillis\n                : env.OTEL_BSP_SCHEDULE_DELAY;\n        this._exportTimeoutMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.exportTimeoutMillis) === 'number'\n                ? config === null || config === void 0 ? void 0 : config.exportTimeoutMillis\n                : env.OTEL_BSP_EXPORT_TIMEOUT;\n    }\n    forceFlush() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        return this._flushAll();\n    }\n    // does nothing.\n    onStart(_span) { }\n    onEnd(span) {\n        if (this._isShutdown) {\n            return;\n        }\n        this._addToBuffer(span);\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this._flushAll();\n            })\n                .then(() => {\n                return this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n    /** Add a span in the buffer. */\n    _addToBuffer(span) {\n        if (this._finishedSpans.length >= this._maxQueueSize) {\n            // limit reached, drop span\n            return;\n        }\n        this._finishedSpans.push(span);\n        this._maybeStartTimer();\n    }\n    /**\n     * Send all spans to the exporter respecting the batch size limit\n     * This function is used only on forceFlush or shutdown,\n     * for all other cases _flush should be used\n     * */\n    _flushAll() {\n        return new Promise((resolve, reject) => {\n            const promises = [];\n            // calculate number of batches\n            const count = Math.ceil(this._finishedSpans.length / this._maxExportBatchSize);\n            for (let i = 0, j = count; i < j; i++) {\n                promises.push(this._flushOneBatch());\n            }\n            Promise.all(promises)\n                .then(() => {\n                resolve();\n            })\n                .catch(reject);\n        });\n    }\n    _flushOneBatch() {\n        this._clearTimer();\n        if (this._finishedSpans.length === 0) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            const timer = setTimeout(() => {\n                // don't wait anymore for export, this way the next batch can start\n                reject(new Error('Timeout'));\n            }, this._exportTimeoutMillis);\n            // prevent downstream exporter calls from generating spans\n            api_1.context.with(api_1.suppressInstrumentation(api_1.context.active()), () => {\n                // Reset the finished spans buffer here because the next invocations of the _flush method\n                // could pass the same finished spans to the exporter if the buffer is cleared\n                // outside of the execution of this callback.\n                this._exporter.export(this._finishedSpans.splice(0, this._maxExportBatchSize), result => {\n                    var _a;\n                    clearTimeout(timer);\n                    if (result.code === core_1.ExportResultCode.SUCCESS) {\n                        resolve();\n                    }\n                    else {\n                        reject((_a = result.error) !== null && _a !== void 0 ? _a : new Error('BatchSpanProcessor: span export failed'));\n                    }\n                });\n            });\n        });\n    }\n    _maybeStartTimer() {\n        if (this._timer !== undefined)\n            return;\n        this._timer = setTimeout(() => {\n            this._flushOneBatch()\n                .then(() => {\n                if (this._finishedSpans.length > 0) {\n                    this._clearTimer();\n                    this._maybeStartTimer();\n                }\n            })\n                .catch(e => {\n                core_1.globalErrorHandler(e);\n            });\n        }, this._scheduledDelayMillis);\n        core_1.unrefTimer(this._timer);\n    }\n    _clearTimer() {\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n    }\n}\nexports.BatchSpanProcessor = BatchSpanProcessor;\n//# sourceMappingURL=BatchSpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/BatchSpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/ConsoleSpanExporter.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/ConsoleSpanExporter.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleSpanExporter = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n */\n/* eslint-disable no-console */\nclass ConsoleSpanExporter {\n    /**\n     * Export spans.\n     * @param spans\n     * @param resultCallback\n     */\n    export(spans, resultCallback) {\n        return this._sendSpans(spans, resultCallback);\n    }\n    /**\n     * Shutdown the exporter.\n     */\n    shutdown() {\n        this._sendSpans([]);\n        return Promise.resolve();\n    }\n    /**\n     * converts span info into more readable format\n     * @param span\n     */\n    _exportInfo(span) {\n        return {\n            traceId: span.spanContext.traceId,\n            parentId: span.parentSpanId,\n            name: span.name,\n            id: span.spanContext.spanId,\n            kind: span.kind,\n            timestamp: core_1.hrTimeToMicroseconds(span.startTime),\n            duration: core_1.hrTimeToMicroseconds(span.duration),\n            attributes: span.attributes,\n            status: span.status,\n            events: span.events,\n        };\n    }\n    /**\n     * Showing spans in console\n     * @param spans\n     * @param done\n     */\n    _sendSpans(spans, done) {\n        for (const span of spans) {\n            console.log(this._exportInfo(span));\n        }\n        if (done) {\n            return done({ code: core_1.ExportResultCode.SUCCESS });\n        }\n    }\n}\nexports.ConsoleSpanExporter = ConsoleSpanExporter;\n//# sourceMappingURL=ConsoleSpanExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L0NvbnNvbGVTcGFuRXhwb3J0ZXIuanM/OGU0NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLGtGQUFxQjtBQUM1QztBQUNBLDhCQUE4QixtQkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix3Q0FBd0M7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9leHBvcnQvQ29uc29sZVNwYW5FeHBvcnRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29uc29sZVNwYW5FeHBvcnRlciA9IHZvaWQgMDtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9jb3JlXCIpO1xuLyoqXG4gKiBUaGlzIGlzIGltcGxlbWVudGF0aW9uIG9mIHtAbGluayBTcGFuRXhwb3J0ZXJ9IHRoYXQgcHJpbnRzIHNwYW5zIHRvIHRoZVxuICogY29uc29sZS4gVGhpcyBjbGFzcyBjYW4gYmUgdXNlZCBmb3IgZGlhZ25vc3RpYyBwdXJwb3Nlcy5cbiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuY2xhc3MgQ29uc29sZVNwYW5FeHBvcnRlciB7XG4gICAgLyoqXG4gICAgICogRXhwb3J0IHNwYW5zLlxuICAgICAqIEBwYXJhbSBzcGFuc1xuICAgICAqIEBwYXJhbSByZXN1bHRDYWxsYmFja1xuICAgICAqL1xuICAgIGV4cG9ydChzcGFucywgcmVzdWx0Q2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NlbmRTcGFucyhzcGFucywgcmVzdWx0Q2FsbGJhY2spO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaHV0ZG93biB0aGUgZXhwb3J0ZXIuXG4gICAgICovXG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIHRoaXMuX3NlbmRTcGFucyhbXSk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogY29udmVydHMgc3BhbiBpbmZvIGludG8gbW9yZSByZWFkYWJsZSBmb3JtYXRcbiAgICAgKiBAcGFyYW0gc3BhblxuICAgICAqL1xuICAgIF9leHBvcnRJbmZvKHNwYW4pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRyYWNlSWQ6IHNwYW4uc3BhbkNvbnRleHQudHJhY2VJZCxcbiAgICAgICAgICAgIHBhcmVudElkOiBzcGFuLnBhcmVudFNwYW5JZCxcbiAgICAgICAgICAgIG5hbWU6IHNwYW4ubmFtZSxcbiAgICAgICAgICAgIGlkOiBzcGFuLnNwYW5Db250ZXh0LnNwYW5JZCxcbiAgICAgICAgICAgIGtpbmQ6IHNwYW4ua2luZCxcbiAgICAgICAgICAgIHRpbWVzdGFtcDogY29yZV8xLmhyVGltZVRvTWljcm9zZWNvbmRzKHNwYW4uc3RhcnRUaW1lKSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiBjb3JlXzEuaHJUaW1lVG9NaWNyb3NlY29uZHMoc3Bhbi5kdXJhdGlvbiksXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBzcGFuLmF0dHJpYnV0ZXMsXG4gICAgICAgICAgICBzdGF0dXM6IHNwYW4uc3RhdHVzLFxuICAgICAgICAgICAgZXZlbnRzOiBzcGFuLmV2ZW50cyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2hvd2luZyBzcGFucyBpbiBjb25zb2xlXG4gICAgICogQHBhcmFtIHNwYW5zXG4gICAgICogQHBhcmFtIGRvbmVcbiAgICAgKi9cbiAgICBfc2VuZFNwYW5zKHNwYW5zLCBkb25lKSB7XG4gICAgICAgIGZvciAoY29uc3Qgc3BhbiBvZiBzcGFucykge1xuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5fZXhwb3J0SW5mbyhzcGFuKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgICAgIHJldHVybiBkb25lKHsgY29kZTogY29yZV8xLkV4cG9ydFJlc3VsdENvZGUuU1VDQ0VTUyB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQ29uc29sZVNwYW5FeHBvcnRlciA9IENvbnNvbGVTcGFuRXhwb3J0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25zb2xlU3BhbkV4cG9ydGVyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/ConsoleSpanExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/InMemorySpanExporter.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/InMemorySpanExporter.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemorySpanExporter = void 0;\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nclass InMemorySpanExporter {\n    constructor() {\n        this._finishedSpans = [];\n        /**\n         * Indicates if the exporter has been \"shutdown.\"\n         * When false, exported spans will not be stored in-memory.\n         */\n        this._stopped = false;\n    }\n    export(spans, resultCallback) {\n        if (this._stopped)\n            return resultCallback({\n                code: core_1.ExportResultCode.FAILED,\n                error: new Error('Exporter has been stopped'),\n            });\n        this._finishedSpans.push(...spans);\n        setTimeout(() => resultCallback({ code: core_1.ExportResultCode.SUCCESS }), 0);\n    }\n    shutdown() {\n        this._stopped = true;\n        this._finishedSpans = [];\n        return Promise.resolve();\n    }\n    reset() {\n        this._finishedSpans = [];\n    }\n    getFinishedSpans() {\n        return this._finishedSpans;\n    }\n}\nexports.InMemorySpanExporter = InMemorySpanExporter;\n//# sourceMappingURL=InMemorySpanExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L0luTWVtb3J5U3BhbkV4cG9ydGVyLmpzP2ZlNTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxrRkFBcUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx5Q0FBeUMsd0NBQXdDO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9leHBvcnQvSW5NZW1vcnlTcGFuRXhwb3J0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkluTWVtb3J5U3BhbkV4cG9ydGVyID0gdm9pZCAwO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgY2FuIGJlIHVzZWQgZm9yIHRlc3RpbmcgcHVycG9zZXMuIEl0IHN0b3JlcyB0aGUgZXhwb3J0ZWQgc3BhbnNcbiAqIGluIGEgbGlzdCBpbiBtZW1vcnkgdGhhdCBjYW4gYmUgcmV0cmlldmVkIHVzaW5nIHRoZSBgZ2V0RmluaXNoZWRTcGFucygpYFxuICogbWV0aG9kLlxuICovXG5jbGFzcyBJbk1lbW9yeVNwYW5FeHBvcnRlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX2ZpbmlzaGVkU3BhbnMgPSBbXTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEluZGljYXRlcyBpZiB0aGUgZXhwb3J0ZXIgaGFzIGJlZW4gXCJzaHV0ZG93bi5cIlxuICAgICAgICAgKiBXaGVuIGZhbHNlLCBleHBvcnRlZCBzcGFucyB3aWxsIG5vdCBiZSBzdG9yZWQgaW4tbWVtb3J5LlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5fc3RvcHBlZCA9IGZhbHNlO1xuICAgIH1cbiAgICBleHBvcnQoc3BhbnMsIHJlc3VsdENhbGxiYWNrKSB7XG4gICAgICAgIGlmICh0aGlzLl9zdG9wcGVkKVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdENhbGxiYWNrKHtcbiAgICAgICAgICAgICAgICBjb2RlOiBjb3JlXzEuRXhwb3J0UmVzdWx0Q29kZS5GQUlMRUQsXG4gICAgICAgICAgICAgICAgZXJyb3I6IG5ldyBFcnJvcignRXhwb3J0ZXIgaGFzIGJlZW4gc3RvcHBlZCcpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX2ZpbmlzaGVkU3BhbnMucHVzaCguLi5zcGFucyk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVzdWx0Q2FsbGJhY2soeyBjb2RlOiBjb3JlXzEuRXhwb3J0UmVzdWx0Q29kZS5TVUNDRVNTIH0pLCAwKTtcbiAgICB9XG4gICAgc2h1dGRvd24oKSB7XG4gICAgICAgIHRoaXMuX3N0b3BwZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLl9maW5pc2hlZFNwYW5zID0gW107XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuX2ZpbmlzaGVkU3BhbnMgPSBbXTtcbiAgICB9XG4gICAgZ2V0RmluaXNoZWRTcGFucygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZpbmlzaGVkU3BhbnM7XG4gICAgfVxufVxuZXhwb3J0cy5Jbk1lbW9yeVNwYW5FeHBvcnRlciA9IEluTWVtb3J5U3BhbkV4cG9ydGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5NZW1vcnlTcGFuRXhwb3J0ZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/InMemorySpanExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/ReadableSpan.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/ReadableSpan.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ReadableSpan.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L1JlYWRhYmxlU3Bhbi5qcz8xMzdlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L1JlYWRhYmxlU3Bhbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlYWRhYmxlU3Bhbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/ReadableSpan.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/SimpleSpanProcessor.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/SimpleSpanProcessor.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleSpanProcessor = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nclass SimpleSpanProcessor {\n    constructor(_exporter) {\n        this._exporter = _exporter;\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n    }\n    forceFlush() {\n        // do nothing as all spans are being exported without waiting\n        return Promise.resolve();\n    }\n    // does nothing.\n    onStart(_span) { }\n    onEnd(span) {\n        if (this._isShutdown) {\n            return;\n        }\n        // prevent downstream exporter calls from generating spans\n        api_1.context.with(api_1.suppressInstrumentation(api_1.context.active()), () => {\n            this._exporter.export([span], result => {\n                var _a;\n                if (result.code !== core_1.ExportResultCode.SUCCESS) {\n                    core_1.globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error(`SimpleSpanProcessor: span export failed (status ${result})`));\n                }\n            });\n        });\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n}\nexports.SimpleSpanProcessor = SimpleSpanProcessor;\n//# sourceMappingURL=SimpleSpanProcessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L1NpbXBsZVNwYW5Qcm9jZXNzb3IuanM/MmM2MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLGdGQUFvQjtBQUMxQyxlQUFlLG1CQUFPLENBQUMsa0ZBQXFCO0FBQzVDO0FBQ0EsNkJBQTZCLG9CQUFvQixvQkFBb0I7QUFDckUsT0FBTyxtQkFBbUI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnS0FBZ0ssT0FBTztBQUN2SztBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3RyYWNpbmcvYnVpbGQvc3JjL2V4cG9ydC9TaW1wbGVTcGFuUHJvY2Vzc29yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TaW1wbGVTcGFuUHJvY2Vzc29yID0gdm9pZCAwO1xuY29uc3QgYXBpXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L2NvcmVcIik7XG4vKipcbiAqIEFuIGltcGxlbWVudGF0aW9uIG9mIHRoZSB7QGxpbmsgU3BhblByb2Nlc3Nvcn0gdGhhdCBjb252ZXJ0cyB0aGUge0BsaW5rIFNwYW59XG4gKiB0byB7QGxpbmsgUmVhZGFibGVTcGFufSBhbmQgcGFzc2VzIGl0IHRvIHRoZSBjb25maWd1cmVkIGV4cG9ydGVyLlxuICpcbiAqIE9ubHkgc3BhbnMgdGhhdCBhcmUgc2FtcGxlZCBhcmUgY29udmVydGVkLlxuICovXG5jbGFzcyBTaW1wbGVTcGFuUHJvY2Vzc29yIHtcbiAgICBjb25zdHJ1Y3RvcihfZXhwb3J0ZXIpIHtcbiAgICAgICAgdGhpcy5fZXhwb3J0ZXIgPSBfZXhwb3J0ZXI7XG4gICAgICAgIHRoaXMuX2lzU2h1dGRvd24gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fc2h1dHRpbmdEb3duUHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgICBmb3JjZUZsdXNoKCkge1xuICAgICAgICAvLyBkbyBub3RoaW5nIGFzIGFsbCBzcGFucyBhcmUgYmVpbmcgZXhwb3J0ZWQgd2l0aG91dCB3YWl0aW5nXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG4gICAgLy8gZG9lcyBub3RoaW5nLlxuICAgIG9uU3RhcnQoX3NwYW4pIHsgfVxuICAgIG9uRW5kKHNwYW4pIHtcbiAgICAgICAgaWYgKHRoaXMuX2lzU2h1dGRvd24pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBwcmV2ZW50IGRvd25zdHJlYW0gZXhwb3J0ZXIgY2FsbHMgZnJvbSBnZW5lcmF0aW5nIHNwYW5zXG4gICAgICAgIGFwaV8xLmNvbnRleHQud2l0aChhcGlfMS5zdXBwcmVzc0luc3RydW1lbnRhdGlvbihhcGlfMS5jb250ZXh0LmFjdGl2ZSgpKSwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fZXhwb3J0ZXIuZXhwb3J0KFtzcGFuXSwgcmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5jb2RlICE9PSBjb3JlXzEuRXhwb3J0UmVzdWx0Q29kZS5TVUNDRVNTKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvcmVfMS5nbG9iYWxFcnJvckhhbmRsZXIoKF9hID0gcmVzdWx0LmVycm9yKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXcgRXJyb3IoYFNpbXBsZVNwYW5Qcm9jZXNzb3I6IHNwYW4gZXhwb3J0IGZhaWxlZCAoc3RhdHVzICR7cmVzdWx0fSlgKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzaHV0ZG93bigpIHtcbiAgICAgICAgaWYgKHRoaXMuX2lzU2h1dGRvd24pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zaHV0dGluZ0Rvd25Qcm9taXNlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2lzU2h1dGRvd24gPSB0cnVlO1xuICAgICAgICB0aGlzLl9zaHV0dGluZ0Rvd25Qcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKClcbiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2V4cG9ydGVyLnNodXRkb3duKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC50aGVuKHJlc29sdmUpXG4gICAgICAgICAgICAgICAgLmNhdGNoKGUgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NodXR0aW5nRG93blByb21pc2U7XG4gICAgfVxufVxuZXhwb3J0cy5TaW1wbGVTcGFuUHJvY2Vzc29yID0gU2ltcGxlU3BhblByb2Nlc3Nvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpbXBsZVNwYW5Qcm9jZXNzb3IuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/SimpleSpanProcessor.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/export/SpanExporter.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/export/SpanExporter.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SpanExporter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L1NwYW5FeHBvcnRlci5qcz9hZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvZXhwb3J0L1NwYW5FeHBvcnRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwYW5FeHBvcnRlci5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/export/SpanExporter.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./Tracer */ \"./node_modules/@opentelemetry/tracing/build/src/Tracer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./BasicTracerProvider */ \"./node_modules/@opentelemetry/tracing/build/src/BasicTracerProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/ConsoleSpanExporter */ \"./node_modules/@opentelemetry/tracing/build/src/export/ConsoleSpanExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/BatchSpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/export/BatchSpanProcessor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/InMemorySpanExporter */ \"./node_modules/@opentelemetry/tracing/build/src/export/InMemorySpanExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/ReadableSpan */ \"./node_modules/@opentelemetry/tracing/build/src/export/ReadableSpan.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/SimpleSpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/export/SimpleSpanProcessor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./export/SpanExporter */ \"./node_modules/@opentelemetry/tracing/build/src/export/SpanExporter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Span */ \"./node_modules/@opentelemetry/tracing/build/src/Span.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpanProcessor */ \"./node_modules/@opentelemetry/tracing/build/src/SpanProcessor.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/tracing/build/src/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvaW5kZXguanM/NjcxOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msb0NBQW9DLGFBQWEsRUFBRSxFQUFFO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGFBQWEsbUJBQU8sQ0FBQywyRUFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMscUdBQXVCO0FBQzVDLGFBQWEsbUJBQU8sQ0FBQyxtSEFBOEI7QUFDbkQsYUFBYSxtQkFBTyxDQUFDLGlIQUE2QjtBQUNsRCxhQUFhLG1CQUFPLENBQUMscUhBQStCO0FBQ3BELGFBQWEsbUJBQU8sQ0FBQyxxR0FBdUI7QUFDNUMsYUFBYSxtQkFBTyxDQUFDLG1IQUE4QjtBQUNuRCxhQUFhLG1CQUFPLENBQUMscUdBQXVCO0FBQzVDLGFBQWEsbUJBQU8sQ0FBQyx1RUFBUTtBQUM3QixhQUFhLG1CQUFPLENBQUMseUZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyx5RUFBUztBQUM5QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS90cmFjaW5nL2J1aWxkL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1RyYWNlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQmFzaWNUcmFjZXJQcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXhwb3J0L0NvbnNvbGVTcGFuRXhwb3J0ZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V4cG9ydC9CYXRjaFNwYW5Qcm9jZXNzb3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V4cG9ydC9Jbk1lbW9yeVNwYW5FeHBvcnRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXhwb3J0L1JlYWRhYmxlU3BhblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXhwb3J0L1NpbXBsZVNwYW5Qcm9jZXNzb3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V4cG9ydC9TcGFuRXhwb3J0ZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1NwYW5cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1NwYW5Qcm9jZXNzb3JcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/types.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvdHlwZXMuanM/ZTM5MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3RyYWNpbmcvYnVpbGQvc3JjL3R5cGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/tracing/build/src/utility.js":
/*!******************************************************************!*\
  !*** ./node_modules/@opentelemetry/tracing/build/src/utility.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeConfig = void 0;\nconst config_1 = __webpack_require__(/*! ./config */ \"./node_modules/@opentelemetry/tracing/build/src/config.js\");\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nfunction mergeConfig(userConfig) {\n    const perInstanceDefaults = {\n        sampler: config_1.buildSamplerFromEnv(),\n    };\n    const target = Object.assign({}, config_1.DEFAULT_CONFIG, perInstanceDefaults, userConfig);\n    target.traceParams = Object.assign({}, config_1.DEFAULT_CONFIG.traceParams, userConfig.traceParams || {});\n    return target;\n}\nexports.mergeConfig = mergeConfig;\n//# sourceMappingURL=utility.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvdXRpbGl0eS5qcz81NDk2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxpQkFBaUIsbUJBQU8sQ0FBQywyRUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DLHlDQUF5QyxtRUFBbUU7QUFDNUc7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvdHJhY2luZy9idWlsZC9zcmMvdXRpbGl0eS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWVyZ2VDb25maWcgPSB2b2lkIDA7XG5jb25zdCBjb25maWdfMSA9IHJlcXVpcmUoXCIuL2NvbmZpZ1wiKTtcbi8qKlxuICogRnVuY3Rpb24gdG8gbWVyZ2UgRGVmYXVsdCBjb25maWd1cmF0aW9uIChhcyBzcGVjaWZpZWQgaW4gJy4vY29uZmlnJykgd2l0aFxuICogdXNlciBwcm92aWRlZCBjb25maWd1cmF0aW9ucy5cbiAqL1xuZnVuY3Rpb24gbWVyZ2VDb25maWcodXNlckNvbmZpZykge1xuICAgIGNvbnN0IHBlckluc3RhbmNlRGVmYXVsdHMgPSB7XG4gICAgICAgIHNhbXBsZXI6IGNvbmZpZ18xLmJ1aWxkU2FtcGxlckZyb21FbnYoKSxcbiAgICB9O1xuICAgIGNvbnN0IHRhcmdldCA9IE9iamVjdC5hc3NpZ24oe30sIGNvbmZpZ18xLkRFRkFVTFRfQ09ORklHLCBwZXJJbnN0YW5jZURlZmF1bHRzLCB1c2VyQ29uZmlnKTtcbiAgICB0YXJnZXQudHJhY2VQYXJhbXMgPSBPYmplY3QuYXNzaWduKHt9LCBjb25maWdfMS5ERUZBVUxUX0NPTkZJRy50cmFjZVBhcmFtcywgdXNlckNvbmZpZy50cmFjZVBhcmFtcyB8fCB7fSk7XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbmV4cG9ydHMubWVyZ2VDb25maWcgPSBtZXJnZUNvbmZpZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxpdHkuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/tracing/build/src/utility.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/StackContextManager.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/StackContextManager.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StackContextManager = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nclass StackContextManager {\n    constructor() {\n        /**\n         * whether the context manager is enabled or not\n         */\n        this._enabled = false;\n        /**\n         * Keeps the reference to current context\n         */\n        this._currentContext = api_1.ROOT_CONTEXT;\n    }\n    /**\n     *\n     * @param target Function to be executed within the context\n     * @param context\n     */\n    _bindFunction(target, context = api_1.ROOT_CONTEXT) {\n        const manager = this;\n        const contextWrapper = function (...args) {\n            return manager.with(context, () => target.apply(this, args));\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    }\n    /**\n     * Returns the active context\n     */\n    active() {\n        return this._currentContext;\n    }\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param target\n     * @param context\n     */\n    bind(target, context = api_1.ROOT_CONTEXT) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(target, context);\n        }\n        return target;\n    }\n    /**\n     * Disable the context manager (clears the current context)\n     */\n    disable() {\n        this._currentContext = api_1.ROOT_CONTEXT;\n        this._enabled = false;\n        return this;\n    }\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    enable() {\n        if (this._enabled) {\n            return this;\n        }\n        this._enabled = true;\n        this._currentContext = api_1.ROOT_CONTEXT;\n        return this;\n    }\n    /**\n     * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n     * The context will be set as active\n     * @param context\n     * @param fn Callback function\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    with(context, fn, thisArg, ...args) {\n        const previousContext = this._currentContext;\n        this._currentContext = context || api_1.ROOT_CONTEXT;\n        try {\n            return fn.call(thisArg, ...args);\n        }\n        finally {\n            this._currentContext = previousContext;\n        }\n    }\n}\nexports.StackContextManager = StackContextManager;\n//# sourceMappingURL=StackContextManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy9TdGFja0NvbnRleHRNYW5hZ2VyLmpzP2IwNjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxnRkFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS93ZWIvYnVpbGQvc3JjL1N0YWNrQ29udGV4dE1hbmFnZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN0YWNrQ29udGV4dE1hbmFnZXIgPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG4vKipcbiAqIFN0YWNrIENvbnRleHQgTWFuYWdlciBmb3IgbWFuYWdpbmcgdGhlIHN0YXRlIGluIHdlYlxuICogaXQgZG9lc24ndCBmdWxseSBzdXBwb3J0IHRoZSBhc3luYyBjYWxscyB0aG91Z2hcbiAqL1xuY2xhc3MgU3RhY2tDb250ZXh0TWFuYWdlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiB3aGV0aGVyIHRoZSBjb250ZXh0IG1hbmFnZXIgaXMgZW5hYmxlZCBvciBub3RcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuX2VuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEtlZXBzIHRoZSByZWZlcmVuY2UgdG8gY3VycmVudCBjb250ZXh0XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLl9jdXJyZW50Q29udGV4dCA9IGFwaV8xLlJPT1RfQ09OVEVYVDtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdGFyZ2V0IEZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIHdpdGhpbiB0aGUgY29udGV4dFxuICAgICAqIEBwYXJhbSBjb250ZXh0XG4gICAgICovXG4gICAgX2JpbmRGdW5jdGlvbih0YXJnZXQsIGNvbnRleHQgPSBhcGlfMS5ST09UX0NPTlRFWFQpIHtcbiAgICAgICAgY29uc3QgbWFuYWdlciA9IHRoaXM7XG4gICAgICAgIGNvbnN0IGNvbnRleHRXcmFwcGVyID0gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBtYW5hZ2VyLndpdGgoY29udGV4dCwgKCkgPT4gdGFyZ2V0LmFwcGx5KHRoaXMsIGFyZ3MpKTtcbiAgICAgICAgfTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvbnRleHRXcmFwcGVyLCAnbGVuZ3RoJywge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogZmFsc2UsXG4gICAgICAgICAgICB2YWx1ZTogdGFyZ2V0Lmxlbmd0aCxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjb250ZXh0V3JhcHBlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgYWN0aXZlIGNvbnRleHRcbiAgICAgKi9cbiAgICBhY3RpdmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jdXJyZW50Q29udGV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQmluZHMgYSB0aGUgY2VydGFpbiBjb250ZXh0IG9yIHRoZSBhY3RpdmUgb25lIHRvIHRoZSB0YXJnZXQgZnVuY3Rpb24gYW5kIHRoZW4gcmV0dXJucyB0aGUgdGFyZ2V0XG4gICAgICogQHBhcmFtIHRhcmdldFxuICAgICAqIEBwYXJhbSBjb250ZXh0XG4gICAgICovXG4gICAgYmluZCh0YXJnZXQsIGNvbnRleHQgPSBhcGlfMS5ST09UX0NPTlRFWFQpIHtcbiAgICAgICAgLy8gaWYgbm8gc3BlY2lmaWMgY29udGV4dCB0byBwcm9wYWdhdGUgaXMgZ2l2ZW4sIHdlIHVzZSB0aGUgY3VycmVudCBvbmVcbiAgICAgICAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29udGV4dCA9IHRoaXMuYWN0aXZlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9iaW5kRnVuY3Rpb24odGFyZ2V0LCBjb250ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEaXNhYmxlIHRoZSBjb250ZXh0IG1hbmFnZXIgKGNsZWFycyB0aGUgY3VycmVudCBjb250ZXh0KVxuICAgICAqL1xuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIHRoaXMuX2N1cnJlbnRDb250ZXh0ID0gYXBpXzEuUk9PVF9DT05URVhUO1xuICAgICAgICB0aGlzLl9lbmFibGVkID0gZmFsc2U7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFbmFibGVzIHRoZSBjb250ZXh0IG1hbmFnZXIgYW5kIGNyZWF0ZXMgYSBkZWZhdWx0KHJvb3QpIGNvbnRleHRcbiAgICAgKi9cbiAgICBlbmFibGUoKSB7XG4gICAgICAgIGlmICh0aGlzLl9lbmFibGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9lbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fY3VycmVudENvbnRleHQgPSBhcGlfMS5ST09UX0NPTlRFWFQ7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxscyB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gW2ZuXSB3aXRoIHRoZSBwcm92aWRlZCBbY29udGV4dF0uIElmIFtjb250ZXh0XSBpcyB1bmRlZmluZWQgdGhlbiBpdCB3aWxsIHVzZSB0aGUgd2luZG93LlxuICAgICAqIFRoZSBjb250ZXh0IHdpbGwgYmUgc2V0IGFzIGFjdGl2ZVxuICAgICAqIEBwYXJhbSBjb250ZXh0XG4gICAgICogQHBhcmFtIGZuIENhbGxiYWNrIGZ1bmN0aW9uXG4gICAgICogQHBhcmFtIHRoaXNBcmcgb3B0aW9uYWwgcmVjZWl2ZXIgdG8gYmUgdXNlZCBmb3IgY2FsbGluZyBmblxuICAgICAqIEBwYXJhbSBhcmdzIG9wdGlvbmFsIGFyZ3VtZW50cyBmb3J3YXJkZWQgdG8gZm5cbiAgICAgKi9cbiAgICB3aXRoKGNvbnRleHQsIGZuLCB0aGlzQXJnLCAuLi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IHByZXZpb3VzQ29udGV4dCA9IHRoaXMuX2N1cnJlbnRDb250ZXh0O1xuICAgICAgICB0aGlzLl9jdXJyZW50Q29udGV4dCA9IGNvbnRleHQgfHwgYXBpXzEuUk9PVF9DT05URVhUO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGZuLmNhbGwodGhpc0FyZywgLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLl9jdXJyZW50Q29udGV4dCA9IHByZXZpb3VzQ29udGV4dDtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuU3RhY2tDb250ZXh0TWFuYWdlciA9IFN0YWNrQ29udGV4dE1hbmFnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdGFja0NvbnRleHRNYW5hZ2VyLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/StackContextManager.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/WebTracerProvider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/WebTracerProvider.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebTracerProvider = void 0;\nconst tracing_1 = __webpack_require__(/*! @opentelemetry/tracing */ \"./node_modules/@opentelemetry/tracing/build/src/index.js\");\nconst StackContextManager_1 = __webpack_require__(/*! ./StackContextManager */ \"./node_modules/@opentelemetry/web/build/src/StackContextManager.js\");\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nclass WebTracerProvider extends tracing_1.BasicTracerProvider {\n    /**\n     * Constructs a new Tracer instance.\n     * @param config Web Tracer config\n     */\n    constructor(config = {}) {\n        super(config);\n        if (config.contextManager) {\n            throw ('contextManager should be defined in register method not in' +\n                ' constructor');\n        }\n        if (config.propagator) {\n            throw 'propagator should be defined in register method not in constructor';\n        }\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    register(config = {}) {\n        if (config.contextManager === undefined) {\n            config.contextManager = new StackContextManager_1.StackContextManager();\n        }\n        if (config.contextManager) {\n            config.contextManager.enable();\n        }\n        super.register(config);\n    }\n}\nexports.WebTracerProvider = WebTracerProvider;\n//# sourceMappingURL=WebTracerProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy9XZWJUcmFjZXJQcm92aWRlci5qcz81YTE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyx3RkFBd0I7QUFDbEQsOEJBQThCLG1CQUFPLENBQUMsaUdBQXVCO0FBQzdEO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3dlYi9idWlsZC9zcmMvV2ViVHJhY2VyUHJvdmlkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldlYlRyYWNlclByb3ZpZGVyID0gdm9pZCAwO1xuY29uc3QgdHJhY2luZ18xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L3RyYWNpbmdcIik7XG5jb25zdCBTdGFja0NvbnRleHRNYW5hZ2VyXzEgPSByZXF1aXJlKFwiLi9TdGFja0NvbnRleHRNYW5hZ2VyXCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHJlcHJlc2VudHMgYSB3ZWIgdHJhY2VyIHdpdGgge0BsaW5rIFN0YWNrQ29udGV4dE1hbmFnZXJ9XG4gKi9cbmNsYXNzIFdlYlRyYWNlclByb3ZpZGVyIGV4dGVuZHMgdHJhY2luZ18xLkJhc2ljVHJhY2VyUHJvdmlkZXIge1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdHMgYSBuZXcgVHJhY2VyIGluc3RhbmNlLlxuICAgICAqIEBwYXJhbSBjb25maWcgV2ViIFRyYWNlciBjb25maWdcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgICAgICBzdXBlcihjb25maWcpO1xuICAgICAgICBpZiAoY29uZmlnLmNvbnRleHRNYW5hZ2VyKSB7XG4gICAgICAgICAgICB0aHJvdyAoJ2NvbnRleHRNYW5hZ2VyIHNob3VsZCBiZSBkZWZpbmVkIGluIHJlZ2lzdGVyIG1ldGhvZCBub3QgaW4nICtcbiAgICAgICAgICAgICAgICAnIGNvbnN0cnVjdG9yJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbmZpZy5wcm9wYWdhdG9yKSB7XG4gICAgICAgICAgICB0aHJvdyAncHJvcGFnYXRvciBzaG91bGQgYmUgZGVmaW5lZCBpbiByZWdpc3RlciBtZXRob2Qgbm90IGluIGNvbnN0cnVjdG9yJztcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWdpc3RlciB0aGlzIFRyYWNlclByb3ZpZGVyIGZvciB1c2Ugd2l0aCB0aGUgT3BlblRlbGVtZXRyeSBBUEkuXG4gICAgICogVW5kZWZpbmVkIHZhbHVlcyBtYXkgYmUgcmVwbGFjZWQgd2l0aCBkZWZhdWx0cywgYW5kXG4gICAgICogbnVsbCB2YWx1ZXMgd2lsbCBiZSBza2lwcGVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbmZpZyBDb25maWd1cmF0aW9uIG9iamVjdCBmb3IgU0RLIHJlZ2lzdHJhdGlvblxuICAgICAqL1xuICAgIHJlZ2lzdGVyKGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIGlmIChjb25maWcuY29udGV4dE1hbmFnZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uZmlnLmNvbnRleHRNYW5hZ2VyID0gbmV3IFN0YWNrQ29udGV4dE1hbmFnZXJfMS5TdGFja0NvbnRleHRNYW5hZ2VyKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbmZpZy5jb250ZXh0TWFuYWdlcikge1xuICAgICAgICAgICAgY29uZmlnLmNvbnRleHRNYW5hZ2VyLmVuYWJsZSgpO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyLnJlZ2lzdGVyKGNvbmZpZyk7XG4gICAgfVxufVxuZXhwb3J0cy5XZWJUcmFjZXJQcm92aWRlciA9IFdlYlRyYWNlclByb3ZpZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2ViVHJhY2VyUHJvdmlkZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/WebTracerProvider.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PerformanceTimingNames = void 0;\nvar PerformanceTimingNames;\n(function (PerformanceTimingNames) {\n    PerformanceTimingNames[\"CONNECT_END\"] = \"connectEnd\";\n    PerformanceTimingNames[\"CONNECT_START\"] = \"connectStart\";\n    PerformanceTimingNames[\"DOM_COMPLETE\"] = \"domComplete\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_END\"] = \"domContentLoadedEventEnd\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_START\"] = \"domContentLoadedEventStart\";\n    PerformanceTimingNames[\"DOM_INTERACTIVE\"] = \"domInteractive\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_END\"] = \"domainLookupEnd\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_START\"] = \"domainLookupStart\";\n    PerformanceTimingNames[\"ENCODED_BODY_SIZE\"] = \"encodedBodySize\";\n    PerformanceTimingNames[\"FETCH_START\"] = \"fetchStart\";\n    PerformanceTimingNames[\"LOAD_EVENT_END\"] = \"loadEventEnd\";\n    PerformanceTimingNames[\"LOAD_EVENT_START\"] = \"loadEventStart\";\n    PerformanceTimingNames[\"NAVIGATION_START\"] = \"navigationStart\";\n    PerformanceTimingNames[\"REDIRECT_END\"] = \"redirectEnd\";\n    PerformanceTimingNames[\"REDIRECT_START\"] = \"redirectStart\";\n    PerformanceTimingNames[\"REQUEST_START\"] = \"requestStart\";\n    PerformanceTimingNames[\"RESPONSE_END\"] = \"responseEnd\";\n    PerformanceTimingNames[\"RESPONSE_START\"] = \"responseStart\";\n    PerformanceTimingNames[\"SECURE_CONNECTION_START\"] = \"secureConnectionStart\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_END\"] = \"unloadEventEnd\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_START\"] = \"unloadEventStart\";\n})(PerformanceTimingNames = exports.PerformanceTimingNames || (exports.PerformanceTimingNames = {}));\n//# sourceMappingURL=PerformanceTimingNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy9lbnVtcy9QZXJmb3JtYW5jZVRpbWluZ05hbWVzLmpzPzMwZjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGlHQUFpRztBQUNsRyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS93ZWIvYnVpbGQvc3JjL2VudW1zL1BlcmZvcm1hbmNlVGltaW5nTmFtZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBlcmZvcm1hbmNlVGltaW5nTmFtZXMgPSB2b2lkIDA7XG52YXIgUGVyZm9ybWFuY2VUaW1pbmdOYW1lcztcbihmdW5jdGlvbiAoUGVyZm9ybWFuY2VUaW1pbmdOYW1lcykge1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJDT05ORUNUX0VORFwiXSA9IFwiY29ubmVjdEVuZFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJDT05ORUNUX1NUQVJUXCJdID0gXCJjb25uZWN0U3RhcnRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiRE9NX0NPTVBMRVRFXCJdID0gXCJkb21Db21wbGV0ZVwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJET01fQ09OVEVOVF9MT0FERURfRVZFTlRfRU5EXCJdID0gXCJkb21Db250ZW50TG9hZGVkRXZlbnRFbmRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiRE9NX0NPTlRFTlRfTE9BREVEX0VWRU5UX1NUQVJUXCJdID0gXCJkb21Db250ZW50TG9hZGVkRXZlbnRTdGFydFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJET01fSU5URVJBQ1RJVkVcIl0gPSBcImRvbUludGVyYWN0aXZlXCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIkRPTUFJTl9MT09LVVBfRU5EXCJdID0gXCJkb21haW5Mb29rdXBFbmRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiRE9NQUlOX0xPT0tVUF9TVEFSVFwiXSA9IFwiZG9tYWluTG9va3VwU3RhcnRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiRU5DT0RFRF9CT0RZX1NJWkVcIl0gPSBcImVuY29kZWRCb2R5U2l6ZVwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJGRVRDSF9TVEFSVFwiXSA9IFwiZmV0Y2hTdGFydFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJMT0FEX0VWRU5UX0VORFwiXSA9IFwibG9hZEV2ZW50RW5kXCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIkxPQURfRVZFTlRfU1RBUlRcIl0gPSBcImxvYWRFdmVudFN0YXJ0XCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIk5BVklHQVRJT05fU1RBUlRcIl0gPSBcIm5hdmlnYXRpb25TdGFydFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJSRURJUkVDVF9FTkRcIl0gPSBcInJlZGlyZWN0RW5kXCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIlJFRElSRUNUX1NUQVJUXCJdID0gXCJyZWRpcmVjdFN0YXJ0XCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIlJFUVVFU1RfU1RBUlRcIl0gPSBcInJlcXVlc3RTdGFydFwiO1xuICAgIFBlcmZvcm1hbmNlVGltaW5nTmFtZXNbXCJSRVNQT05TRV9FTkRcIl0gPSBcInJlc3BvbnNlRW5kXCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIlJFU1BPTlNFX1NUQVJUXCJdID0gXCJyZXNwb25zZVN0YXJ0XCI7XG4gICAgUGVyZm9ybWFuY2VUaW1pbmdOYW1lc1tcIlNFQ1VSRV9DT05ORUNUSU9OX1NUQVJUXCJdID0gXCJzZWN1cmVDb25uZWN0aW9uU3RhcnRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiVU5MT0FEX0VWRU5UX0VORFwiXSA9IFwidW5sb2FkRXZlbnRFbmRcIjtcbiAgICBQZXJmb3JtYW5jZVRpbWluZ05hbWVzW1wiVU5MT0FEX0VWRU5UX1NUQVJUXCJdID0gXCJ1bmxvYWRFdmVudFN0YXJ0XCI7XG59KShQZXJmb3JtYW5jZVRpbWluZ05hbWVzID0gZXhwb3J0cy5QZXJmb3JtYW5jZVRpbWluZ05hbWVzIHx8IChleHBvcnRzLlBlcmZvcm1hbmNlVGltaW5nTmFtZXMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGVyZm9ybWFuY2VUaW1pbmdOYW1lcy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./WebTracerProvider */ \"./node_modules/@opentelemetry/web/build/src/WebTracerProvider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./StackContextManager */ \"./node_modules/@opentelemetry/web/build/src/StackContextManager.js\"), exports);\n__exportStar(__webpack_require__(/*! ./enums/PerformanceTimingNames */ \"./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/@opentelemetry/web/build/src/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/@opentelemetry/web/build/src/utils.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy9pbmRleC5qcz8xOTMwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQ0FBb0MsYUFBYSxFQUFFLEVBQUU7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsYUFBYSxtQkFBTyxDQUFDLDZGQUFxQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMsaUdBQXVCO0FBQzVDLGFBQWEsbUJBQU8sQ0FBQyxtSEFBZ0M7QUFDckQsYUFBYSxtQkFBTyxDQUFDLHFFQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyxxRUFBUztBQUM5QiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS93ZWIvYnVpbGQvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vV2ViVHJhY2VyUHJvdmlkZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1N0YWNrQ29udGV4dE1hbmFnZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2VudW1zL1BlcmZvcm1hbmNlVGltaW5nTmFtZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/index.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/types.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/types.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst PerformanceTimingNames_1 = __webpack_require__(/*! ./enums/PerformanceTimingNames */ \"./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js\");\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvd2ViL2J1aWxkL3NyYy90eXBlcy5qcz9kYzMxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLG1CQUFPLENBQUMsbUhBQWdDO0FBQ3pFIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L3dlYi9idWlsZC9zcmMvdHlwZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5jb25zdCBQZXJmb3JtYW5jZVRpbWluZ05hbWVzXzEgPSByZXF1aXJlKFwiLi9lbnVtcy9QZXJmb3JtYW5jZVRpbWluZ05hbWVzXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/types.js\n");

/***/ }),

/***/ "./node_modules/@opentelemetry/web/build/src/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/@opentelemetry/web/build/src/utils.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldPropagateTraceHeaders = exports.getElementXPath = exports.parseUrl = exports.getResource = exports.sortResources = exports.addSpanNetworkEvents = exports.addSpanNetworkEvent = exports.hasKey = void 0;\nconst PerformanceTimingNames_1 = __webpack_require__(/*! ./enums/PerformanceTimingNames */ \"./node_modules/@opentelemetry/web/build/src/enums/PerformanceTimingNames.js\");\nconst core_1 = __webpack_require__(/*! @opentelemetry/core */ \"./node_modules/@opentelemetry/core/build/src/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"./node_modules/@opentelemetry/semantic-conventions/build/src/index.js\");\n// Used to normalize relative URLs\nlet a;\nconst getUrlNormalizingAnchor = () => {\n    if (!a) {\n        a = document.createElement('a');\n    }\n    return a;\n};\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasKey(obj, key) {\n    return key in obj;\n}\nexports.hasKey = hasKey;\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nfunction addSpanNetworkEvent(span, performanceName, entries) {\n    if (hasKey(entries, performanceName) &&\n        typeof entries[performanceName] === 'number') {\n        span.addEvent(performanceName, entries[performanceName]);\n        return span;\n    }\n    return undefined;\n}\nexports.addSpanNetworkEvent = addSpanNetworkEvent;\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nfunction addSpanNetworkEvents(span, resource) {\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.DOMAIN_LOOKUP_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.DOMAIN_LOOKUP_END, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.CONNECT_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.SECURE_CONNECTION_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.CONNECT_END, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.REQUEST_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_START, resource);\n    addSpanNetworkEvent(span, PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END, resource);\n    const contentLength = resource[PerformanceTimingNames_1.PerformanceTimingNames.ENCODED_BODY_SIZE];\n    if (contentLength !== undefined) {\n        span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH, contentLength);\n    }\n}\nexports.addSpanNetworkEvents = addSpanNetworkEvents;\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nfunction sortResources(filteredResources) {\n    return filteredResources.slice().sort((a, b) => {\n        const valueA = a[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];\n        const valueB = b[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];\n        if (valueA > valueB) {\n            return 1;\n        }\n        else if (valueA < valueB) {\n            return -1;\n        }\n        return 0;\n    });\n}\nexports.sortResources = sortResources;\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nfunction getResource(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources = new WeakSet(), initiatorType) {\n    // de-relativize the URL before usage (does no harm to absolute URLs)\n    const urlNormalizingAnchor = getUrlNormalizingAnchor();\n    urlNormalizingAnchor.href = spanUrl;\n    spanUrl = urlNormalizingAnchor.href;\n    const filteredResources = filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType);\n    if (filteredResources.length === 0) {\n        return {\n            mainRequest: undefined,\n        };\n    }\n    if (filteredResources.length === 1) {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n    const sorted = sortResources(filteredResources.slice());\n    const parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin !== window.location.origin && sorted.length > 1) {\n        let corsPreFlightRequest = sorted[0];\n        let mainRequest = findMainRequest(sorted, corsPreFlightRequest[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END], endTimeHR);\n        const responseEnd = corsPreFlightRequest[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END];\n        const fetchStart = mainRequest[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];\n        // no corsPreFlightRequest\n        if (fetchStart < responseEnd) {\n            mainRequest = corsPreFlightRequest;\n            corsPreFlightRequest = undefined;\n        }\n        return {\n            corsPreFlightRequest,\n            mainRequest,\n        };\n    }\n    else {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n}\nexports.getResource = getResource;\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(resources, corsPreFlightRequestEndTime, spanEndTimeHR) {\n    const spanEndTime = core_1.hrTimeToNanoseconds(spanEndTimeHR);\n    const minTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(corsPreFlightRequestEndTime));\n    let mainRequest = resources[1];\n    let bestGap;\n    const length = resources.length;\n    for (let i = 1; i < length; i++) {\n        const resource = resources[i];\n        const resourceStartTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(resource[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START]));\n        const resourceEndTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(resource[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END]));\n        const currentGap = spanEndTime - resourceEndTime;\n        if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n            bestGap = currentGap;\n            mainRequest = resource;\n        }\n    }\n    return mainRequest;\n}\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    const startTime = core_1.hrTimeToNanoseconds(startTimeHR);\n    const endTime = core_1.hrTimeToNanoseconds(endTimeHR);\n    let filteredResources = resources.filter(resource => {\n        const resourceStartTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(resource[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START]));\n        const resourceEndTime = core_1.hrTimeToNanoseconds(core_1.timeInputToHrTime(resource[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END]));\n        return (resource.initiatorType.toLowerCase() ===\n            (initiatorType || 'xmlhttprequest') &&\n            resource.name === spanUrl &&\n            resourceStartTime >= startTime &&\n            resourceEndTime <= endTime);\n    });\n    if (filteredResources.length > 0) {\n        filteredResources = filteredResources.filter(resource => {\n            return !ignoredResources.has(resource);\n        });\n    }\n    return filteredResources;\n}\n/**\n * Parses url using anchor element\n * @param url\n */\nfunction parseUrl(url) {\n    const a = document.createElement('a');\n    a.href = url;\n    return a;\n}\nexports.parseUrl = parseUrl;\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getElementXPath(target, optimised) {\n    if (target.nodeType === Node.DOCUMENT_NODE) {\n        return '/';\n    }\n    const targetValue = getNodeValue(target, optimised);\n    if (optimised && targetValue.indexOf('@id') > 0) {\n        return targetValue;\n    }\n    let xpath = '';\n    if (target.parentNode) {\n        xpath += getElementXPath(target.parentNode, false);\n    }\n    xpath += targetValue;\n    return xpath;\n}\nexports.getElementXPath = getElementXPath;\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target) {\n    if (!target.parentNode) {\n        return 0;\n    }\n    const allowedTypes = [target.nodeType];\n    if (target.nodeType === Node.CDATA_SECTION_NODE) {\n        allowedTypes.push(Node.TEXT_NODE);\n    }\n    let elements = Array.from(target.parentNode.childNodes);\n    elements = elements.filter((element) => {\n        const localName = element.localName;\n        return (allowedTypes.indexOf(element.nodeType) >= 0 &&\n            localName === target.localName);\n    });\n    if (elements.length >= 1) {\n        return elements.indexOf(target) + 1; // xpath starts from 1\n    }\n    // if there are no other similar child xpath doesn't need index\n    return 0;\n}\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target, optimised) {\n    const nodeType = target.nodeType;\n    const index = getNodeIndex(target);\n    let nodeValue = '';\n    if (nodeType === Node.ELEMENT_NODE) {\n        const id = target.getAttribute('id');\n        if (optimised && id) {\n            return `//*[@id=\"${id}\"]`;\n        }\n        nodeValue = target.localName;\n    }\n    else if (nodeType === Node.TEXT_NODE ||\n        nodeType === Node.CDATA_SECTION_NODE) {\n        nodeValue = 'text()';\n    }\n    else if (nodeType === Node.COMMENT_NODE) {\n        nodeValue = 'comment()';\n    }\n    else {\n        return '';\n    }\n    // if index is 1 it can be omitted in xpath\n    if (nodeValue && index > 1) {\n        return `/${nodeValue}[${index}]`;\n    }\n    return `/${nodeValue}`;\n}\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nfunction shouldPropagateTraceHeaders(spanUrl, propagateTraceHeaderCorsUrls) {\n    let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n    if (typeof propagateTraceHeaderUrls === 'string' ||\n        propagateTraceHeaderUrls instanceof RegExp) {\n        propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n    }\n    const parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin === window.location.origin) {\n        return true;\n    }\n    else {\n        return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl => core_1.urlMatches(spanUrl, propagateTraceHeaderUrl));\n    }\n}\nexports.shouldPropagateTraceHeaders = shouldPropagateTraceHeaders;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@opentelemetry/web/build/src/utils.js\n");

/***/ }),

/***/ "./node_modules/lodash.merge/index.js":
/*!********************************************!*\
  !*** ./node_modules/lodash.merge/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lodash.merge/index.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzP2YyOGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFDQUFxQzs7QUFFckM7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsVUFBVSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/setimmediate/setImmediate.js\n");

/***/ }),

/***/ "./node_modules/shimmer/index.js":
/*!***************************************!*\
  !*** ./node_modules/shimmer/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2hpbW1lci9pbmRleC5qcz83NzZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zaGltbWVyL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24gKGZ1bmt0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgZnVua3Rpb24gPT09ICdmdW5jdGlvbidcbn1cblxuLy8gRGVmYXVsdCB0byBjb21wbGFpbmluZyBsb3VkbHkgd2hlbiB0aGluZ3MgZG9uJ3QgZ28gYWNjb3JkaW5nIHRvIHBsYW4uXG52YXIgbG9nZ2VyID0gY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUpXG5cbi8vIFNldHMgYSBwcm9wZXJ0eSBvbiBhbiBvYmplY3QsIHByZXNlcnZpbmcgaXRzIGVudW1lcmFiaWxpdHkuXG4vLyBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgcHJvcGVydHkgaXMgYWxyZWFkeSB3cml0YWJsZS5cbmZ1bmN0aW9uIGRlZmluZVByb3BlcnR5IChvYmosIG5hbWUsIHZhbHVlKSB7XG4gIHZhciBlbnVtZXJhYmxlID0gISFvYmpbbmFtZV0gJiYgb2JqLnByb3BlcnR5SXNFbnVtZXJhYmxlKG5hbWUpXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIG5hbWUsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZW51bWVyYWJsZTogZW51bWVyYWJsZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfSlcbn1cblxuLy8gS2VlcCBpbml0aWFsaXphdGlvbiBpZGVtcG90ZW50LlxuZnVuY3Rpb24gc2hpbW1lciAob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmxvZ2dlcikge1xuICAgIGlmICghaXNGdW5jdGlvbihvcHRpb25zLmxvZ2dlcikpIGxvZ2dlcihcIm5ldyBsb2dnZXIgaXNuJ3QgYSBmdW5jdGlvbiwgbm90IHJlcGxhY2luZ1wiKVxuICAgIGVsc2UgbG9nZ2VyID0gb3B0aW9ucy5sb2dnZXJcbiAgfVxufVxuXG5mdW5jdGlvbiB3cmFwIChub2R1bGUsIG5hbWUsIHdyYXBwZXIpIHtcbiAgaWYgKCFub2R1bGUgfHwgIW5vZHVsZVtuYW1lXSkge1xuICAgIGxvZ2dlcignbm8gb3JpZ2luYWwgZnVuY3Rpb24gJyArIG5hbWUgKyAnIHRvIHdyYXAnKVxuICAgIHJldHVyblxuICB9XG5cbiAgaWYgKCF3cmFwcGVyKSB7XG4gICAgbG9nZ2VyKCdubyB3cmFwcGVyIGZ1bmN0aW9uJylcbiAgICBsb2dnZXIoKG5ldyBFcnJvcigpKS5zdGFjaylcbiAgICByZXR1cm5cbiAgfVxuXG4gIGlmICghaXNGdW5jdGlvbihub2R1bGVbbmFtZV0pIHx8ICFpc0Z1bmN0aW9uKHdyYXBwZXIpKSB7XG4gICAgbG9nZ2VyKCdvcmlnaW5hbCBvYmplY3QgYW5kIHdyYXBwZXIgbXVzdCBiZSBmdW5jdGlvbnMnKVxuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIG9yaWdpbmFsID0gbm9kdWxlW25hbWVdXG4gIHZhciB3cmFwcGVkID0gd3JhcHBlcihvcmlnaW5hbCwgbmFtZSlcblxuICBkZWZpbmVQcm9wZXJ0eSh3cmFwcGVkLCAnX19vcmlnaW5hbCcsIG9yaWdpbmFsKVxuICBkZWZpbmVQcm9wZXJ0eSh3cmFwcGVkLCAnX191bndyYXAnLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKG5vZHVsZVtuYW1lXSA9PT0gd3JhcHBlZCkgZGVmaW5lUHJvcGVydHkobm9kdWxlLCBuYW1lLCBvcmlnaW5hbClcbiAgfSlcbiAgZGVmaW5lUHJvcGVydHkod3JhcHBlZCwgJ19fd3JhcHBlZCcsIHRydWUpXG5cbiAgZGVmaW5lUHJvcGVydHkobm9kdWxlLCBuYW1lLCB3cmFwcGVkKVxuICByZXR1cm4gd3JhcHBlZFxufVxuXG5mdW5jdGlvbiBtYXNzV3JhcCAobm9kdWxlcywgbmFtZXMsIHdyYXBwZXIpIHtcbiAgaWYgKCFub2R1bGVzKSB7XG4gICAgbG9nZ2VyKCdtdXN0IHByb3ZpZGUgb25lIG9yIG1vcmUgbW9kdWxlcyB0byBwYXRjaCcpXG4gICAgbG9nZ2VyKChuZXcgRXJyb3IoKSkuc3RhY2spXG4gICAgcmV0dXJuXG4gIH0gZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkobm9kdWxlcykpIHtcbiAgICBub2R1bGVzID0gW25vZHVsZXNdXG4gIH1cblxuICBpZiAoIShuYW1lcyAmJiBBcnJheS5pc0FycmF5KG5hbWVzKSkpIHtcbiAgICBsb2dnZXIoJ211c3QgcHJvdmlkZSBvbmUgb3IgbW9yZSBmdW5jdGlvbnMgdG8gd3JhcCBvbiBtb2R1bGVzJylcbiAgICByZXR1cm5cbiAgfVxuXG4gIG5vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kdWxlKSB7XG4gICAgbmFtZXMuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgd3JhcChub2R1bGUsIG5hbWUsIHdyYXBwZXIpXG4gICAgfSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gdW53cmFwIChub2R1bGUsIG5hbWUpIHtcbiAgaWYgKCFub2R1bGUgfHwgIW5vZHVsZVtuYW1lXSkge1xuICAgIGxvZ2dlcignbm8gZnVuY3Rpb24gdG8gdW53cmFwLicpXG4gICAgbG9nZ2VyKChuZXcgRXJyb3IoKSkuc3RhY2spXG4gICAgcmV0dXJuXG4gIH1cblxuICBpZiAoIW5vZHVsZVtuYW1lXS5fX3Vud3JhcCkge1xuICAgIGxvZ2dlcignbm8gb3JpZ2luYWwgdG8gdW53cmFwIHRvIC0tIGhhcyAnICsgbmFtZSArICcgYWxyZWFkeSBiZWVuIHVud3JhcHBlZD8nKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBub2R1bGVbbmFtZV0uX191bndyYXAoKVxuICB9XG59XG5cbmZ1bmN0aW9uIG1hc3NVbndyYXAgKG5vZHVsZXMsIG5hbWVzKSB7XG4gIGlmICghbm9kdWxlcykge1xuICAgIGxvZ2dlcignbXVzdCBwcm92aWRlIG9uZSBvciBtb3JlIG1vZHVsZXMgdG8gcGF0Y2gnKVxuICAgIGxvZ2dlcigobmV3IEVycm9yKCkpLnN0YWNrKVxuICAgIHJldHVyblxuICB9IGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KG5vZHVsZXMpKSB7XG4gICAgbm9kdWxlcyA9IFtub2R1bGVzXVxuICB9XG5cbiAgaWYgKCEobmFtZXMgJiYgQXJyYXkuaXNBcnJheShuYW1lcykpKSB7XG4gICAgbG9nZ2VyKCdtdXN0IHByb3ZpZGUgb25lIG9yIG1vcmUgZnVuY3Rpb25zIHRvIHVud3JhcCBvbiBtb2R1bGVzJylcbiAgICByZXR1cm5cbiAgfVxuXG4gIG5vZHVsZXMuZm9yRWFjaChmdW5jdGlvbiAobm9kdWxlKSB7XG4gICAgbmFtZXMuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgdW53cmFwKG5vZHVsZSwgbmFtZSlcbiAgICB9KVxuICB9KVxufVxuXG5zaGltbWVyLndyYXAgPSB3cmFwXG5zaGltbWVyLm1hc3NXcmFwID0gbWFzc1dyYXBcbnNoaW1tZXIudW53cmFwID0gdW53cmFwXG5zaGltbWVyLm1hc3NVbndyYXAgPSBtYXNzVW53cmFwXG5cbm1vZHVsZS5leHBvcnRzID0gc2hpbW1lclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/shimmer/index.js\n");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcz81MTE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxtQkFBTyxDQUFDLGlFQUFjO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHNjb3BlID0gKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsKSB8fFxuICAgICAgICAgICAgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYpIHx8XG4gICAgICAgICAgICB3aW5kb3c7XG52YXIgYXBwbHkgPSBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7XG5cbi8vIERPTSBBUElzLCBmb3IgY29tcGxldGVuZXNzXG5cbmV4cG9ydHMuc2V0VGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRUaW1lb3V0LCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbChzY29wZSwgdGhpcy5faWQpO1xufTtcblxuLy8gRG9lcyBub3Qgc3RhcnQgdGhlIHRpbWUsIGp1c3Qgc2V0cyB1cCB0aGUgbWVtYmVycyBuZWVkZWQuXG5leHBvcnRzLmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0sIG1zZWNzKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSBtc2Vjcztcbn07XG5cbmV4cG9ydHMudW5lbnJvbGwgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSAtMTtcbn07XG5cbmV4cG9ydHMuX3VucmVmQWN0aXZlID0gZXhwb3J0cy5hY3RpdmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcblxuICB2YXIgbXNlY3MgPSBpdGVtLl9pZGxlVGltZW91dDtcbiAgaWYgKG1zZWNzID49IDApIHtcbiAgICBpdGVtLl9pZGxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICBpZiAoaXRlbS5fb25UaW1lb3V0KVxuICAgICAgICBpdGVtLl9vblRpbWVvdXQoKTtcbiAgICB9LCBtc2Vjcyk7XG4gIH1cbn07XG5cbi8vIHNldGltbWVkaWF0ZSBhdHRhY2hlcyBpdHNlbGYgdG8gdGhlIGdsb2JhbCBvYmplY3RcbnJlcXVpcmUoXCJzZXRpbW1lZGlhdGVcIik7XG4vLyBPbiBzb21lIGV4b3RpYyBlbnZpcm9ubWVudHMsIGl0J3Mgbm90IGNsZWFyIHdoaWNoIG9iamVjdCBgc2V0aW1tZWRpYXRlYCB3YXNcbi8vIGFibGUgdG8gaW5zdGFsbCBvbnRvLiAgU2VhcmNoIGVhY2ggcG9zc2liaWxpdHkgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlXG4vLyBgc2V0aW1tZWRpYXRlYCBsaWJyYXJ5LlxuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuc2V0SW1tZWRpYXRlKTtcbmV4cG9ydHMuY2xlYXJJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5jbGVhckltbWVkaWF0ZSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/timers-browserify/main.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2NlZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9tb2R1bGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./node_modules/zone.js/fesm2015/zone.js":
/*!***********************************************!*\
  !*** ./node_modules/zone.js/fesm2015/zone.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/zone.js/fesm2015/zone.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/tracing */ \"./node_modules/@opentelemetry/tracing/build/src/index.js\");\n/* harmony import */ var _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"./node_modules/@opentelemetry/api/build/src/index.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _opentelemetry_exporter_collector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/exporter-collector */ \"./node_modules/@opentelemetry/exporter-collector/build/src/index.js\");\n/* harmony import */ var _opentelemetry_exporter_collector__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_exporter_collector__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _opentelemetry_instrumentation_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @opentelemetry/instrumentation-fetch */ \"./node_modules/@opentelemetry/instrumentation-fetch/build/src/index.js\");\n/* harmony import */ var _opentelemetry_instrumentation_fetch__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_instrumentation_fetch__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _opentelemetry_web__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @opentelemetry/web */ \"./node_modules/@opentelemetry/web/build/src/index.js\");\n/* harmony import */ var _opentelemetry_web__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_web__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _opentelemetry_context_zone__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @opentelemetry/context-zone */ \"./node_modules/@opentelemetry/context-zone/build/src/index.js\");\n/* harmony import */ var _opentelemetry_context_zone__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_context_zone__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _opentelemetry_instrumentation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @opentelemetry/instrumentation */ \"./node_modules/@opentelemetry/instrumentation/build/src/index.js\");\n/* harmony import */ var _opentelemetry_instrumentation__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_opentelemetry_instrumentation__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\n\nconst provider = new _opentelemetry_web__WEBPACK_IMPORTED_MODULE_4__[\"WebTracerProvider\"]();\nconst window = global.window;\nprovider.addSpanProcessor(new _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSpanProcessor\"](new _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_0__[\"ConsoleSpanExporter\"]()));\nprovider.addSpanProcessor(new _opentelemetry_tracing__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSpanProcessor\"](new _opentelemetry_exporter_collector__WEBPACK_IMPORTED_MODULE_2__[\"CollectorTraceExporter\"]()));\nprovider.register({\n  contextManager: new _opentelemetry_context_zone__WEBPACK_IMPORTED_MODULE_5__[\"ZoneContextManager\"]()\n});\nObject(_opentelemetry_instrumentation__WEBPACK_IMPORTED_MODULE_6__[\"registerInstrumentations\"])({\n  instrumentations: [new _opentelemetry_instrumentation_fetch__WEBPACK_IMPORTED_MODULE_3__[\"FetchInstrumentation\"]({\n    ignoreUrls: [/localhost:8090\\/sockjs-node/],\n    propagateTraceHeaderCorsUrls: ['https://cors-test.appspot.com/test', 'https://httpbin.org/get'],\n    clearTimingResources: true\n  })]\n});\nconst webTracerWithZone = provider.getTracer('otel-demo-web');\n\nconst getData = url => fetch(url, {\n  method: 'GET',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\n\nconst singleSpan = webTracerWithZone.startSpan(`files-series-info`, {\n  root: true\n});\n_opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__[\"context\"].with(_opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__[\"context\"].setSpan(_opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__[\"context\"].active(), singleSpan), () => {\n  getData(url).then(_data => {\n    _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__[\"trace\"].getSpan(_opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__[\"context\"].active()).addEvent('fetching-single-span-completed');\n    singleSpan.end();\n  });\n});\ngetData('/');\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJuYW1lcyI6WyJwcm92aWRlciIsIldlYlRyYWNlclByb3ZpZGVyIiwid2luZG93IiwiZ2xvYmFsIiwiYWRkU3BhblByb2Nlc3NvciIsIlNpbXBsZVNwYW5Qcm9jZXNzb3IiLCJDb25zb2xlU3BhbkV4cG9ydGVyIiwiQ29sbGVjdG9yVHJhY2VFeHBvcnRlciIsInJlZ2lzdGVyIiwiY29udGV4dE1hbmFnZXIiLCJab25lQ29udGV4dE1hbmFnZXIiLCJyZWdpc3Rlckluc3RydW1lbnRhdGlvbnMiLCJpbnN0cnVtZW50YXRpb25zIiwiRmV0Y2hJbnN0cnVtZW50YXRpb24iLCJpZ25vcmVVcmxzIiwicHJvcGFnYXRlVHJhY2VIZWFkZXJDb3JzVXJscyIsImNsZWFyVGltaW5nUmVzb3VyY2VzIiwid2ViVHJhY2VyV2l0aFpvbmUiLCJnZXRUcmFjZXIiLCJnZXREYXRhIiwidXJsIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwic2luZ2xlU3BhbiIsInN0YXJ0U3BhbiIsInJvb3QiLCJjb250ZXh0Iiwid2l0aCIsInNldFNwYW4iLCJhY3RpdmUiLCJ0aGVuIiwiX2RhdGEiLCJ0cmFjZSIsImdldFNwYW4iLCJhZGRFdmVudCIsImVuZCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWE7O0FBRWI7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxNQUFNQSxRQUFRLEdBQUcsSUFBSUMsb0VBQUosRUFBakI7QUFDQSxNQUFNQyxNQUFNLEdBQUdDLE1BQU0sQ0FBQ0QsTUFBdEI7QUFDQUYsUUFBUSxDQUFDSSxnQkFBVCxDQUEwQixJQUFJQywwRUFBSixDQUF3QixJQUFJQywwRUFBSixFQUF4QixDQUExQjtBQUNBTixRQUFRLENBQUNJLGdCQUFULENBQTBCLElBQUlDLDBFQUFKLENBQXdCLElBQUlFLHdGQUFKLEVBQXhCLENBQTFCO0FBQ0FQLFFBQVEsQ0FBQ1EsUUFBVCxDQUFrQjtBQUNoQkMsZ0JBQWMsRUFBRSxJQUFJQyw4RUFBSjtBQURBLENBQWxCO0FBSUFDLCtGQUF3QixDQUFDO0FBQ3ZCQyxrQkFBZ0IsRUFBRSxDQUNoQixJQUFJQyx5RkFBSixDQUF5QjtBQUN2QkMsY0FBVSxFQUFFLENBQUMsNkJBQUQsQ0FEVztBQUV2QkMsZ0NBQTRCLEVBQUUsQ0FDNUIsb0NBRDRCLEVBRTVCLHlCQUY0QixDQUZQO0FBTXZCQyx3QkFBb0IsRUFBRTtBQU5DLEdBQXpCLENBRGdCO0FBREssQ0FBRCxDQUF4QjtBQWFBLE1BQU1DLGlCQUFpQixHQUFHakIsUUFBUSxDQUFDa0IsU0FBVCxDQUFtQixlQUFuQixDQUExQjs7QUFFQSxNQUFNQyxPQUFPLEdBQUlDLEdBQUQsSUFBU0MsS0FBSyxDQUFDRCxHQUFELEVBQU07QUFDbENFLFFBQU0sRUFBRSxLQUQwQjtBQUVsQ0MsU0FBTyxFQUFFO0FBQ1AsY0FBVSxrQkFESDtBQUVQLG9CQUFnQjtBQUZUO0FBRnlCLENBQU4sQ0FBOUI7O0FBUUEsTUFBTUMsVUFBVSxHQUFHUCxpQkFBaUIsQ0FBQ1EsU0FBbEIsQ0FBNkIsbUJBQTdCLEVBQWlEO0FBQ2xFQyxNQUFJLEVBQUU7QUFENEQsQ0FBakQsQ0FBbkI7QUFHQUMsMERBQU8sQ0FBQ0MsSUFBUixDQUFhRCwwREFBTyxDQUFDRSxPQUFSLENBQWdCRiwwREFBTyxDQUFDRyxNQUFSLEVBQWhCLEVBQWtDTixVQUFsQyxDQUFiLEVBQTRELE1BQU07QUFDOURMLFNBQU8sQ0FBQ0MsR0FBRCxDQUFQLENBQWFXLElBQWIsQ0FBbUJDLEtBQUQsSUFBVztBQUN6QkMsNERBQUssQ0FBQ0MsT0FBTixDQUFjUCwwREFBTyxDQUFDRyxNQUFSLEVBQWQsRUFBZ0NLLFFBQWhDLENBQXlDLGdDQUF6QztBQUNBWCxjQUFVLENBQUNZLEdBQVg7QUFDSCxHQUhEO0FBSUgsQ0FMRDtBQU9BakIsT0FBTyxDQUFDLEdBQUQsQ0FBUCxDIiwiZmlsZSI6Ii4vc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBDb25zb2xlU3BhbkV4cG9ydGVyLCBTaW1wbGVTcGFuUHJvY2Vzc29yIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvdHJhY2luZyc7XG5pbXBvcnQgeyBjb250ZXh0LCB0cmFjZSB9IGZyb20gJ0BvcGVudGVsZW1ldHJ5L2FwaSc7XG5cbmltcG9ydCB7IENvbGxlY3RvclRyYWNlRXhwb3J0ZXIgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9leHBvcnRlci1jb2xsZWN0b3InO1xuaW1wb3J0IHsgRmV0Y2hJbnN0cnVtZW50YXRpb24gfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZmV0Y2gnO1xuaW1wb3J0IHsgV2ViVHJhY2VyUHJvdmlkZXIgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS93ZWInO1xuaW1wb3J0IHsgWm9uZUNvbnRleHRNYW5hZ2VyIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvY29udGV4dC16b25lJztcbmltcG9ydCB7IHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9ucyB9IGZyb20gJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbic7XG5cbmNvbnN0IHByb3ZpZGVyID0gbmV3IFdlYlRyYWNlclByb3ZpZGVyKCk7XG5jb25zdCB3aW5kb3cgPSBnbG9iYWwud2luZG93O1xucHJvdmlkZXIuYWRkU3BhblByb2Nlc3NvcihuZXcgU2ltcGxlU3BhblByb2Nlc3NvcihuZXcgQ29uc29sZVNwYW5FeHBvcnRlcigpKSk7XG5wcm92aWRlci5hZGRTcGFuUHJvY2Vzc29yKG5ldyBTaW1wbGVTcGFuUHJvY2Vzc29yKG5ldyBDb2xsZWN0b3JUcmFjZUV4cG9ydGVyKCkpKTtcbnByb3ZpZGVyLnJlZ2lzdGVyKHtcbiAgY29udGV4dE1hbmFnZXI6IG5ldyBab25lQ29udGV4dE1hbmFnZXIoKVxufSk7XG5cbnJlZ2lzdGVySW5zdHJ1bWVudGF0aW9ucyh7XG4gIGluc3RydW1lbnRhdGlvbnM6IFtcbiAgICBuZXcgRmV0Y2hJbnN0cnVtZW50YXRpb24oe1xuICAgICAgaWdub3JlVXJsczogWy9sb2NhbGhvc3Q6ODA5MFxcL3NvY2tqcy1ub2RlL10sXG4gICAgICBwcm9wYWdhdGVUcmFjZUhlYWRlckNvcnNVcmxzOiBbXG4gICAgICAgICdodHRwczovL2NvcnMtdGVzdC5hcHBzcG90LmNvbS90ZXN0JyxcbiAgICAgICAgJ2h0dHBzOi8vaHR0cGJpbi5vcmcvZ2V0JyxcbiAgICAgIF0sXG4gICAgICBjbGVhclRpbWluZ1Jlc291cmNlczogdHJ1ZSxcbiAgICB9KSxcbiAgXSxcbn0pO1xuXG5jb25zdCB3ZWJUcmFjZXJXaXRoWm9uZSA9IHByb3ZpZGVyLmdldFRyYWNlcignb3RlbC1kZW1vLXdlYicpO1xuXG5jb25zdCBnZXREYXRhID0gKHVybCkgPT4gZmV0Y2godXJsLCB7XG4gIG1ldGhvZDogJ0dFVCcsXG4gIGhlYWRlcnM6IHtcbiAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gIH0sXG59KTtcblxuY29uc3Qgc2luZ2xlU3BhbiA9IHdlYlRyYWNlcldpdGhab25lLnN0YXJ0U3BhbihgZmlsZXMtc2VyaWVzLWluZm9gLCB7XG4gIHJvb3Q6IHRydWVcbn0pO1xuY29udGV4dC53aXRoKGNvbnRleHQuc2V0U3Bhbihjb250ZXh0LmFjdGl2ZSgpLCBzaW5nbGVTcGFuKSwgKCkgPT4ge1xuICAgIGdldERhdGEodXJsKS50aGVuKChfZGF0YSkgPT4ge1xuICAgICAgICB0cmFjZS5nZXRTcGFuKGNvbnRleHQuYWN0aXZlKCkpLmFkZEV2ZW50KCdmZXRjaGluZy1zaW5nbGUtc3Bhbi1jb21wbGV0ZWQnKTtcbiAgICAgICAgc2luZ2xlU3Bhbi5lbmQoKTtcbiAgICB9KTtcbn0pO1xuXG5nZXREYXRhKCcvJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ });